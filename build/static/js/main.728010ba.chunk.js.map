{"version":3,"sources":["store/User/actionTypes.ts","store/User/actionCreators.ts","store/Notification/actionTypes.ts","store/Notification/actionCreators.ts","typeGuards.ts","store/Product/actionTypes.ts","store/Product/reducer.ts","store/User/reducer.ts","store/Notification/reducer.ts","store/rootReducer.ts","services/userService.ts","forms/User/LogInForm.tsx","modals/LogInModal.tsx","services/productService.ts","forms/product/AddProductForm.tsx","store/Product/actionCreators.ts","modals/AddProductModal.tsx","forms/User/CreateUserForm.tsx","modals/CreateUserModal.tsx","components/Navibar.tsx","components/Product.tsx","components/ProductListPage.tsx","UI/Notification.tsx","App.tsx","index.tsx"],"names":["LOG_IN","logIn","data","action","type","actionTypes","dispatch","SET_NOTIFICATION","HIDE_NOTIFICATION","setNotification","notificationType","object","hideNotification","ADD_PRODUCT","GET_PRODUCTS","REMOVE_PRODUCT","initialState","products","reducer","state","concat","filter","product","user","message","visible","rootReducer","combineReducers","productReducer","userReducer","notificationReducer","store","configureStore","useAppDispatch","useDispatch","useAppSelector","useSelector","signIn","username","password","a","axios","post","request","createUser","useStyles","makeStyles","field","padding","left","borderColor","position","marginBottom","width","button","display","alignItems","paddingRight","transform","borderWidth","borderRadius","height","opacity","backgroundColor","fontSize","fontStyle","color","SignupSchema","Yup","shape","userName","min","max","required","LogInForm","classes","initialValues","validationSchema","onSubmit","values","userService","then","res","undefined","token","setTimeout","credentials","firstName","lastName","userType","errors","touched","Grid","container","spacing","item","xs","className","placeholder","name","getModalStyle","top","theme","modal","justifyContent","paper","palette","background","boxShadow","shadows","header","border","textAlign","marginTop","Header","LogInModal","modalOpen","setModalOpen","useState","modalStyle","Modal","aria-labelledby","aria-describedby","open","onClose","style","getAll","get","response","addProduct","deleteProduct","delete","id","maxWidth","description","price","stock","image","AddProductForm","productService","addedProduct","AddProductModal","email","CreateUserForm","newUser","CreateUserModal","menuButton","marginRight","title","buttons","marginLeft","login","margin","addProductIcon","Navibar","loginModalOpen","setLoginModalOpen","createUserModalOpen","setCreateUserModalOpen","addProductModalOpen","setAddProductModalOpen","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","onClick","Tooltip","Button","root","media","Product","removeProduct","text","Card","CardActionArea","CardMedia","CardContent","gutterBottom","component","CardActions","size","paddingLeft","ProductListPage","length","map","Alert","elevation","severity","Notification","App","useEffect","notification","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.728010ba.chunk.js","sourcesContent":["export const LOG_IN = \"LOG_IN\";\r\nexport const CREATE_USER = \"CREATE_USER\";","import * as actionTypes from \"./actionTypes\";\r\n\r\ntype Login = (dispatch: DispatchType) => void;\r\n\r\nexport const logIn = (data: Credentials | null): Login => {\r\n  const action: LogInAction = {\r\n    type: actionTypes.LOG_IN,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","export const SET_NOTIFICATION = \"SET_NOTIFICATION\";\r\nexport const HIDE_NOTIFICATION = \"HIDE_NOTIFICATION\";","import * as actionTypes from \"./actionTypes\";\r\nimport { NotificationTypeCheck } from '../../typeGuards';\r\n\r\ntype SetNotification = (dispatch: DispatchType) => void;\r\n\r\nexport const setNotification = (data: string, notificationType: NotificationType): SetNotification => {\r\n  if (NotificationTypeCheck(notificationType)) {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.SET_NOTIFICATION,\r\n      notificationType: notificationType,\r\n      data,\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n  }\r\n  else {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.SET_NOTIFICATION,\r\n      notificationType: 'error',\r\n      data,\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n  }\r\n};\r\n\r\nexport const hideNotification = (): SetNotification => {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.HIDE_NOTIFICATION,\r\n      notificationType: 'error',\r\n      data: '',\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n};","export const NotificationTypeCheck = (object: unknown): object is NotificationType => {\r\n  if (object === 'error' || object === 'info' || object === 'success') {\r\n    return true;\r\n  }\r\n  return false;\r\n};","export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: ProductState = {\r\n  products: []\r\n};\r\n\r\nconst reducer = (state: ProductState = initialState, action: GetProductsAction | AddProductAction): ProductState => {\r\n    \r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.data as Product[]\r\n      };\r\n\r\n    case actionTypes.ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.concat(action.data)\r\n      };\r\n\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(product => product !== action.data)\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: UserState = {\r\n  user: null\r\n};\r\n\r\nconst reducer = (state: UserState = initialState, action: LogInAction): UserState => {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.LOG_IN:\r\n      return {\r\n        ...state,\r\n        user: action.data\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: NotificationState = {\r\n  message: '',\r\n  type: 'error',\r\n  visible: false\r\n};\r\n\r\nconst reducer = (state: NotificationState = initialState, action: SetNotificationAction): NotificationState => {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.SET_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        message: action.data,\r\n        type: action.notificationType,\r\n        visible: true\r\n      };\r\n    case actionTypes.HIDE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        message: '',\r\n        type: action.notificationType,\r\n        visible: false\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\";\r\nimport { useDispatch, useSelector, TypedUseSelectorHook } from \"react-redux\";\r\nimport productReducer from './Product/reducer';\r\nimport userReducer from './User/reducer';\r\nimport notificationReducer from './Notification/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  productReducer,\r\n  userReducer,\r\n  notificationReducer\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = (): AppDispatch  => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default store;","import axios from 'axios';\r\n\r\nconst signIn = async (username: string, password: string):Promise<Credentials> => {\r\n  const request = await axios.post<Credentials>('https://verkkis.herokuapp.com/api/login', { username, password });\r\n  return request.data;\r\n};\r\n\r\nconst createUser = async (user: CreateUserInput):Promise<User> => {\r\n  const request = await axios.post<User>('https://verkkis.herokuapp.com/api/users', user);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  signIn,\r\n  createUser,\r\n};","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport { AppDispatch, useAppDispatch } from '../../store/rootReducer';\r\nimport userService from '../../services/userService';\r\nimport { logIn } from '../../store/User/actionCreators';\r\nimport { setNotification, hideNotification } from '../../store/Notification/actionCreators';\r\n \r\nconst useStyles = makeStyles({\r\n  field: {\r\n    padding: 5,\r\n    left: 10,\r\n    borderColor: '#124eb0',\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    width: '90%',\r\n  },\r\n\r\n  button: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    padding: 20,\r\n    paddingRight: 5,\r\n    left: '38%',\r\n    transform: `translate(-50%, -$50%)`,\r\n    borderWidth: 3,\r\n    borderRadius: 35,      \r\n    width: 92,\r\n    height: 20,\r\n    opacity: 0.95,\r\n    backgroundColor: '#124eb0',\r\n    fontSize: 16,\r\n    fontStyle: 'bold',\r\n    color: 'white'  \r\n  },\r\n});\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  userName: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n\r\n  password: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n});\r\n \r\nconst LogInForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const user = userService.signIn(values.userName, values.password);\r\n          void user.then((res) => {\r\n            if (res.token === undefined) {\r\n              const text = \"Invalid username / password\";\r\n              const notificationType: NotificationType = 'error';\r\n              dispatch(setNotification(text, notificationType));\r\n              setTimeout(() => {\r\n                dispatch(hideNotification());\r\n              }, 5000);\r\n            } else {\r\n              const credentials: Credentials = {\r\n                firstName: res.firstName,\r\n                lastName: res.lastName,\r\n                userName: res.userName,\r\n                userType: res.userType,\r\n                token: res.token,\r\n              };\r\n              dispatch(logIn(credentials));\r\n              const text = \"Logged in as: \" + credentials.userName;\r\n              const notificationType: NotificationType = 'success';\r\n              dispatch(setNotification(text, notificationType));\r\n              setTimeout(() => {\r\n                dispatch(hideNotification());\r\n              }, 5000);\r\n            }\r\n          });\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Username: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.userName && touched.userName ? (\r\n                    <div>{errors.userName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.password && touched.password ? (\r\n                    <div>{errors.password}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n );\r\n};\r\n\r\n export default LogInForm;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport LogInForm from '../forms/User/LogInForm';\r\n\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n  paper: {\r\n      position: 'absolute',\r\n      width: 450,\r\n      height: 170,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: '0 30px',\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <h2 className={classes.header}> Log In</h2>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  setModalOpen: (values: boolean) => void;\r\n  modalOpen: boolean\r\n}\r\n\r\nconst LogInModal: React.FC<Props> = ({ modalOpen, setModalOpen }) => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const handleClose = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <LogInForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LogInModal;","import axios from 'axios';\r\n\r\nconst getAll = ():Promise<Product[]> => {\r\n  const request = axios.get<Product[]>('https://verkkis.herokuapp.com/api/products');\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst addProduct = async (product: NoIdProduct):Promise<Product> => {\r\n  const request = await axios.post<Product>('https://verkkis.herokuapp.com/api/products', product);\r\n  return request.data;\r\n};\r\n\r\nconst deleteProduct = async (product: Product): Promise<Product> => {\r\n  const request = await axios.delete<Product>(`https://verkkis.herokuapp.com/api/products/${product.id}`);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  addProduct,\r\n  deleteProduct\r\n};","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport { AppDispatch, useAppDispatch } from '../../store/rootReducer';\r\nimport productService from '../../services/productService';\r\nimport { addProduct } from '../../store/Product/actionCreators';\r\nimport { setNotification, hideNotification } from '../../store/Notification/actionCreators';\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    padding: 5,\r\n    borderColor: '#124eb0',\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    width: '90%',\r\n    maxWidth: 700\r\n  },\r\n  \r\n  button: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    padding: 20,\r\n    paddingRight: 75,\r\n    marginTop: 10,\r\n    left: '38%',\r\n    transform: `translate(-50%, -$50%)`,\r\n    borderWidth: 3,\r\n    borderRadius: 35,      \r\n    width: 92,\r\n    height: 20,\r\n    opacity: 0.95,\r\n    backgroundColor: '#124eb0',\r\n    fontSize: 16,\r\n    fontStyle: 'bold',\r\n    color: 'white'  \r\n  },\r\n});\r\n\r\n const SignupSchema = Yup.object().shape({\r\n  name: Yup\r\n    .string()\r\n    .required(\"Required\"),\r\n  description: Yup\r\n    .string(),\r\n  price: Yup\r\n    .number()\r\n    .required(\"Required\"),\r\n  stock: Yup\r\n    .number(),\r\n  image: Yup\r\n    .string()\r\n });\r\n \r\n const AddProductForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            description: '',\r\n            price: 0,\r\n            stock: 0,\r\n            image: '',\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            const { name, description, price, stock, image } = values;\r\n            const product: NoIdProduct = { name, description, price, stock, image};\r\n            const promise = productService.addProduct(product);\r\n            void promise.then((res) => {\r\n              const addedProduct: Product = {\r\n                name: res.name,\r\n                description: res.description,\r\n                price: res.price,\r\n                stock: res.stock,\r\n                image: res.image,\r\n                id: res.id\r\n              };\r\n              dispatch(addProduct(addedProduct));\r\n              const text = \"Product \" + product.name + \" added\";\r\n              const type: NotificationType = 'success';\r\n              dispatch(setNotification(text, type));\r\n              setTimeout(() => {\r\n                dispatch(hideNotification());\r\n              }, 5000);\r\n            });\r\n          }}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <Grid container spacing={1}>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Name: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"My New Product\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.name && touched.name ? (\r\n                      <div>{errors.name}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Description: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"So useless product that Wish.com should sell these\"\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.description && touched.description ? (\r\n                      <div>{errors.description}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Price: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"Price\"\r\n                      type=\"number\"\r\n                      name=\"price\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.price && touched.price ? (\r\n                      <div>{errors.price}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Stock: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"Stock\"\r\n                      type=\"number\"\r\n                      name=\"stock\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.stock && touched.stock ? (\r\n                      <div>{errors.stock}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Image: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"www.image.com\"\r\n                      type=\"text\"\r\n                      name=\"image\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.image && touched.image ? (\r\n                      <div>{errors.image}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <button className={classes.button} type=\"submit\">Submit</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n  );\r\n};\r\n\r\n export default AddProductForm;","import * as actionTypes from \"./actionTypes\";\r\nimport productService from '../../services/productService';\r\n\r\ntype ProductDispatch = (dispatch: DispatchType) => void;\r\n\r\nexport const addProduct = (data: Product): ProductDispatch => {\r\n  const action: AddProductAction = {\r\n    type: actionTypes.ADD_PRODUCT,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const removeProduct = (data: Product): ProductDispatch => {\r\n  const action: AddProductAction = {\r\n    type: actionTypes.REMOVE_PRODUCT,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const initializeProducts = () => {\r\n  \r\n  return async (dispatch: (arg0: { type: string; data: Product[]; }) => void): Promise<void> => {\r\n    const data = await productService.getAll();\r\n    const action: GetProductsAction = {\r\n      type: actionTypes.GET_PRODUCTS,\r\n      data,\r\n    };\r\n    \r\n    dispatch(action);\r\n  };\r\n};","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddProductForm from '../forms/product/AddProductForm';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n      position: 'absolute',\r\n      width: 650,\r\n      height: 350,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: '0 30px',\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Add Product </h2>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  setModalOpen: (values: boolean) => void;\r\n  modalOpen: boolean\r\n}\r\n\r\nconst AddProductModal: React.FC<Props> = ({ modalOpen, setModalOpen }) => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const handleClose = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <AddProductForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddProductModal;  ","import React from 'react';\r\n import { Formik, Form, Field } from 'formik';\r\n import { makeStyles } from '@material-ui/styles';\r\n import Grid from '@material-ui/core/Grid';\r\n import * as Yup from 'yup';\r\n\r\n import userService from '../../services/userService';\r\n import { AppDispatch, useAppDispatch } from '../../store/rootReducer';\r\n import { setNotification, hideNotification } from '../../store/Notification/actionCreators';\r\n\r\n const useStyles = makeStyles({\r\n\r\n  field: {\r\n      padding: 5,\r\n      borderColor: '#124eb0',\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      width: '90%',\r\n      maxWidth: 700\r\n  },\r\n  button: {\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      position: 'relative',\r\n      padding: 20,\r\n      paddingRight: 75,\r\n      marginTop: 10,\r\n      left: '42%',\r\n      transform: `translate(-50%, -$50%)`,\r\n      borderWidth: 3,\r\n      borderRadius: 35,      \r\n      width: 92,\r\n      height: 20,\r\n      opacity: 0.95,\r\n      backgroundColor: '#124eb0',\r\n      fontSize: 16,\r\n      fontStyle: 'bold',\r\n      color: 'white'  \r\n  },\r\n});\r\n\r\n const SignupSchema = Yup.object().shape({\r\n    userName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    firstName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    lastName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    password: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    email: Yup\r\n      .string()\r\n      .email('Invalid email')\r\n      .required('Required'),\r\n });\r\n \r\n const CreateUserForm = ():JSX.Element => {\r\n   const classes = useStyles();\r\n   const dispatch: AppDispatch = useAppDispatch();\r\n   return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          password: '',\r\n          email: '',\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const newUser: NoIdUser = { \r\n            userName: values.userName,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            password: values.password,\r\n            email: values.email,\r\n            userType: 'User' \r\n          };\r\n          void userService.createUser(newUser);\r\n          // TODO: Error notification:  Createuser voi feilata esim jos sama email, backend valittaa.\r\n          const text = \"Created user: \" + newUser.userName;\r\n          const type: NotificationType = 'success';\r\n          dispatch(setNotification(text, type));\r\n          setTimeout(() => {\r\n            dispatch(hideNotification);\r\n          }, 5000);\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Username: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.userName && touched.userName ? (\r\n                    <div>{errors.userName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Firstname: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Firstname\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.firstName && touched.firstName ? (\r\n                    <div>{errors.firstName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Lastname: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Lastname\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.lastName && touched.lastName ? (\r\n                    <div>{errors.lastName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.password && touched.password ? (\r\n                    <div>{errors.password}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Email: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"example@gmail.com\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.email && touched.email ? (\r\n                    <div>{errors.email}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n );\r\n};\r\n\r\n export default CreateUserForm;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CreateUserForm from \"../forms/User/CreateUserForm\";\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 650,\r\n    height: 370,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: 10,\r\n    marginBottom: 30\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Create User </h2>\r\n  );\r\n};\r\n\r\ninterface Props {\r\n  setModalOpen: (values: boolean) => void;\r\n  modalOpen: boolean\r\n}\r\n\r\nconst CreateUserModal: React.FC<Props> = ({ modalOpen, setModalOpen }) => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const handleClose = () => {\r\n    setModalOpen(!modalOpen);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <CreateUserForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateUserModal;  ","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { logIn } from '../store/User/actionCreators';\r\nimport { setNotification, hideNotification } from '../store/Notification/actionCreators';\r\nimport { useAppDispatch, AppDispatch } from '../store/rootReducer';\r\nimport LogInModal from '../modals/LogInModal';\r\nimport AddProductModal from '../modals/AddProductModal';\r\nimport CreateUserModal from '../modals/CreateUserModal';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    marginRight: theme.spacing(10),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    marginLeft: 'auto',\r\n    marginRight: -12,\r\n    fontSize: 15\r\n  },\r\n  login: {\r\n    margin: theme.spacing(2),\r\n    fontSize: 15,\r\n  },\r\n  addProductIcon: {\r\n    height: 30,\r\n    width: 30,\r\n  }\r\n}));\r\n\r\ntype UserProp = {\r\n  user: Credentials | null\r\n};\r\n\r\nconst Navibar: React.FC<UserProp> = ({ user }) => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const [loginModalOpen, setLoginModalOpen] = useState<boolean>(false);\r\n  const [createUserModalOpen, setCreateUserModalOpen] = useState<boolean>(false);\r\n  const [addProductModalOpen, setAddProductModalOpen] = useState<boolean>(false);\r\n\r\n  const logOut = () => {\r\n    dispatch(logIn(null));\r\n    dispatch(setNotification(\"Have a nice day\", 'success'));\r\n    setTimeout(() => {\r\n      dispatch(hideNotification());\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Verkkokauppa\r\n          </Typography>\r\n          <div className={classes.buttons}>\r\n            {user !== null && user.userType === 'Admin' ?\r\n              <IconButton onClick={() => setAddProductModalOpen(true)} color=\"inherit\">\r\n                <Tooltip title=\"Add product\">\r\n                  <AddCircleOutlineIcon className={classes.addProductIcon} />\r\n                </Tooltip>\r\n              </IconButton>\r\n            :\r\n              null\r\n            }\r\n            {user === null ?\r\n              <div>\r\n                <Button onClick={() => setLoginModalOpen(true)} color=\"inherit\">\r\n                  <Typography variant=\"h6\" className={classes.login}>\r\n                    Login\r\n                  </Typography>\r\n                </Button>\r\n              </div>  \r\n              :\r\n              <div>\r\n                <Button  onClick={() => logOut()} color=\"inherit\">\r\n                  <Typography variant=\"h6\" className={classes.login}>\r\n                    Log out\r\n                  </Typography>\r\n                </Button>\r\n              </div>\r\n            }\r\n            {user === null ?\r\n              <div>\r\n                <Button onClick={() => setCreateUserModalOpen(true)} color=\"inherit\">\r\n                  <Typography variant=\"h6\" className={classes.login}>\r\n                    Create User\r\n                  </Typography>\r\n                </Button>\r\n              </div>  \r\n              :\r\n              null\r\n            }\r\n          </div>\r\n        </Toolbar>\r\n        <LogInModal modalOpen={loginModalOpen} setModalOpen={setLoginModalOpen} />\r\n        <AddProductModal modalOpen={addProductModalOpen} setModalOpen={setAddProductModalOpen} />\r\n        <CreateUserModal modalOpen={createUserModalOpen} setModalOpen={setCreateUserModalOpen} />\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navibar;\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Delete from '@material-ui/icons/DeleteForever';\r\n\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport productService from '../services/productService';\r\nimport { removeProduct } from '../store/Product/actionCreators';\r\nimport { setNotification, hideNotification } from '../store/Notification/actionCreators';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    marginRight: 20\r\n  },\r\n  media: {\r\n    height: 160,\r\n  },\r\n});\r\n\r\nconst Product: React.FC<{ product: Product }> = ({ product }): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const user: Credentials | null = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n\r\n  const deleteProduct = () => {\r\n    void productService.deleteProduct(product);\r\n    dispatch(removeProduct(product));\r\n    const text = \"Removed \" + product.name;\r\n    const type: NotificationType = 'info';\r\n    dispatch(setNotification(text, type));\r\n    setTimeout(() => {\r\n      dispatch(hideNotification());\r\n    }, 5000);\r\n  };  \r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n      <CardMedia\r\n          className={classes.media}\r\n          image={product.image}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {product.name} <br/> {product.price}€ \r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {product.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\">\r\n          Lisää ostoskoriin\r\n        </Button>\r\n        {user !== null && user.userType === 'Admin' ?         \r\n          <IconButton onClick={() => deleteProduct()}>\r\n            <Delete />\r\n          </IconButton>\r\n        :\r\n          null\r\n        }\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;","import React from \"react\";\r\nimport Product from './Product';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAppSelector } from '../store/rootReducer';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    paddingLeft: 15\r\n  },\r\n});\r\n\r\nconst ProductListPage: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const products: Product[] = useAppSelector(\r\n    state => state.productReducer.products\r\n  );\r\n\r\n  if (products.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {products.map((product: Product) => (\r\n        <Product key={product.id} product={product} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListPage;  ","import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\ninterface NotificationProps {\r\n  type: NotificationType,\r\n  message: string\r\n}\r\n\r\nconst Alert: React.FC<NotificationProps> = ({ type, message }: NotificationProps) => {\r\n  switch (type) {\r\n    case 'success':\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"success\" > {message} </MuiAlert>;\r\n\r\n    case 'error':\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" > {message} </MuiAlert>;\r\n\r\n    default:\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"info\" > {message} </MuiAlert>;   \r\n  } \r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '15%',\r\n    position: 'relative',\r\n    marginBottom: 15,\r\n    left: 15,\r\n  },\r\n});\r\n\r\nconst Notification: React.FC<NotificationProps> = ({ type, message }: NotificationProps) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert type={type} message={message} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Navibar from './components/Navibar';\r\nimport ProductListPage from './components/ProductListPage';\r\nimport { initializeProducts } from './store/Product/actionCreators';\r\nimport { useAppSelector, useAppDispatch, AppDispatch } from './store/rootReducer';\r\nimport Notification from './UI/Notification';\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    void dispatch(initializeProducts());\r\n  },[]);\r\n\r\n  const user: Credentials | null = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n\r\n  const notification: NotificationState = useAppSelector(\r\n    state => state.notificationReducer\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navibar user={user} />\r\n        <br/>\r\n        {notification.visible ?\r\n          <Notification type={notification.type} message={notification.message} />\r\n        :\r\n          null\r\n        }\r\n        <Switch>\r\n          <Route path=\"/\" render={() => <ProductListPage />} />\r\n        </Switch>    \r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","  \r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from './store/rootReducer';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}