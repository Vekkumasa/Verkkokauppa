{"version":3,"sources":["store/User/actionTypes.ts","store/ActiveProduct/actionTypes.ts","forms/product/ProductForm.tsx","utils/DateParser.ts","utils/RoundToHalf.ts","store/ShoppingCart/actionCreators.ts","store/modal/actionCreators.ts","components/Product.tsx","components/ProductInfo.tsx","components/Account.tsx","components/ShoppingCartCard.tsx","forms/product/ModifyProductForm.tsx","modals/ModifyProductModal.tsx","forms/User/ModifyUserForm.tsx","modals/ModifyUserInfoModal.tsx","forms/User/ModifyAvatar.tsx","modals/ModifyUserAvatarModal.tsx","services/shoppingCartService.ts","store/Notification/actionCreators.ts","components/AccountMenu.tsx","store/Filter/actionCreators.ts","forms/User/LogInForm.tsx","utils/platformParser.ts","modals/LogInModal.tsx","forms/product/AddProductForm.tsx","modals/AddProductModal.tsx","forms/User/CreateUserForm.tsx","modals/CreateUserModal.tsx","components/Navibar.tsx","components/ProductListPage.tsx","components/PastOrders.tsx","forms/shoppingCart/ShoppingCartForm.tsx","components/ShoppingCart.tsx","UI/Notification.tsx","components/Sidebar.tsx","App.tsx","utils/ValidTimeStamp.ts","index.tsx","typeGuards.ts","store/User/actionCreators.ts","store/ShoppingCart/actionTypes.ts","services/userService.ts","forms/formStyles.ts","store/Product/reducer.ts","store/User/reducer.ts","store/Notification/reducer.ts","store/ShoppingCart/reducer.ts","store/modal/reducer.ts","store/Filter/reducer.ts","store/ActiveProduct/reducer.ts","store/rootReducer.ts","services/productService.ts","store/Product/actionCreators.ts","utils/ArrayBufferToBase64.ts","store/Product/actionTypes.ts","store/ActiveProduct/actionCreators.ts","store/Notification/actionTypes.ts","store/Filter/actionTypes.ts"],"names":["LOG_IN","SET_ACTIVE_PRODUCT","ProductForm","errors","touched","setFieldValue","setImage","image","setTags","submitForm","tags","classes","useStyles","container","spacing","item","xs","style","color","className","field","placeholder","type","name","description","price","stock","border","multiple","backgroundColor","disableUnderline","value","onChange","event","target","renderValue","selected","display","flexWrap","map","label","marginLeft","tag","undefined","currentTarget","files","onClick","height","width","src","URL","createObjectURL","alt","button","parseDate","date","d","Date","day","getDate","toString","month","getMonth","year","getFullYear","hour","getHours","min","getMinutes","roundToHalf","converted","decimal","parseInt","Math","round","createNewShoppingCart","cartId","action","actionTypes","dispatch","retrieveOldShoppingCart","products","data","addNewProductToShoppingCart","product","quantity","increaseQuantity","decreaseQuantity","removeProduct","clearShoppingCart","handleModal","modal","makeStyles","root","maxHeight","marginRight","centerText","textAlign","media","overflow","maxWidth","whiteSpace","textOverflow","Product","useAppDispatch","user","useAppSelector","state","userReducer","shoppingCartReducer","shoppingCart","cart","addProductToShoppingCart","shoppingCartProduct","shoppingCartService","userId","_id","then","catch","e","console","log","newProduct","id","response","updateShoppingCartProductQuantity","increaseProductQuantity","buffer","Buffer","from","arrayBufferToBase64","to","textDecoration","setActiveProduct","window","localStorage","setItem","fontSize","gutterBottom","variant","component","disabled","size","isProductAlreadyInCart","some","p","find","handleShoppingCart","userType","productService","deleteProduct","setNotification","title","flexDirection","box","borderRadius","card","availability","padding","priceTag","marginBottom","chip","marginTop","ratedTag","transform","ProductInfo","activeProductReducer","allProducts","productReducer","useEffect","getItem","storedProduct","hasUserRatedTheProduct","ratings","readOnly","length","sum","reduce","prev","cur","productRating","precision","emptyIcon","_event","number","userService","addRatingForProduct","res","productWithNewRatings","r","logIn","handleRating","position","top","justifyContent","isProductInCart","nameAndIcon","margin","flexGrow","avatar","column","header","defaultProps","bgcolor","m","Account","Header","text","dates","platformInfo","counter","i","recentActivity","push","borderRight","borderColor","firstName","lastName","borderBottom","email","left","index","details","content","flex","grey","info","contentAndImage","deleteButton","red","iconButtons","ShoppingCartCard","removeProductFromShoppingCart","removeProductFromCart","decreaseProductQuantity","decreaseQuantityFromCart","increaseQuantityFromCart","SignupSchema","Yup","shape","required","ModifyProductForm","useState","initialValues","validationSchema","onSubmit","values","modifyProduct","initializeProducts","getModalStyle","theme","alignItems","paper","palette","background","boxShadow","shadows","ModifyProductModal","modalStyle","modalOpen","modalReducer","modifyProductModal","Modal","aria-labelledby","aria-describedby","open","onClose","userName","max","password","ModifyUserForm","loggedUser","modifiedUser","modifyUser","token","JSON","stringify","Grid","ModifyUserInfoModal","modifyUserInfoModal","ModifyImageSchema","ModifyAvatar","modifyAvatar","ModifyUserAvatarModal","modifyUserAvatarModal","baseURL","a","axios","post","request","getUsersShoppingCart","get","productToAdd","productToRemove","put","setShoppingCartActivity","setShoppingCartCompleted","removeShoppingCart","delete","notificationType","notificationTypeCheck","hideNotification","StyledMenu","withStyles","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","primary","main","common","white","MenuItem","AccountMenu","React","anchorEl","setAnchorEl","IconButton","AccountCircle","keepMounted","Boolean","ListItemIcon","Person","ListItemText","ShoppingBasket","setFilter","setTag","LogInForm","cartState","family","version","string","platformParser","platform","os","signIn","credentials","storeInfo","timestamp","swal","icon","buttons","findPrevious","removedResponse","usePreviousShoppingCart","LogInModal","logInModal","AddProductForm","addProduct","addedProduct","AddProductModal","addProductModal","CreateUserForm","newUser","createUser","CreateUserModal","createUserModal","menuButton","login","addProductIcon","whiteIcon","searchIcon","Navibar","searchText","setSearchText","loggedIn","AppBar","Toolbar","edge","aria-label","Menu","Typography","TextField","preventDefault","Search","Tooltip","Backspace","AddCircleOutline","Button","removeItem","paddingLeft","ProductListPage","filter","filterReducer","filteredByName","productFilter","toLowerCase","includes","filteredProducts","tagFilter","blue","mainRow","row","body","Row","order","setOpen","TableRow","TableCell","KeyboardArrowUp","KeyboardArrowDown","scope","completionDate","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","Table","TableHead","align","TableBody","PastOrders","orders","setOrders","sortedOrders","sort","o1","o2","getTime","sortOrders","getUsersCompletedShoppingcarts","TableContainer","Paper","ShippingSchema","address","ShoppingCartForm","shippingInfo","userCheck","logInText","shoppingCartAndFormBox","deleteIcon","form","borderWidth","empty","ShoppingCart","Container","Alert","message","severity","Notification","tts","setTimeout","createStyles","appMenu","menuItem","menuIcon","Sidebar","tagi","List","disablePadding","ListItem","divider","AllInclusive","Build","FreeBreakfast","Home","BarChart","App","notification","notificationReducer","parsedUser","safeJsonParse","isCredentialsWithTimestamp","hasError","currentTime","validTimeStamp","parsed","visible","path","render","exact","ReactDOM","store","document","getElementById","setTagActionCheck","object","addOrRemoveActionCheck","newShoppingCartCheck","retrieveOldShoppingCartCheck","clearShoppingCartCheck","o","guard","parse","INCREASE_QUANTITY","DECREASE_QUANTITY","REMOVE_PRODUCT_FROM_CART","CLEAR_SHOPPINGCART","CREATE_NEW_SHOPPING_CART","RETRIEVE_OLD_SHOPPING_CART","username","fd","FormData","append","config","headers","productId","paddingRight","opacity","fontStyle","initialState","reducer","concat","list","lisattava","uusi","rootReducer","combineReducers","configureStore","useDispatch","useSelector","req","modifyProductImage","getAll","binary","slice","call","Uint8Array","forEach","b","String","fromCharCode","btoa","ADD_PRODUCT","GET_PRODUCTS","REMOVE_PRODUCT","SET_NOTIFICATION","HIDE_NOTIFICATION","SET_FILTER","SET_TAG"],"mappings":"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","file":"static/js/main.5a8afd9f.chunk.js","sourcesContent":["export const LOG_IN = \"LOG_IN\";\r\nexport const CREATE_USER = \"CREATE_USER\";\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\r\n","export const SET_ACTIVE_PRODUCT = \"SET_ACTIVE_PRODUCT\";","import React, { useState } from 'react';\r\nimport { FormikErrors, FormikTouched, Form, Field } from 'formik';\r\nimport { Grid, Select, Chip, Box, MenuItem } from '@material-ui/core/';\r\nimport useStyles from '../formStyles';\r\ninterface Props {\r\n  errors: FormikErrors<{\r\n    name: string;\r\n    description: string;\r\n    price: number;\r\n    stock: number;\r\n}>\r\n  touched: FormikTouched<{\r\n    name: string;\r\n    description: string;\r\n    price: number;\r\n    stock: number;\r\n}>\r\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any \r\n  setFieldValue: (field: string, value: any, shouldValidate?: boolean | undefined) => void\r\n  setImage: React.Dispatch<React.SetStateAction<File | undefined>>\r\n  image: File | undefined\r\n  // eslint-disable-next-line  @typescript-eslint/no-explicit-any \r\n  submitForm: (() => Promise<void>) & (() => Promise<any>)\r\n  setTags: React.Dispatch<React.SetStateAction<Tag[]>>\r\n  tags: Tag[]\r\n}\r\n\r\nconst ProductForm = ({ errors, touched, setFieldValue, setImage, image, submitForm, setTags, tags }: Props): JSX.Element => {\r\n  const classes = useStyles();\r\n  const availableTags: Tag[] = ['Kirves', 'Mokki Essential', 'Ruoka/Juoma', 'muut'];\r\n\r\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n    setTags(event.target.value as Tag[]);\r\n  };\r\n\r\n  return (\r\n    <Form>\r\n      <Grid container spacing={1}>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <Grid item xs={2}>\r\n            <label>Name: <b style={{color: 'red'}}>*</b> </label>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Field\r\n              className={classes.field}\r\n              placeholder=\"My New Product\"\r\n              type=\"text\"\r\n              name=\"name\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            {(errors.name && touched.name) && (\r\n              <div>{errors.name}</div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <Grid item xs={2}>\r\n            <label>Description: </label>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Field\r\n              className={classes.field}\r\n              placeholder=\"So useless product that Wish.com should sell these (optional)\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            {(errors.description && touched.description) && (\r\n              <div>{errors.description}</div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <Grid item xs={2}>\r\n            <label>Price: <b style={{color: 'red'}}>*</b> </label>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Field\r\n              className={classes.field}\r\n              placeholder=\"Price\"\r\n              type=\"number\"\r\n              name=\"price\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            {(errors.price && touched.price) && (\r\n              <div>{errors.price}</div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <Grid item xs={2}>\r\n            <label>Stock: </label>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Field\r\n              className={classes.field}\r\n              placeholder=\"Stock (optional)\"\r\n              type=\"number\"\r\n              name=\"stock\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            {(errors.stock && touched.stock) && (\r\n              <div>{errors.stock}</div>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <Grid item xs={2}>\r\n            <label>Tags: </label>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Box border={2} className={classes.field}>\r\n              <Select\r\n                className={classes.field}\r\n                multiple\r\n                style={{ backgroundColor: 'rgb(255,255,255)' }}\r\n                disableUnderline\r\n                value={tags}\r\n                onChange={handleChange}\r\n                renderValue={(selected) => (\r\n                  <div style={{ display: 'flex', flexWrap: 'wrap'}}>\r\n                    {(selected as Tag[]).map((value) => (\r\n                      <Chip\r\n                        key={value}\r\n                        label={value}\r\n                        style={{ display: 'flex', flexWrap: 'wrap', backgroundColor: '#5aafe0', marginLeft: 2 }}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              >\r\n                {availableTags.map((tag) => (\r\n                  <MenuItem style={{ backgroundColor: 'rgb(255,255,255)' }} key={tag} value={tag}>\r\n                    {tag}\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            \r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <Grid item xs={2}>\r\n            <label> Image: </label>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Field\r\n              className={classes.field}\r\n              type=\"File\"\r\n              name=\"image\"\r\n              value={undefined}\r\n              style={{ color: 'rgba(0,0,0,0)'}}\r\n              onChange={(event:React.ChangeEvent<HTMLInputElement>) => {\r\n                setFieldValue('image', event.currentTarget.files? event.currentTarget.files[0] : undefined);\r\n                setImage(event.currentTarget.files? event.currentTarget.files[0] : undefined);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            {image && \r\n              <button type=\"button\" onClick={() => {\r\n                setFieldValue('image', undefined);\r\n                setImage(undefined);\r\n              }}> \r\n                Cancel\r\n              </button>\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container item xs={12} spacing={3}>\r\n          <Grid item xs={2}>\r\n            <label> Image preview: </label>\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            {image ? \r\n              <img height={100} width={100} src={ URL.createObjectURL(image) } alt=\"Preview to upload\" />\r\n            :\r\n              <img height={100} width={100} src={'https://live.staticflickr.com/5217/5471047557_4dc13f5376_n.jpg'} alt=\"Preview to upload\" />\r\n            }\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <button className={classes.button} type=\"submit\">Submit</button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ProductForm;","export const parseDate = (date?: Date):string => {\r\n  if (!date) return '';\r\n  const d = new Date(date);\r\n  const day = d.getDate().toString();\r\n  const month = `${d.getMonth() + 1}`;\r\n  const year = d.getFullYear().toString();\r\n  const hour = d.getHours();\r\n  const min = d.getMinutes();\r\n  let hours;\r\n  hour < 10 ? hours = '0' + hour.toString() : hours = hour.toString();\r\n  let minutes;\r\n  min < 10 ? minutes = '0' + min.toString() : minutes = min.toString();\r\n\r\n  return day + '.' + month + '.' + year + '  ' + hours + ':' + minutes;\r\n};","export const roundToHalf = (value: number): number => {\r\n  const converted = `${value}`;\r\n  let decimal = (value - parseInt(converted, 10));\r\n  decimal = Math.round(decimal * 10);\r\n  if (decimal === 5) {\r\n    return parseInt(converted, 10) + 0.5;\r\n  } else if (decimal < 3 || decimal > 7) {\r\n    return Math.round(value);\r\n  } else {\r\n    return parseInt(converted, 10) + 0.5;\r\n  }\r\n};","import * as actionTypes from \"./actionTypes\";\r\n\r\ntype Cart = (dispatch: DispatchType) => void;\r\n\r\nexport const createNewShoppingCart = (cartId: string): Cart => {\r\n  const action: CreateNewShoppingCartAction = {\r\n    type: actionTypes.CREATE_NEW_SHOPPING_CART,\r\n    cartId\r\n  };\r\n  \r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const retrieveOldShoppingCart = (cartId: string, products: ShoppingCartProduct[]): Cart => {\r\n  const action: RetrieveOldShoppingCartAction = {\r\n    type: actionTypes.RETRIEVE_OLD_SHOPPING_CART,\r\n    cartId,\r\n    data: products\r\n  };\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const addNewProductToShoppingCart = (product: Product, cartId: string): Cart => {\r\n  const data: ShoppingCartProduct = { ...product, quantity: 1};\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.INCREASE_QUANTITY,\r\n    cartId,\r\n    data\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const increaseQuantity = (product: ShoppingCartProduct, cartId: string): Cart => {\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.INCREASE_QUANTITY,\r\n    cartId,\r\n    data: {...product, quantity: product.quantity + 1}\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const decreaseQuantity = (product: ShoppingCartProduct, cartId: string): Cart => {\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.DECREASE_QUANTITY,\r\n    cartId,\r\n    data: {...product, quantity: product.quantity - 1}\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const removeProduct = (data: ShoppingCartProduct, cartId: string): Cart => {\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.REMOVE_PRODUCT_FROM_CART,\r\n    cartId,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const clearShoppingCart = (): Cart => {\r\n  const action: ClearShoppingCartAction = {\r\n    type: actionTypes.CLEAR_SHOPPINGCART,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","type OpenOrCloseModal = (dispatch: DispatchType) => void;\r\n\r\nexport const handleModal = (data: boolean, modal: Modal): OpenOrCloseModal => {\r\n  const action: ModalAction = {\r\n    type: '',\r\n    modal,\r\n    data\r\n  };\r\n  \r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\n","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Delete from '@material-ui/icons/DeleteForever';\r\n\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport productService from '../services/productService';\r\nimport { removeProduct } from '../store/Product/actionCreators';\r\nimport { setNotification } from '../store/Notification/actionCreators';\r\nimport { setActiveProduct } from '../store/ActiveProduct/actionCreators';\r\nimport { increaseQuantity, addNewProductToShoppingCart, createNewShoppingCart } from '../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nimport { arrayBufferToBase64 } from '../utils/ArrayBufferToBase64';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 170,\r\n    maxHeight: 340,\r\n    marginRight: 20\r\n  },\r\n  centerText: {\r\n    textAlign: 'center',\r\n  },\r\n  media: {\r\n    height: 160,\r\n  },\r\n  overflow: {\r\n    maxWidth: 170,\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis'\r\n  },\r\n});\r\n\r\ntype Props = {\r\n  product: Product\r\n};\r\n\r\nconst Product  = ({ product }: Props): JSX.Element => {\r\n\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const user: Credentials | undefined = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n  const shoppingCart = useAppSelector(state => state.shoppingCartReducer.cart);\r\n\r\n  const deleteProduct = () => {\r\n    // Todo: Tarkistus että tuote todella on poistettu kannasta ennen frontista deletointia ?\r\n    productService.deleteProduct(product).catch(e => console.log(e));\r\n    dispatch(removeProduct(product));\r\n    dispatch(setNotification(\"Removed \" + product.name, 'info'));\r\n  };\r\n\r\n  const handleShoppingCart = () => {\r\n    const isProductAlreadyInCart = shoppingCart.some(p => p._id === product._id);\r\n    \r\n    let shoppingCartProduct: ShoppingCartProduct | undefined = shoppingCart.find(p => p._id === product._id);\r\n\r\n    if (!shoppingCartProduct) {   \r\n      shoppingCartProduct = {...product, quantity: 1};\r\n    }\r\n    if (isProductAlreadyInCart) {\r\n      updateShoppingCartProductQuantity(shoppingCartProduct);\r\n    } else {  \r\n      addProductToShoppingCart(shoppingCartProduct);\r\n    }\r\n  };\r\n\r\n  const addProductToShoppingCart = (shoppingCartProduct: ShoppingCartProduct) => {  \r\n    if (!user) {\r\n      dispatch(addNewProductToShoppingCart(shoppingCartProduct, cartId));\r\n    } else {\r\n      if (!cartId) {\r\n        dispatch(addNewProductToShoppingCart(shoppingCartProduct, cartId));\r\n        const newProduct = [ shoppingCartProduct ];\r\n        void shoppingCartService.createNewShoppingCart({ products: newProduct, user: user._id, id: ''})\r\n          .then((response) => {\r\n            dispatch(createNewShoppingCart(response.id));\r\n          }).catch(e => console.log(e));\r\n      } else {\r\n        const response = shoppingCartService.addProductToShoppingCart({ product: shoppingCartProduct, userId: user._id, cartId});\r\n        response.then(() => {\r\n          dispatch(addNewProductToShoppingCart(shoppingCartProduct, cartId));\r\n            }).catch(e => console.log(e));\r\n      }\r\n      \r\n    }\r\n  };\r\n\r\n  const updateShoppingCartProductQuantity = (shoppingCartProduct: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(increaseQuantity(shoppingCartProduct, cartId));\r\n    } else {\r\n      void shoppingCartService.increaseProductQuantity({ product: shoppingCartProduct, userId: user._id, cartId: cartId })\r\n        .then(() => {\r\n          dispatch(increaseQuantity(shoppingCartProduct, cartId));\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleSetActiveProduct = () => {\r\n    dispatch(setActiveProduct(product));\r\n    window.localStorage.setItem('activeProduct', product.name);\r\n  };\r\n  \r\n  let image;\r\n  if (product.image) {\r\n    const buffer = Buffer.from(product.image.data);\r\n    image = arrayBufferToBase64(buffer);\r\n  }\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <Link to='/product' style={{ textDecoration: 'none', color: 'black' }}>\r\n        <CardActionArea onClick={() => handleSetActiveProduct()}>\r\n          <CardMedia\r\n              className={classes.media}\r\n              image={image}\r\n            />\r\n          <CardContent>\r\n            <Typography className={`${classes.overflow} ${classes.centerText}`} style={{ fontSize: 16 }} gutterBottom variant=\"h6\" component=\"h2\">\r\n              {product.name} <br/> {product.price}€ \r\n            </Typography>\r\n            <Typography className={`${classes.overflow} ${classes.centerText}`} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {product.description}\r\n            </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n      </Link>\r\n      <CardActions>\r\n        <Button disabled={product.stock <= 0} size=\"small\" color=\"primary\" onClick={() => handleShoppingCart()}>\r\n          Lisää ostoskoriin\r\n        </Button>\r\n        {user?.userType === 'Admin' && (\r\n          <IconButton onClick={() => deleteProduct()}>\r\n            <Tooltip title=\"Remove product from database\">\r\n              <Delete />\r\n            </Tooltip>\r\n          </IconButton>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport { Product };","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { \r\n  CardMedia,\r\n  Card,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  IconButton,\r\n  Tooltip,\r\n  Grid,\r\n  Chip,\r\n} from '@material-ui/core';\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport { StarBorder, FiberManualRecord as CircleIcon, Edit } from '@material-ui/icons/';\r\n\r\nimport shoppingCartService from '../services/shoppingCartService';\r\nimport userService from '../services/userService';\r\n\r\nimport ModifyProductModal from '../modals/ModifyProductModal';\r\nimport { arrayBufferToBase64 } from '../utils/ArrayBufferToBase64';\r\nimport { roundToHalf } from '../utils/RoundToHalf';\r\nimport { addNewProductToShoppingCart, increaseQuantity } from '../store/ShoppingCart/actionCreators';\r\nimport { setActiveProduct } from '../store/ActiveProduct/actionCreators';\r\nimport { logIn } from '../store/User/actionCreators';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  },\r\n  box: {\r\n    marginLeft: 25,\r\n    width: '100%',\r\n    borderRadius: 15,\r\n  },\r\n  card: {\r\n    maxWidth: 500,\r\n    maxHeight: 350\r\n  },\r\n  image: {\r\n    height: 350,\r\n    width: 500,\r\n  },\r\n  availability: {\r\n    height: 20,\r\n    width: 20,\r\n    marginLeft: 10\r\n  },\r\n  button: {\r\n    padding: 25,\r\n    width: '100%',\r\n  },\r\n  priceTag: {\r\n    width: 150,\r\n    borderRadius: 15,\r\n    marginBottom: 30,\r\n    backgroundColor: 'lightgrey'\r\n  }, \r\n  chip: {\r\n    padding: 15,\r\n    marginTop: 15,\r\n    marginLeft: 15,\r\n    marginBottom: 15,\r\n    width: '80%'\r\n  },\r\n  ratedTag: {\r\n    borderRadius: 10,\r\n    color: 'darkgreen',\r\n    height: 20,\r\n    width: 60,\r\n    textAlign: 'center',\r\n    marginLeft: 10,\r\n    padding: 3,\r\n    transform: `rotate(-30deg)`,\r\n  }\r\n});\r\n\r\nconst ProductInfo = (): JSX.Element => {\r\n\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const product: Product | undefined = useAppSelector(\r\n    state => state.activeProductReducer.product\r\n  );\r\n\r\n  const allProducts: Product[] = useAppSelector(\r\n    state => state.productReducer.products\r\n  );\r\n\r\n  const user = useAppSelector(state => state.userReducer.user);\r\n  const userId = user? user._id : '';\r\n\r\n  useEffect(() => {\r\n    if (!product) {\r\n      const item = window.localStorage.getItem('activeProduct');\r\n      const storedProduct = allProducts.find(p => {\r\n        return p.name === item;\r\n      });\r\n      if (storedProduct) {\r\n        void dispatch(setActiveProduct(storedProduct));\r\n      }\r\n    }\r\n  }, [allProducts]);\r\n\r\n  const shoppingCart = useAppSelector(state => state.shoppingCartReducer);\r\n  \r\n  if (!product) return <div></div>;\r\n\r\n  const hasUserRatedTheProduct = user?.ratings?.some(p => {\r\n    return p._id.toString() === product._id.toString();\r\n  });\r\n\r\n  const productStock = () => {\r\n    if (product.stock <= 0) {\r\n      return <CircleIcon className={classes.availability} style={{ color: 'red'}} />;\r\n    } else if (product.stock >= 1 && product.stock <= 5) {\r\n      return <CircleIcon className={classes.availability} style={{ color: 'yellow'}} />;\r\n    } else {\r\n      return <CircleIcon className={classes.availability} style={{ color: 'green'}} />;\r\n    }\r\n  };\r\n\r\n  \r\n\r\n  const handleShoppingCart = () => {\r\n    const isProductInCart = shoppingCart.cart.some(p => p._id === product._id);\r\n    let shoppingCartProduct = shoppingCart.cart.find(p => p._id === product._id);\r\n\r\n    if (!shoppingCartProduct) {\r\n      shoppingCartProduct = {...product, quantity: 1};\r\n    }\r\n\r\n    if (isProductInCart) {\r\n      console.log('tuote on kärryssä');    \r\n      increaseProductQuantity(shoppingCartProduct);\r\n    } else {\r\n      console.log('tuote ei ole kärryssä');\r\n      addProductToShoppingCart(shoppingCartProduct);\r\n    }\r\n  };\r\n\r\n  const increaseProductQuantity = (shoppingCartProduct: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(increaseQuantity(shoppingCartProduct, shoppingCart.cartId));\r\n    } else {\r\n      void shoppingCartService.increaseProductQuantity({ product: shoppingCartProduct, userId, cartId: shoppingCart.cartId })\r\n        .then(() => {\r\n          dispatch(increaseQuantity(shoppingCartProduct, shoppingCart.cartId));\r\n        });\r\n    }\r\n  };\r\n\r\n  const addProductToShoppingCart = (shoppingCartProduct: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(addNewProductToShoppingCart(shoppingCartProduct, shoppingCart.cartId));\r\n    } else {\r\n      void shoppingCartService.addProductToShoppingCart({ product: shoppingCartProduct, userId, cartId: shoppingCart.cartId })\r\n        .then(() => {\r\n          dispatch(addNewProductToShoppingCart(shoppingCartProduct, shoppingCart.cartId));\r\n        });\r\n    }\r\n  };\r\n\r\n  const productRating = () => {\r\n    if (!product.ratings || product.ratings.length === 0) return 0;\r\n    \r\n    const sum = product.ratings.reduce((prev, cur) => prev + cur, 0);\r\n    console.log('sum / length:', sum / product.ratings.length, 'rounded: ', roundToHalf(sum / product.ratings.length));\r\n    return roundToHalf(sum / product.ratings.length);\r\n  };\r\n\r\n  const handleRating = (number: number | null) => {\r\n    const value = number? number : 0;\r\n    const response = userService.addRatingForProduct(userId, product._id, value);\r\n    void response.then((res) => {\r\n      if (res !== null) {\r\n        const productWithNewRatings = res.ratings?.find(r => r._id.toString() === product._id);\r\n        if (productWithNewRatings) {\r\n          void dispatch(setActiveProduct(productWithNewRatings));\r\n          void dispatch(logIn(res));\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const loremIpsum = () => {\r\n    return 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';\r\n  };\r\n\r\n  const priceTag = () => {\r\n    return (\r\n      <Box border={1} justifyContent=\"center\" className={classes.priceTag}>\r\n        <Chip\r\n          size=\"small\"\r\n          label={product.price.toString() + '€'}\r\n          color=\"primary\"\r\n          className={classes.chip}\r\n        />\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const modifyProductButton = () => {\r\n    return (\r\n      <Box border={1} style={{ borderRadius: 10, color: 'darkblue', width: 50, marginBottom: 25}}>\r\n        <IconButton\r\n        style={{ width: '100%', height: '100%'}}\r\n        color=\"primary\"\r\n        onClick={() => dispatch(handleModal(true, 'ModifyProduct'))}\r\n        >\r\n          <Edit />\r\n        </IconButton>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const ratedTag = ():JSX.Element => {\r\n    return (\r\n      <Box border={2} className={classes.ratedTag}>\r\n          <Typography>Rated</Typography>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const addToShoppingcart = () => {   \r\n    return (\r\n      <Box border={1} justifyContent=\"center\" style={{ backgroundColor: 'lightgrey', maxWidth: 300, borderRadius: 10 }}>\r\n        <Button\r\n          className={classes.button}\r\n          disabled={product.stock <= 0}\r\n          size=\"small\" color=\"primary\"\r\n          onClick={() => handleShoppingCart()}\r\n        >\r\n          Lisää ostoskoriin\r\n          <Tooltip title={<><p> Green = Available <br/> Yellow = Few left <br/> Red = Not available  </p> </>}>\r\n            {productStock()}\r\n          </Tooltip> \r\n        </Button>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  let image;\r\n  if (product.image) {\r\n    const buffer = Buffer.from(product.image.data);\r\n    image = arrayBufferToBase64(buffer);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Card className={classes.card}>\r\n        <CardMedia image={image} className={classes.image} />\r\n      </Card>\r\n      <Box border={1} className={classes.box} style={{ color: 'blue' }}>\r\n        <Grid container item xs={12} spacing={3} style={{ color: 'black', padding: 15 }} >\r\n          <Grid item xs={7}>\r\n            <div style={{ display: 'flex', flexDirection: 'row'}}>\r\n              <Typography variant='h3' style={{ marginRight: 15 }}> {product.name}  </Typography>\r\n              {user?.userType === 'Admin' && modifyProductButton()}\r\n            </div>\r\n            <div style={{ display: 'flex', flexDirection: 'row'}}>\r\n              <Rating\r\n                readOnly={!user || hasUserRatedTheProduct}\r\n                value={productRating()}\r\n                name={product.name}\r\n                precision={0.5}\r\n                emptyIcon={<StarBorder fontSize=\"inherit\" />}\r\n                onChange={(_event, value) => handleRating(value)}\r\n              />\r\n              {hasUserRatedTheProduct && ratedTag()}\r\n            </div>\r\n            <Typography>\r\n              <br/>\r\n              {product.description}\r\n              <br/>\r\n              {loremIpsum()}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <div style={{ position: 'relative', top: 150}}>\r\n              {priceTag()}\r\n              {addToShoppingcart()}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <ModifyProductModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductInfo;","import React from 'react';\r\nimport { Box, Grid, Typography, IconButton, Tooltip, Avatar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AccountCircle, Edit } from '@material-ui/icons/';\r\n\r\nimport { AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\nimport ModifyUserInfoModal from '../modals/ModifyUserInfoModal';\r\nimport ModifyUserAvatarModal from '../modals/ModifyUserAvatarModal';\r\nimport { parseDate } from '../utils/DateParser';\r\nimport { arrayBufferToBase64 } from '../utils/ArrayBufferToBase64';\r\n\r\nconst useStyles = makeStyles({\r\n  nameAndIcon: {\r\n    width: '50%',\r\n    margin: '0 auto',\r\n    flexGrow: 1,\r\n  },\r\n  avatar: {\r\n    backgroundColor: 'white',\r\n    marginLeft: 15,\r\n    width: 120,\r\n    height: 120,\r\n    '&:hover': {\r\n      backgroundColor: 'lightgrey',\r\n    },\r\n  },\r\n  column: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  header: {\r\n    textAlign: 'center',\r\n    height: 20,\r\n    color: 'white',\r\n    borderRadius: '15%',\r\n    backgroundColor: '#2525b8',\r\n  },\r\n});\r\ninterface AccountProps {\r\n  user: Credentials | undefined  \r\n}\r\n\r\ninterface HeaderProps {\r\n  text: string\r\n}\r\n\r\nconst defaultProps = {\r\n  bgcolor: 'background.paper',\r\n  m: 1,\r\n};\r\n\r\nconst Account = ({user}: AccountProps): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  if (!user) return <div></div>;\r\n\r\n  const Header = ({text}: HeaderProps): JSX.Element => {\r\n    return (\r\n      <Typography className={`${classes.header}`}>{text}</Typography>\r\n    );\r\n  };\r\n\r\n  const dates: string[] = [];\r\n  const platformInfo: string[] = [];\r\n\r\n  let counter = 0;\r\n  for (let i = user.recentActivity.length -1; i >= 0; i--) {\r\n    dates.push(parseDate(user.recentActivity[i]));\r\n    platformInfo.push(user.platformInfo[i]);\r\n    counter++;\r\n    if (counter === 4) break;\r\n  }\r\n\r\n  let image;\r\n  if (user?.avatar?.data) {\r\n    const buffer = Buffer.from(user.avatar.data);\r\n    image = arrayBufferToBase64(buffer);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      {user &&\r\n        <Grid container item xs={12} spacing={1}>\r\n          <Grid item xs={3}>\r\n            <Box borderRight={1} borderColor=\"primary.main\" style={{ height: 270 }} {...defaultProps}>\r\n              <div className={classes.nameAndIcon}>\r\n                {image ?\r\n                  <Avatar \r\n                    onClick={() => dispatch(handleModal(true, 'ModifyUserAvatar'))}\r\n                    src={image}\r\n                    className={classes.avatar}\r\n                  />\r\n                :\r\n                  <Avatar\r\n                    onClick={() => dispatch(handleModal(true, 'ModifyUserAvatar'))}\r\n                    className={classes.avatar}\r\n                  >\r\n                    <AccountCircle style={{ color: '#094ebd', width: 120, height: 120 }}/>\r\n                  </Avatar>\r\n                }\r\n                <Typography style={{ marginLeft: 5 }} variant='h6'>\r\n                  {user.firstName} &nbsp; {user.lastName}\r\n                </Typography>\r\n              </div>\r\n            </Box>\r\n          </Grid>\r\n          <div className={classes.column}>\r\n            <Grid item xs={12}>\r\n              <Box borderBottom={1} borderColor=\"primary.main\" style={{ height: 120, width: 600 }} {...defaultProps}>\r\n                <Header text=\"User info\" />\r\n                <Typography variant='subtitle1'>\r\n                  Email: {user.email} <br/>\r\n                  Firstname: {user.firstName} <br/>\r\n                  Lastname: {user.lastName} \r\n                  <IconButton onClick={() => dispatch(handleModal(true, 'ModifyUser'))} style={{ position: 'relative',  left: 10, marginTop: -10 }}> \r\n                    <Tooltip title=\"Modify user info\">\r\n                      <Edit />\r\n                    </Tooltip>\r\n                  </IconButton><br/>\r\n                </Typography>\r\n               \r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box borderBottom={1} borderColor=\"primary.main\" style={{ height: 120, width: 600 }} {...defaultProps}>\r\n              <Header text=\"Recent activity\" />\r\n              {dates.map((date, index) => (\r\n                <Typography key={index}>{date}: {platformInfo[index]}</Typography>\r\n              ))}\r\n              </Box>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      }\r\n      <ModifyUserInfoModal />\r\n      <ModifyUserAvatarModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;","import React from 'react';\r\nimport { useAppDispatch, AppDispatch, useAppSelector } from '../store/rootReducer';\r\nimport { makeStyles  } from '@material-ui/styles';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Typography, IconButton } from '@material-ui/core';\r\nimport { Add, Remove } from '@material-ui/icons';\r\nimport { grey, red } from '@material-ui/core/colors';\r\n\r\nimport { decreaseQuantity, removeProduct, increaseQuantity } from '../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\nimport { arrayBufferToBase64 } from '../utils/ArrayBufferToBase64';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  card: {\r\n    width: 380,\r\n    maxHeight: 140,\r\n    marginBottom: 15\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: 120\r\n  },\r\n  content: {\r\n    width: 190,\r\n    height: 20,\r\n    flex: '1 0 auto',\r\n    backgroundColor: grey[200],\r\n  },\r\n  info: {\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n  },\r\n  contentAndImage: {\r\n    display: 'flex',\r\n    maxHeight: 120\r\n  },\r\n  deleteButton: {\r\n    display: 'flex',\r\n    backgroundColor: red[400],\r\n    justifyContent: 'center',\r\n  },\r\n  iconButtons: {\r\n    position: 'relative',\r\n    top: 50,\r\n  },\r\n});\r\n\r\ninterface props {\r\n  product: ShoppingCartProduct\r\n}\r\n\r\nconst ShoppingCartCard: React.FC<props> = ({ product }): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n\r\n  const user = useAppSelector(state => state.userReducer.user);\r\n  let userId: string;\r\n  if (!user) {\r\n    userId = '';\r\n  } else {\r\n    userId = user._id;\r\n  }\r\n\r\n  const removeProductFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(removeProduct(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.removeProductFromShoppingCart({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(removeProduct(product, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  const decreaseQuantityFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(decreaseQuantity(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.decreaseProductQuantity({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(decreaseQuantity(product, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  const increaseQuantityFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(increaseQuantity(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.increaseProductQuantity({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(increaseQuantity(product, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  let image;\r\n  if (product.image) {\r\n    const buffer = Buffer.from(product.image.data);\r\n    image = arrayBufferToBase64(buffer);\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.container}>\r\n      <Card className={classes.card}>\r\n        <div className={classes.contentAndImage}>\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Typography className={classes.info} component=\"h6\" variant=\"h6\">\r\n                {product.name} x {product.quantity.toString()}\r\n              </Typography>\r\n              <Typography className={classes.info} variant=\"subtitle1\" color=\"textSecondary\">\r\n                {product.description}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {product.price}€\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n          <CardMedia\r\n            className={classes.image}\r\n            image={image}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CardActionArea className={classes.deleteButton} onClick={() => removeProductFromCart(product)}>\r\n            Remove item(s) from cart\r\n          </CardActionArea>\r\n        </div>        \r\n      </Card>\r\n      <div className={classes.iconButtons}>\r\n        <IconButton onClick={() => decreaseQuantityFromCart(product)}>\r\n          <Remove />\r\n        </IconButton>\r\n        <IconButton onClick={() => increaseQuantityFromCart(product)}>\r\n          <Add style={{ marginLeft: -10 }}/>\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartCard;","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport productService from '../../services/productService';\r\nimport { initializeProducts } from '../../store/Product/actionCreators';\r\nimport { setActiveProduct } from '../../store/ActiveProduct/actionCreators';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport ProductForm from './ProductForm';\r\n\r\n const SignupSchema = Yup.object().shape({\r\n  name: Yup\r\n    .string()\r\n    .required(\"Required\"),\r\n  description: Yup\r\n    .string(),\r\n  price: Yup\r\n    .number()\r\n    .required(\"Required\"),\r\n  stock: Yup\r\n    .number(),\r\n  image: Yup\r\n    .mixed()\r\n });\r\n \r\n\r\n\r\n const ModifyProductForm = ():JSX.Element => {\r\n  const [ image, setImage ] = useState<File>();\r\n  const [ tags, setTags ] = useState<Tag[]>([]);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const item = useAppSelector(state => state.activeProductReducer.product);\r\n  if (!item) return <div></div>;\r\n\r\n    return (\r\n      <div>\r\n        <Formik\r\n          initialValues={{\r\n            name: item.name,\r\n            description: item.description,\r\n            price: item.price,\r\n            stock: item.stock,\r\n            image: '' as unknown as File,\r\n            tags: item.tags\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            const { name, description, price, stock, image } = values;\r\n            const product: Product = { name, description, price, stock, _id: item._id, ratings: item.ratings, image: item.image, tags: item.tags };\r\n            const promise = productService.modifyProduct(product, image);\r\n            \r\n            void promise.then((res) => {\r\n              if (!res) {\r\n                dispatch(setNotification(\"Unexpected error\", 'error'));\r\n              }\r\n              console.log('modify product response:', res);\r\n              void dispatch(setActiveProduct(res));\r\n              void dispatch(initializeProducts());\r\n              dispatch(setNotification(`Product ${product.name} modified`, 'success'));\r\n            });\r\n            \r\n          }}\r\n        >\r\n          {({ errors, touched, setFieldValue, submitForm }) => (  \r\n            <ProductForm\r\n              errors={errors}\r\n              touched={touched}\r\n              setFieldValue={setFieldValue}\r\n              image={image}\r\n              setImage={setImage}\r\n              submitForm={submitForm}\r\n              tags={item.tags}\r\n              setTags={setTags}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </div>\r\n  );\r\n};\r\n\r\n export default ModifyProductForm;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ModifyProductForm from '../forms/product/ModifyProductForm';\r\n\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n      position: 'absolute',\r\n      width: 650,\r\n      height: 550,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: '0 30px',\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Modify Product </h2>\r\n  );\r\n};\r\n\r\nconst ModifyProductModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer.modifyProductModal);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen, 'ModifyProduct'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <ModifyProductForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModifyProductModal;","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport userService from '../../services/userService';\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport { handleModal } from '../../store/modal/actionCreators';\r\nimport { logIn } from '../../store/User/actionCreators';\r\nimport useStyles from '../formStyles';\r\n\r\n const SignupSchema = Yup.object().shape({\r\n    userName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    firstName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    lastName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    password: Yup\r\n      .string(),\r\n\r\n    email: Yup\r\n      .string()\r\n      .email('Invalid email')\r\n      .required('Required'),\r\n });\r\n \r\n const ModifyUserForm = ():JSX.Element => {\r\n   const classes = useStyles();\r\n   const dispatch: AppDispatch = useAppDispatch();\r\n   const loggedUser: Credentials | undefined = useAppSelector(state => state.userReducer.user);\r\n   if (!loggedUser) return <div></div>;\r\n   return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: loggedUser.userName,\r\n          firstName: loggedUser.firstName,\r\n          lastName: loggedUser.lastName,\r\n          password: '',\r\n          email: loggedUser.email,\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const modifiedUser: User = { \r\n            _id: loggedUser._id,\r\n            userName: values.userName,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            password: values.password,\r\n            email: values.email,\r\n          };\r\n          console.log(modifiedUser);\r\n          const promise = userService.modifyUser(modifiedUser);\r\n          promise.then((res) => {\r\n            // TODO: Korjaa backendi palauttamaan mikä kohta lomakkeessa feilaa\r\n            if (!res) {\r\n              dispatch(setNotification(\"User modification failed\",  'error'));\r\n            } else {\r\n              dispatch(handleModal(false, 'ModifyUser'));\r\n              dispatch(logIn({\r\n                ...modifiedUser,\r\n                _id: loggedUser._id,\r\n                userType: loggedUser.userType,\r\n                token: loggedUser.token,\r\n                recentActivity: loggedUser.recentActivity,\r\n                platformInfo: loggedUser.platformInfo\r\n              }));\r\n              window.localStorage.setItem(\r\n                'loggedUser', JSON.stringify({ ...modifiedUser, _id: loggedUser._id, userType: loggedUser.userType, token: loggedUser.token })\r\n              );\r\n            }\r\n          }).catch(e => console.log(e));    \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Username: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.userName && touched.userName) && (\r\n                    <div>{errors.userName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Firstname: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Firstname\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.firstName && touched.firstName) && (\r\n                    <div>{errors.firstName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Lastname: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Lastname\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.lastName && touched.lastName) && (\r\n                    <div>{errors.lastName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"If password field is left empty, it will not be changed\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.password && touched.password) && (\r\n                    <div>{errors.password}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Email: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"example@gmail.com\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.email && touched.email) && (\r\n                    <div>{errors.email}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n );\r\n};\r\n\r\n export default ModifyUserForm;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\nimport ModifyUserForm from \"../forms/User/ModifyUserForm\";\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 650,\r\n    height: 370,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: 10,\r\n    marginBottom: 30\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Modify user info </h2>\r\n  );\r\n};\r\n\r\nconst ModifyUserInfoModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer.modifyUserInfoModal);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen, 'ModifyUser'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <ModifyUserForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModifyUserInfoModal;","import React, { useState } from 'react';\r\nimport userService from '../../services/userService';\r\nimport { logIn } from '../../store/User/actionCreators';\r\nimport { Form, Field, Formik} from 'formik';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport { handleModal } from '../../store/modal/actionCreators';\r\nimport useStyles from '../formStyles';\r\n\r\n const ModifyImageSchema = Yup.object().shape({\r\n  image: Yup\r\n    .mixed()\r\n });\r\n\r\n const ModifyAvatar = ():JSX.Element => {\r\n  const classes = useStyles();\r\n  const [ image, setImage ] = useState<File>();\r\n  const user = useAppSelector(state => state.userReducer.user);\r\n  const userId = user? user._id : '';\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n    return (\r\n      <div>\r\n        <Formik\r\n          initialValues={{\r\n            image: '' as unknown as File\r\n          }}\r\n          validationSchema={ModifyImageSchema}\r\n          onSubmit={values => {\r\n            const { image } = values;\r\n            console.log(image);\r\n            void userService.modifyAvatar(image, userId)\r\n              .then((res) => {\r\n                console.log('modify avatar response', res);\r\n                if (res.avatar && user) {\r\n                  void dispatch(logIn({ ...user, avatar: res.avatar }));\r\n                  void dispatch(handleModal(false, 'ModifyUserAvatar'));     \r\n                }\r\n            });\r\n          }}\r\n        >\r\n          {({ setFieldValue, submitForm }) => (\r\n            <Form>\r\n            <Grid container spacing={1}>\r\n              \r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label> Avatar: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    type=\"File\"\r\n                    name=\"image\"\r\n                    value={undefined}\r\n                    style={{ color: 'rgba(0,0,0,0)'}}\r\n                    onChange={(event:React.ChangeEvent<HTMLInputElement>) => {\r\n                      setFieldValue('image', event.currentTarget.files? event.currentTarget.files[0] : undefined);\r\n                      setImage(event.currentTarget.files? event.currentTarget.files[0] : undefined);\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {image && \r\n                    <button type=\"button\" onClick={() => {\r\n                      setFieldValue('image', undefined);\r\n                      setImage(undefined);\r\n                    }}> \r\n                      Cancel\r\n                    </button>\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label> Avatar preview: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  {image ? \r\n                    <img height={100} width={100} src={ URL.createObjectURL(image) } alt=\"Preview to upload\" />\r\n                  :\r\n                    <img height={100} width={100} src={'https://live.staticflickr.com/5217/5471047557_4dc13f5376_n.jpg'} alt=\"Preview to upload\" />\r\n                  }\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} onClick={submitForm} type=\"submit\">Submit</button>\r\n          </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n  );\r\n};\r\n\r\n export default ModifyAvatar;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\nimport ModifyUserAvatar from \"../forms/User/ModifyAvatar\";\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 650,\r\n    height: 300,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: 10,\r\n    marginBottom: 30\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Change Avatar </h2>\r\n  );\r\n};\r\n\r\nconst ModifyUserAvatarModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen.modifyUserAvatarModal, 'ModifyUserAvatar'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen.modifyUserAvatarModal}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <ModifyUserAvatar />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModifyUserAvatarModal;","import axios from 'axios';\r\n\r\n// TODO: FIX RETURN TYPES\r\n\r\nconst baseURL = 'https://verkkis.herokuapp.com/api/shoppingCart';\r\n\r\nconst createNewShoppingCart = async (products: ShoppingCart): Promise<ShoppingCart> => {\r\n  const request = await axios.post<ShoppingCart>(baseURL, products);\r\n  return request.data;\r\n};\r\n\r\nconst getUsersShoppingCart = async (userId: string):Promise<ShoppingCart | null> => {\r\n  const request = await axios.get<ShoppingCart | null>(`${baseURL}/${userId}`);\r\n  return request.data;\r\n};\r\n\r\nconst addProductToShoppingCart = async (productToAdd: CartProduct):Promise<ShoppingCartProduct> => {\r\n  const request = await axios.post<ShoppingCartProduct>(`${baseURL}/${productToAdd.cartId}/addProduct`, productToAdd);\r\n  return request.data;\r\n};\r\n  \r\nconst removeProductFromShoppingCart = async (productToRemove: CartProduct): Promise<ShoppingCartProduct> => {\r\n  const request = await axios.put<ShoppingCartProduct>(`${baseURL}/${productToRemove.cartId}/remove`, productToRemove);\r\n  return request.data;\r\n};\r\n\r\nconst increaseProductQuantity = async (product: CartProduct):Promise<ShoppingCartProduct> => {\r\n  const request = await axios.put<ShoppingCartProduct>(`${baseURL}/${product.cartId}/increase`, product);\r\n  return request.data;\r\n};\r\n\r\nconst decreaseProductQuantity = async (product: CartProduct):Promise<ShoppingCartProduct> => {\r\n  const request = await axios.put<ShoppingCartProduct>(`${baseURL}/${product.cartId}/decrease`, product);\r\n  return request.data;\r\n};\r\n\r\nconst setShoppingCartActivity = async (cartId: string, data: boolean):Promise<ShoppingCart> => {\r\n  console.log('set shopping cart activity cartid', cartId);\r\n  const request = await axios.put<ShoppingCart>(`${baseURL}/${cartId}/activity`, { data: data });\r\n  return request.data;\r\n};\r\n\r\nconst setShoppingCartCompleted = async (cartId: string):Promise<ShoppingCart | null> => {\r\n  const request = await axios.put<ShoppingCart | null>(`${baseURL}/${cartId}/completed`);\r\n  return request.data;\r\n};\r\n\r\nconst removeShoppingCart = async (userId: string):Promise<ShoppingCart> => {\r\n  const request = await axios.delete<ShoppingCart>(`${baseURL}/${userId}`);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  createNewShoppingCart,\r\n  addProductToShoppingCart,\r\n  increaseProductQuantity,\r\n  decreaseProductQuantity,\r\n  removeProductFromShoppingCart,\r\n  getUsersShoppingCart,\r\n  removeShoppingCart,\r\n  setShoppingCartActivity,\r\n  setShoppingCartCompleted,\r\n};","import * as actionTypes from \"./actionTypes\";\r\nimport { notificationTypeCheck } from '../../typeGuards';\r\n\r\ntype SetNotification = (dispatch: DispatchType) => void;\r\n\r\nexport const setNotification = (data: string, notificationType: NotificationType): SetNotification => {\r\n  if (notificationTypeCheck(notificationType)) {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.SET_NOTIFICATION,\r\n      notificationType: notificationType,\r\n      data,\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n  }\r\n  else {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.SET_NOTIFICATION,\r\n      notificationType: 'error',\r\n      data,\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n  }\r\n};\r\n\r\nexport const hideNotification = (): SetNotification => {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.HIDE_NOTIFICATION,\r\n      notificationType: 'error',\r\n      data: '',\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n};","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { IconButton, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core/';\r\nimport Menu, { MenuProps } from '@material-ui/core/Menu';\r\nimport { Person, ShoppingBasket, AccountCircle } from '@material-ui/icons';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nconst AccountMenu = (): JSX.Element => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton style={{ color: 'white'}} onClick={handleClick}>\r\n        <AccountCircle style={{ fontSize: 30, marginTop: 5}}/>\r\n      </IconButton>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Link to=\"/account\" style={{ textDecoration: 'none' }}>\r\n          <StyledMenuItem>\r\n              <ListItemIcon>\r\n                <Person fontSize=\"small\" />\r\n              </ListItemIcon>\r\n            <ListItemText primary=\"Personal info\" />\r\n          </StyledMenuItem>\r\n        </Link>\r\n        <Link to=\"/pastOrders\" style={{ textDecoration: 'none'}}>\r\n          <StyledMenuItem>\r\n            <ListItemIcon>\r\n              <ShoppingBasket fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Past orders\" />\r\n          </StyledMenuItem>\r\n        </Link>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountMenu;","import * as actionTypes from './actionTypes';\r\n\r\ntype SetFilter = (dispatch: DispatchType) => void;\r\n\r\nexport const setFilter = (data: string): SetFilter => {\r\n  const action: SetFilterAction = {\r\n    type: actionTypes.SET_FILTER,\r\n    data\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const setTag = (data?: Tag): SetFilter => {\r\n  const action: SetTagAction = {\r\n    type: actionTypes.SET_TAG,\r\n    data\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport swal from 'sweetalert';\r\nimport platform from 'platform';\r\n\r\nimport { platformParser } from '../../utils/platformParser';\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport userService from '../../services/userService';\r\nimport { logIn } from '../../store/User/actionCreators';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport { handleModal } from '../../store/modal/actionCreators';\r\nimport { createNewShoppingCart } from '../../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../../services/shoppingCartService';\r\nimport { retrieveOldShoppingCart } from '../../store/ShoppingCart/actionCreators'; \r\nimport useStyles from '../formStyles';\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  userName: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n\r\n  password: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n});\r\n\r\nconst LogInForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const cartState: ShoppingCartState = useAppSelector(state => state.shoppingCartReducer);\r\n  const classes = useStyles();\r\n  \r\n  const platformInfo = platformParser(platform.name, platform.os?.family, platform.os?.version); \r\n\r\n  const usePreviousShoppingCart = (res: ShoppingCart) => { \r\n    void swal({\r\n      title: 'Use unfinished shopping cart?',\r\n      text: 'Previous unfinished shopping cart found, do you want to use that one or create new one? Old will be removed permanently if new is created',\r\n      icon: 'info',\r\n      buttons: ['Create new!', 'Use previous!'],\r\n    })\r\n    .then((findPrevious) => {\r\n      if (findPrevious) {\r\n        dispatch(retrieveOldShoppingCart(res.id, res.products));\r\n        void shoppingCartService.setShoppingCartActivity(res.id, true);\r\n      } else {\r\n        const promise = shoppingCartService.createNewShoppingCart({ products: cartState.cart, user: res.user, id: '' });\r\n        void promise.then((response) => {            \r\n          const removed = shoppingCartService.removeShoppingCart(res.user);\r\n          void removed.then((removedResponse) => {\r\n            console.log('loginform removed shopping cart', removedResponse);\r\n          });\r\n          console.log('Log in: new shoppingcart response', response);\r\n          dispatch(createNewShoppingCart(response.id));\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const user = userService.signIn(values.userName, values.password, platformInfo);\r\n          void user.then((res) => {\r\n            if (!res.token) {\r\n              dispatch(setNotification(\"Invalid username / password\", 'error'));\r\n            } else {\r\n              const credentials: Credentials = {\r\n                _id: res._id,\r\n                firstName: res.firstName,\r\n                lastName: res.lastName,\r\n                userName: res.userName,\r\n                email: res.email,\r\n                userType: res.userType,\r\n                avatar: res.avatar,\r\n                token: res.token,\r\n                recentActivity: res.recentActivity,\r\n                platformInfo: res.platformInfo,\r\n                ratings: res.ratings,\r\n              };\r\n              const storeInfo: CredentialsWithTimeStamp = { ...credentials, timestamp: new Date };\r\n              window.localStorage.setItem(\r\n                'loggedUser', JSON.stringify(storeInfo)\r\n              );\r\n              dispatch(logIn(credentials));\r\n              dispatch(handleModal(false, 'LogIn'));\r\n              dispatch(setNotification(\"Logged in as: \" + credentials.userName, 'success'));\r\n              \r\n              const usersShoppingCart = shoppingCartService.getUsersShoppingCart(credentials._id);\r\n              void usersShoppingCart.then((res) => {\r\n                if (res) {\r\n                  console.log('login form', res);\r\n                  usePreviousShoppingCart(res);      \r\n                } else {\r\n                  console.log('luodaan uusi karry');\r\n                  const promise = shoppingCartService.createNewShoppingCart({ products: cartState.cart, user: credentials._id, id: '' });\r\n                  void promise.then((res) => {\r\n                    console.log('login form new shopping cart', res);\r\n                    dispatch(createNewShoppingCart(res.id));\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Username: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.userName && touched.userName) && (\r\n                    <div>{errors.userName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.password && touched.password) && (\r\n                    <div>{errors.password}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>      \r\n    </div>\r\n );\r\n};\r\n\r\n export default LogInForm;\r\n","export const platformParser = (name: string | undefined, family: string | undefined, version: string | undefined): string => {\r\n  let string = '';\r\n  if (name) {\r\n    string += name + ' ';\r\n  } else {\r\n    string += 'unknown name ';\r\n  }\r\n  if (family) {\r\n    string += family + ' ';\r\n  } else {\r\n    string += 'unknown os ';\r\n  }\r\n  if (version) {\r\n    string += version;\r\n  } else {\r\n    string += 'unknown version ';\r\n  }\r\n\r\n  return string;\r\n};","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport LogInForm from '../forms/User/LogInForm';\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n  paper: {\r\n      position: 'absolute',\r\n      width: 450,\r\n      height: 190,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: '0 30px',\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <h2 className={classes.header}> Log In</h2>\r\n  );\r\n};\r\n\r\n\r\nconst LogInModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer.logInModal);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen, 'LogIn'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <LogInForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LogInModal;","import React, { useState } from 'react';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { AppDispatch, useAppDispatch } from '../../store/rootReducer';\r\nimport productService from '../../services/productService';\r\nimport { addProduct } from '../../store/Product/actionCreators';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport ProductForm from './ProductForm';\r\n\r\n const SignupSchema = Yup.object().shape({\r\n  name: Yup\r\n    .string()\r\n    .required(\"Required\"),\r\n  description: Yup\r\n    .string(),\r\n  price: Yup\r\n    .number()\r\n    .required(\"Required\"),\r\n  stock: Yup\r\n    .number(),\r\n  image: Yup\r\n    .mixed()\r\n });\r\n\r\n const AddProductForm = ():JSX.Element => {\r\n  const [ image, setImage ] = useState<File>();\r\n  const [ tags, setTags ] = useState<Tag[]>([]);\r\n\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n    return (\r\n      <div>\r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            description: '',\r\n            price: 0,\r\n            stock: 0,\r\n            image: '' as unknown as File\r\n          }}\r\n          \r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            const { name, description, price, stock, image } = values;\r\n            const product: NoIdProduct = { name, description, price, stock, ratings: [], tags: tags };\r\n            const promise = productService.addProduct(product, image);\r\n            void promise.then((res) => {\r\n              if (res !== null) {\r\n                const addedProduct: Product = {\r\n                  name: res.name,\r\n                  description: res.description,\r\n                  price: res.price,\r\n                  stock: res.stock,\r\n                  image: res.image,\r\n                  ratings: res.ratings,\r\n                  tags: [],\r\n                  _id: res._id\r\n                };\r\n                dispatch(addProduct(addedProduct));\r\n                dispatch(setNotification(`Product ${product.name} added`, 'success'));\r\n              } \r\n            });\r\n          }}\r\n        >\r\n          {({ errors, touched, setFieldValue, submitForm }) => (\r\n            <ProductForm\r\n              errors={errors}\r\n              touched={touched}\r\n              setFieldValue={setFieldValue}\r\n              image={image}\r\n              setImage={setImage}\r\n              submitForm={submitForm}\r\n              tags={tags}\r\n              setTags={setTags}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </div>\r\n  );\r\n};\r\n\r\n export default AddProductForm;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddProductForm from '../forms/product/AddProductForm';\r\n\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n      position: 'absolute',\r\n      width: 650,\r\n      height: 550,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: '0 30px',\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Add Product </h2>\r\n  );\r\n};\r\n\r\nconst AddProductModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer.addProductModal);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen, 'AddProduct'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <AddProductForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddProductModal;  ","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport userService from '../../services/userService';\r\nimport { AppDispatch, useAppDispatch } from '../../store/rootReducer';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport { handleModal } from '../../store/modal/actionCreators';\r\nimport useStyles from '../formStyles';\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  userName: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n\r\n  firstName: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n\r\n  lastName: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n\r\n  password: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n\r\n  email: Yup\r\n    .string()\r\n    .email('Invalid email')\r\n    .required('Required'),\r\n});\r\n\r\nconst CreateUserForm = ():JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          password: '',\r\n          email: '',\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const newUser: NoIdUser = { \r\n            userName: values.userName,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            password: values.password,\r\n            email: values.email,\r\n            userType: 'User',\r\n          };\r\n          const promise = userService.createUser(newUser);\r\n          promise.then((res) => {\r\n            // TODO: Korjaa backendi palauttamaan mikä kohta lomakkeessa feilaa\r\n            if (!res) {\r\n              dispatch(setNotification(\"User creation failed\",  'error'));\r\n            } else {\r\n              dispatch(handleModal(false, 'CreateUser'));\r\n              dispatch(setNotification(\"Created user: \" + newUser.userName, 'success'));\r\n            }\r\n          }).catch(e => console.log(e));    \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                <label>Username: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.userName && touched.userName) && (\r\n                    <div>{errors.userName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Firstname: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Firstname\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.firstName && touched.firstName) && (\r\n                    <div>{errors.firstName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Lastname: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Lastname\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.lastName && touched.lastName) && (\r\n                    <div>{errors.lastName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.password && touched.password) && (\r\n                    <div>{errors.password}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Email: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"example@gmail.com\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.email && touched.email) && (\r\n                    <div>{errors.email}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateUserForm;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CreateUserForm from \"../forms/User/CreateUserForm\";\r\n\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../store/rootReducer';\r\nimport { handleModal } from \"../store/modal/actionCreators\";\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 650,\r\n    height: 370,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: 10,\r\n    marginBottom: 30\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Create User </h2>\r\n  );\r\n};\r\n\r\nconst CreateUserModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  \r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const modalOpen = useAppSelector(state => state.modalReducer.createUserModal);\r\n\r\n  const handleClose = () => {\r\n    dispatch(handleModal(false, 'CreateUser'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <CreateUserForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateUserModal;  ","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton, Button, Typography, Toolbar, AppBar, Tooltip, TextField } from '@material-ui/core/';\r\nimport { AddCircleOutline, Menu, Search, ShoppingCart, Backspace } from '@material-ui/icons/';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AccountMenu from './AccountMenu';\r\nimport { logIn } from '../store/User/actionCreators';\r\nimport { useAppDispatch, AppDispatch, useAppSelector } from '../store/rootReducer';\r\nimport { setNotification } from '../store/Notification/actionCreators';\r\nimport { setFilter } from '../store/Filter/actionCreators';\r\nimport LogInModal from '../modals/LogInModal';\r\nimport AddProductModal from '../modals/AddProductModal';\r\nimport CreateUserModal from '../modals/CreateUserModal';\r\nimport { clearShoppingCart } from '../store/ShoppingCart/actionCreators';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    marginRight: theme.spacing(10),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    marginLeft: 'auto',\r\n    marginRight: -12,\r\n    fontSize: 15\r\n  },\r\n  login: {\r\n    margin: theme.spacing(2),\r\n    fontSize: 15,\r\n    flexDirection: 'column'\r\n  },\r\n  addProductIcon: {\r\n    height: 30,\r\n    width: 30,\r\n  },\r\n  whiteIcon: {\r\n    color: 'white',\r\n    fontSize: 30\r\n  },\r\n  searchIcon: {\r\n    color: 'white',\r\n  }\r\n}));\r\n\r\ntype Props = {\r\n  user?: Credentials\r\n};\r\n\r\nconst Navibar = ({ user }: Props): JSX.Element => {\r\n  const [ searchText, setSearchText ] = useState('');\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n  \r\n  const logOut = () => {\r\n    void shoppingCartService.setShoppingCartActivity(cartId, false);\r\n    dispatch(logIn());\r\n    dispatch(clearShoppingCart());\r\n    dispatch(setNotification(\"Have a nice day\", 'success'));\r\n    window.localStorage.removeItem('loggedUser');\r\n  };\r\n\r\n  const handleSearchText = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.preventDefault();\r\n    setSearchText(event.target.value);\r\n  };\r\n\r\n  const filterProducts = () => {\r\n    dispatch(setFilter(searchText));\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setSearchText('');\r\n    dispatch(setFilter(''));\r\n  };\r\n\r\n  const loggedIn = !!user;\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Link to=\"/\">\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <Menu />\r\n            </IconButton>\r\n          </Link>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Verkkokauppa\r\n          </Typography>\r\n          <TextField \r\n            placeholder=\"Search products\"\r\n            onChange={handleSearchText}\r\n            style={{ backgroundColor: '#dae1f0'}}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            value={searchText}\r\n          />\r\n          <IconButton onClick={() => filterProducts()}>\r\n            <Search className={classes.searchIcon}/>\r\n          </IconButton>\r\n          <IconButton onClick={() => clearFilter()}>\r\n            <Tooltip title=\"Clear searchbar\">\r\n              <Backspace className={classes.searchIcon} />\r\n            </Tooltip>\r\n          </IconButton>\r\n          <div className={classes.buttons}>\r\n            {user?.userType === 'Admin' && (\r\n              <IconButton onClick={() => dispatch(handleModal(true, 'AddProduct'))} color=\"inherit\">\r\n                <Tooltip title=\"Add product\">\r\n                  <AddCircleOutline className={classes.addProductIcon} />\r\n                </Tooltip>\r\n              </IconButton>\r\n            )}\r\n            <div>\r\n              <Button onClick={() => loggedIn ? logOut() : dispatch(handleModal(true, 'LogIn'))} color=\"inherit\">\r\n                <Typography variant=\"h6\" className={classes.login}>\r\n                  {loggedIn ? 'Log out' : 'Login'}\r\n                </Typography>\r\n              </Button>\r\n            </div>  \r\n            {!user && \r\n              <div>\r\n                <Button onClick={() => dispatch(handleModal(true, 'CreateUser'))} color=\"inherit\">\r\n                  <Typography variant=\"h6\" className={classes.login}>\r\n                    Create User\r\n                  </Typography>\r\n                </Button>\r\n              </div>  \r\n            }\r\n            <div>\r\n              <Link to=\"/shoppingCart\">\r\n                <IconButton className={classes.whiteIcon} >\r\n                  <ShoppingCart style={{ fontSize: 30, marginTop: 5}}/>\r\n                </IconButton>\r\n              </Link>\r\n            </div>\r\n            {user &&\r\n              <div>\r\n                <AccountMenu />\r\n              </div>\r\n            }\r\n          </div>\r\n        </Toolbar>\r\n        <LogInModal />\r\n        <AddProductModal />\r\n        <CreateUserModal />\r\n      </AppBar>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Navibar };\r\n","import React from \"react\";\r\nimport { Product } from './Product';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAppSelector } from '../store/rootReducer';\r\nimport { Typography } from '@material-ui/core/';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: 'relative',\r\n    display: 'flex',\r\n    paddingLeft: 15\r\n  },\r\n});\r\n\r\nconst ProductListPage = (): JSX.Element | null => {\r\n  const classes = useStyles();\r\n  const products: Product[] = useAppSelector(\r\n    state => state.productReducer.products\r\n  );\r\n\r\n  const filter = useAppSelector(state => state.filterReducer);\r\n\r\n  if (products.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const filteredByName = filter.productFilter.length === 0 ?\r\n    products :\r\n    products.filter(p => p.name.toLowerCase().includes(filter.productFilter.toLowerCase()));\r\n  \r\n\r\n  const filteredProducts = filter.tagFilter?\r\n    filteredByName.filter(p => {\r\n      if (filter.tagFilter && p.tags.includes(filter.tagFilter)) return p;\r\n    })\r\n    :\r\n    filteredByName;\r\n    \r\n\r\n  console.log('filtered', filteredProducts);\r\n  if (filteredProducts.length === 0) {\r\n    // TODO: Stylet filtteri ilmotukseen\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h5\"> No results with current filter </Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {filteredProducts.map((product: Product) => (\r\n        <Product key={product._id} product={product} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {ProductListPage};  ","import React, { useState, useEffect } from 'react';\r\n\r\nimport userService from '../services/userService';\r\nimport { useAppSelector } from '../store/rootReducer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons/';\r\nimport { parseDate } from '../utils/DateParser';\r\nimport { blue, grey } from '@material-ui/core/colors/';\r\n\r\ntype ShoppingCartWithCompletionDate = {\r\n  products: ShoppingCartProduct[],\r\n  user: string,\r\n  id: string,\r\n  completionDate: Date,\r\n};\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableContainer,\r\n  TableCell,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n  Collapse,\r\n  Box\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: grey[300],\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n  header: {\r\n    backgroundColor: blue[300],\r\n  },\r\n  mainRow: {\r\n    backgroundColor: blue[200],\r\n  },\r\n  row: {  \r\n    '&:hover': {\r\n      backgroundColor: blue[200],\r\n    },\r\n  },\r\n  body: {\r\n    backgroundColor: grey[200],\r\n  }\r\n});\r\n\r\ninterface RowProps {\r\n  order: ShoppingCart\r\n}\r\n\r\nconst Row = ({ order }: RowProps):JSX.Element => {\r\n  const [ open, setOpen ] = useState<boolean>();\r\n  const classes = useStyles();\r\n\r\n  const totalPrice = () => {\r\n    return order.products.reduce((prev, cur) => prev + cur.price * cur.quantity, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={`${classes.root}`}>\r\n        <TableCell>\r\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\"> {parseDate(order.completionDate)} </TableCell>\r\n        <TableCell />\r\n        <TableCell />\r\n        <TableCell />\r\n        <TableCell />\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Order total price: &nbsp; {totalPrice()}\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow className={classes.body}>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Price</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.body}>\r\n                  {order.products.map((product) => (\r\n                    <TableRow key={product._id} className={classes.row}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {product.name}\r\n                      </TableCell>\r\n                      <TableCell>{product.price}</TableCell>\r\n                      <TableCell align=\"right\">{product.quantity}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(product.quantity * product.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nconst sortOrders = (orders: ShoppingCart[]): ShoppingCartWithCompletionDate[] => {\r\n  const newList: ShoppingCartWithCompletionDate[] = orders as ShoppingCartWithCompletionDate[];\r\n  return newList.sort((o1, o2) => new Date(o2.completionDate).getTime() - new Date(o1.completionDate).getTime());\r\n};\r\n\r\nconst PastOrders = (): JSX.Element => {\r\n  const [ orders, setOrders ] = useState<ShoppingCart[]>([]);\r\n  const sortedOrders = sortOrders(orders);\r\n  const classes = useStyles();\r\n  const user = useAppSelector(state => state.userReducer.user);\r\n\r\n  if (!user) return <div></div>;\r\n\r\n  useEffect(() => {\r\n    void userService.getUsersCompletedShoppingcarts(user._id)\r\n      .then((res) => {\r\n        setOrders(res);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow className={classes.header}>\r\n            <TableCell />\r\n            <TableCell>Date Of Order</TableCell>\r\n            <TableCell align=\"left\" />\r\n            <TableCell align=\"right\"/>\r\n            <TableCell align=\"right\"/>\r\n            <TableCell align=\"right\"/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.body}>\r\n          {sortedOrders.map((order) => (\r\n            <Row key={order.id} order={order}/>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default PastOrders;","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport { userCheck } from '../../typeGuards';\r\nimport shoppingCartService from '../../services/shoppingCartService';\r\nimport { clearShoppingCart } from '../../store/ShoppingCart/actionCreators';\r\nimport useStyles from '../formStyles';\r\n\r\nconst ShippingSchema = Yup.object().shape({\r\n  firstName: Yup\r\n    .string()\r\n    .required(\"Required\"),\r\n  lastName: Yup\r\n    .string()\r\n    .required(\"Required\"),\r\n  address: Yup\r\n    .string()\r\n    .required(\"Required\")\r\n});\r\n \r\nconst ShoppingCartForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const user: Credentials | undefined = useAppSelector(state => state.userReducer.user);\r\n  const cartState: ShoppingCartState = useAppSelector(state => state.shoppingCartReducer);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: user ? user.firstName : '',\r\n          lastName: user ? user.lastName : '',\r\n          address: '',\r\n        }}\r\n        validationSchema={ShippingSchema}\r\n        onSubmit={values => {\r\n          const { firstName, lastName, address } = values;      \r\n          const shippingInfo: ShippingInfo = { firstName, lastName, address };\r\n          // TODO: Checkaa ettei kärry ole tyhjä\r\n          if (userCheck(user)) {\r\n            void shoppingCartService.setShoppingCartCompleted(cartState.cartId)\r\n              .then((response) => {\r\n                if (!response) {\r\n                  console.log(response);\r\n                  dispatch(setNotification('Unexpected error', 'error'));\r\n                  // TODO: ??\r\n                } else {\r\n                  console.log(response);\r\n                  dispatch(clearShoppingCart());\r\n                  dispatch(setNotification('Delivering products to ' + shippingInfo.address, 'success'));\r\n                }\r\n            });\r\n          }    \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>First name: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"First name\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.firstName && touched.firstName) && (\r\n                    <div>{errors.firstName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Last name: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Last name\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.lastName && touched.lastName) && (\r\n                    <div>{errors.lastName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Address: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Address\"\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.address && touched.address) && (\r\n                    <div>{errors.address}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button disabled={!user} className={classes.button} style={{ left: '0%' }} type=\"submit\"> Submit </button>\r\n                {!user &&\r\n                  <Typography variant=\"subtitle1\" className={classes.logInText}> Please sign in first </Typography>\r\n                }\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartForm;","import React from 'react';\r\nimport { useAppSelector, useAppDispatch, AppDispatch } from '../store/rootReducer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, Container, Grid } from '@material-ui/core';\r\n\r\nimport ShoppingCartForm from '../forms/shoppingCart/ShoppingCartForm';\r\nimport ShoppingCartCard from './ShoppingCartCard';\r\nimport { removeProduct } from '../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\n\r\nconst useStyles = makeStyles({\r\n  box: {\r\n    maxHeight: 350\r\n  },\r\n  shoppingCartAndFormBox: {\r\n    margin: 25,\r\n    marginLeft: -10,\r\n    height: 300,\r\n    borderRadius: 15,\r\n  },\r\n  cart: {\r\n    margin: 25,\r\n    borderRadius: 15,\r\n    height: 300\r\n  },\r\n  container: {\r\n    marginTop: 15, \r\n  },\r\n  deleteIcon: {\r\n    position: 'relative',\r\n    top: -15\r\n  },\r\n  form: {\r\n    borderWidth: 1,\r\n    marginTop: 75,\r\n    padding: 10,\r\n  },\r\n  empty: {\r\n    position: 'relative',\r\n    top: '50%',\r\n    left: '25%',\r\n  }\r\n});\r\n\r\nconst ShoppingCart: React.FC = (): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const products: ShoppingCartProduct[] = useAppSelector(\r\n    state => state.shoppingCartReducer.cart\r\n  );\r\n\r\n  const user: Credentials | undefined = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n  const userId = user?._id || '';\r\n\r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n\r\n  const removeProductFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(removeProduct(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.removeProductFromShoppingCart({ cartId, userId, product });\r\n      promise.then(() => {\r\n        dispatch(removeProduct(product, cartId));\r\n      }).catch(e => console.log(e));\r\n    }\r\n  };\r\n\r\n  const totalPrice = () => {\r\n    return products.reduce((prev, cur) => prev + cur.price * cur.quantity, 0);\r\n  };\r\n  \r\n  console.log('shopping cart', products);\r\n  return (\r\n    <Box className={classes.box} border={1}>\r\n      <Grid container item xs={12} spacing={3}>\r\n        <Grid item xs={6}>\r\n          <Box border={1} className={classes.cart}> \r\n            {products.length === 0 ?\r\n              <Typography variant='h5' className={classes.empty}> Your Shopping Cart Is Empty </Typography>\r\n              :\r\n              <div style={{ maxHeight: 300, overflow: 'auto' }}>\r\n                {products.map(product => {\r\n                  if (product.quantity > 0) {\r\n                    return (\r\n                      <Container key={product._id} className={classes.container} maxWidth=\"sm\">\r\n                        <ShoppingCartCard key={product._id} product={product} />\r\n                      </Container>\r\n                    );\r\n                  } else {\r\n                    removeProductFromCart(product);\r\n                  }\r\n                })}\r\n                <Typography variant='h5' style={{ marginLeft: 20 }}>\r\n                  Total price: {totalPrice()}\r\n                </Typography>  \r\n              </div>\r\n              \r\n            }\r\n          </Box>\r\n        </Grid>  \r\n        <Grid item xs={6}>\r\n          <Box border={1} className={classes.shoppingCartAndFormBox}>\r\n            <div className={classes.form}> \r\n              <ShoppingCartForm />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ShoppingCart;","import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useAppDispatch, AppDispatch } from '../store/rootReducer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { hideNotification } from '../store/Notification/actionCreators';\r\n\r\ninterface NotificationProps {\r\n  type: NotificationType,\r\n  message: string,\r\n  tts?: number\r\n}\r\n\r\nconst Alert: React.FC<NotificationProps> = ({ type, message }: NotificationProps) => {\r\n  switch (type) {\r\n    case 'success':\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"success\" > {message} </MuiAlert>;\r\n\r\n    case 'error':\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" > {message} </MuiAlert>;\r\n\r\n    default:\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"info\" > {message} </MuiAlert>;   \r\n  } \r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '15%',\r\n    position: 'relative',\r\n    marginBottom: 15,\r\n    left: 15,\r\n  },\r\n});\r\n\r\nconst Notification: React.FC<NotificationProps> = ({ type, message, tts = 5000 }: NotificationProps) => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  setTimeout(() => dispatch(hideNotification()), tts);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert type={type} message={message} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\r\nimport { List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core/';\r\nimport { FreeBreakfast, Build, Home, AllInclusive, BarChart } from '@material-ui/icons';\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../store/rootReducer';\r\nimport { setTag } from '../store/Filter/actionCreators';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(\r\n  createStyles({\r\n    container: {\r\n      position: 'relative',\r\n    },\r\n    appMenu: {\r\n      width: '100%',\r\n    },\r\n    menuItem: {\r\n      height: 70,\r\n      width: drawerWidth,\r\n    },\r\n    menuIcon: {\r\n      color: '#3f51b5',\r\n    }\r\n  }),\r\n);\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const tagi: Tag | undefined = useAppSelector(state => state.filterReducer.tagFilter);\r\n\r\n  console.log('tagi', tagi);\r\n  return (\r\n    <div className={classes.container}>\r\n      <Link to=\"/\" style={{ textDecoration: 'none', color: 'rgb(0,0,0)' }}>\r\n        <List className={classes.appMenu} disablePadding>\r\n          <ListItem onClick={() => dispatch(setTag())} divider button className={classes.menuItem}>\r\n            <ListItemIcon className={classes.menuIcon}>\r\n              <AllInclusive />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"All\" />\r\n          </ListItem>\r\n\r\n          <ListItem onClick={() => dispatch(setTag('Kirves'))} divider button className={classes.menuItem}>\r\n            <ListItemIcon className={classes.menuIcon}>\r\n              <Build />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Kirves\" />\r\n          </ListItem>\r\n\r\n          <ListItem onClick={() => dispatch(setTag('Ruoka/Juoma'))} divider button className={classes.menuItem}>\r\n            <ListItemIcon className={classes.menuIcon}>\r\n              <FreeBreakfast />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Ruoka/Juoma\" />\r\n          </ListItem>\r\n\r\n          <ListItem onClick={() => dispatch(setTag('Mokki Essential'))} divider button className={classes.menuItem}>\r\n            <ListItemIcon className={classes.menuIcon}>\r\n              <Home />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Mokki Essential\" />\r\n          </ListItem>\r\n\r\n          <ListItem onClick={() => dispatch(setTag('muut'))} divider button className={classes.menuItem}>\r\n            <ListItemIcon className={classes.menuIcon}>\r\n              <BarChart />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Muut\" />\r\n          </ListItem>\r\n\r\n        </List>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Navibar } from './components/Navibar';\r\nimport { ProductListPage } from './components/ProductListPage';\r\nimport ProductInfo  from './components/ProductInfo';\r\nimport Account from './components/Account';\r\nimport PastOrders from './components/PastOrders';\r\nimport ShoppingCart from './components/ShoppingCart';\r\nimport shoppingCartService from './services/shoppingCartService';\r\n\r\nimport { initializeProducts } from './store/Product/actionCreators';\r\nimport { createNewShoppingCart, retrieveOldShoppingCart, clearShoppingCart } from './store/ShoppingCart/actionCreators';\r\nimport { logIn } from './store/User/actionCreators';\r\nimport { useAppSelector, useAppDispatch, AppDispatch } from './store/rootReducer';\r\n\r\nimport Notification from './UI/Notification';\r\nimport { safeJsonParse, isCredentialsWithTimestamp } from './typeGuards';\r\nimport { validTimeStamp } from './utils/ValidTimeStamp';\r\n\r\nimport Sidebar from './components/Sidebar';\r\n\r\nconst App = (): JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const user: Credentials | undefined = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n\r\n  const notification: NotificationState = useAppSelector(\r\n    state => state.notificationReducer\r\n  );\r\n\r\n  const shoppingCart: ShoppingCartState = useAppSelector(\r\n    state => state.shoppingCartReducer\r\n  );\r\n\r\n  useEffect(() => {\r\n    void dispatch(initializeProducts());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loggedUser = window.localStorage.getItem('loggedUser');\r\n      if (loggedUser) {\r\n      const parsedUser = safeJsonParse(isCredentialsWithTimestamp)(loggedUser);\r\n      if (parsedUser.hasError) {\r\n        console.log('error at parsed user');\r\n      } else {\r\n        if (validTimeStamp(parsedUser.parsed.timestamp)) {\r\n          dispatch(logIn(parsedUser.parsed));\r\n          const usersShoppingCart = shoppingCartService.getUsersShoppingCart(parsedUser.parsed._id);\r\n          void usersShoppingCart.then((res) => {\r\n            if (res) {\r\n              dispatch(retrieveOldShoppingCart(res.id, res.products));\r\n            } else {\r\n              void shoppingCartService.createNewShoppingCart({ \r\n                products: shoppingCart.cart,\r\n                user: parsedUser.parsed._id,\r\n                id: shoppingCart.cartId\r\n              }).then((res => {\r\n                dispatch(createNewShoppingCart(res.id));\r\n              }));\r\n            }\r\n          });\r\n        } else {\r\n          void shoppingCartService.setShoppingCartActivity(shoppingCart.cartId, false);\r\n          dispatch(logIn());\r\n          dispatch(clearShoppingCart());\r\n          window.localStorage.removeItem('loggedUser');\r\n        } \r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navibar user={user} />\r\n        <br/>\r\n        {notification.visible && (\r\n          <div>\r\n            <Notification type={notification.type} message={notification.message} />\r\n          </div>\r\n        )}\r\n        <div style={{ display: 'flex', flexDirection: 'row' }}>\r\n          <Sidebar />\r\n          <Switch>\r\n            <Route path=\"/account\" render={() => <Account user={user}/>} />\r\n          </Switch>\r\n\r\n          <Switch>\r\n            <Route path='/pastOrders' render={() => <PastOrders />} />\r\n          </Switch>\r\n\r\n          <Switch>\r\n            <Route path=\"/shoppingCart\" render={() => <ShoppingCart />} />\r\n          </Switch>\r\n\r\n          <Switch>\r\n            <Route path=\"/product\" render={() => <ProductInfo />} />\r\n          </Switch>\r\n\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => <ProductListPage />} />\r\n          </Switch>\r\n        </div>\r\n      </Router> \r\n\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default App;","export const validTimeStamp = (d: Date): boolean => {\r\n  const date = new Date(d);\r\n  const currentTime = new Date();\r\n  console.log('current:', currentTime.getHours(), '.', currentTime.getMinutes(), 'd:', date.getHours(), '.', date.getMinutes());\r\n  return currentTime.getHours() - date.getHours() < 1;\r\n};","  \r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from './store/rootReducer';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);","/* eslint-disable  @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable  @typescript-eslint/no-explicit-any */\r\n/* eslint-disable  @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const stringCheck = (text: unknown): text is string => {\r\n  return typeof text === 'string' || text instanceof String;\r\n};\r\n\r\nexport const setTagActionCheck = (object: FilterActions): object is SetTagAction => (\r\n  object.type === 'SET_TAG'\r\n);\r\n\r\nexport const stringParser = (text: unknown): string => {\r\n  if (!text || !stringCheck(text)) {\r\n      throw new Error(`Incorrect or missing string `);\r\n  }\r\n  return text;\r\n};\r\n\r\nexport const notificationTypeCheck = (object: unknown): object is NotificationType => (\r\n  object === 'error'\r\n  || object === 'info'\r\n  || object === 'success'\r\n);\r\n\r\nexport const userCheck = (object?: Credentials): object is Credentials => !!object;\r\n\r\nexport const addOrRemoveActionCheck = (object: ShoppingCartAction): object is AddOrRemoveShoppingCartAction => (\r\n  object.type === 'INCREASE_QUANTITY'\r\n  || object.type === 'DECREASE_QUANTITY'\r\n  || object.type === 'REMOVE_PRODUCT_FROM_CART'\r\n);\r\n\r\nexport const newShoppingCartCheck = (object: ShoppingCartAction): object is CreateNewShoppingCartAction => (object.type === 'CREATE_NEW_SHOPPING_CART');\r\n\r\nexport const retrieveOldShoppingCartCheck = (object: ShoppingCartAction): object is RetrieveOldShoppingCartAction => {\r\n  if (object.type === 'RETRIEVE_OLD_SHOPPING_CART') {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const clearShoppingCartCheck = (object: ShoppingCartAction): object is ClearShoppingCartAction => (object.type === 'CLEAR_SHOPPINGCART');\r\n\r\nexport const isCredentialsWithTimestamp = (o: any): o is CredentialsWithTimeStamp => {\r\n  return 'firstName' in o &&\r\n  'lastName' in o &&\r\n  'userName' in o &&\r\n  '_id' in o &&\r\n  'userType' in o &&\r\n  'token' in o &&\r\n  'timestamp' in o;\r\n};\r\n\r\nexport const safeJsonParse = <T>(guard: (o: any) => o is T) => (text: string): ParseResult<T> => {\r\n  const parsed = JSON.parse(text);\r\n  return guard(parsed) ? { parsed, hasError: false} : { hasError: true };\r\n};\r\n\r\ntype ParseResult<T> =\r\n  | { parsed: T; hasError: false; error?: undefined }\r\n  | { parsed?: undefined; hasError: true; error?: unknown };\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\ntype Login = (dispatch: DispatchType) => void;\r\n\r\nexport const logIn = (data?: Credentials): Login => {\r\n  const action: LogInAction = {\r\n    type: actionTypes.LOG_IN,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","export const INCREASE_QUANTITY = \"INCREASE_QUANTITY\";\r\nexport const DECREASE_QUANTITY = \"DECREASE_QUANTITY\";\r\nexport const REMOVE_PRODUCT_FROM_CART = \"REMOVE_PRODUCT_FROM_CART\";\r\nexport const CLEAR_SHOPPINGCART = \"CLEAR_SHOPPINGCART\";\r\nexport const CREATE_NEW_SHOPPING_CART = \"CREATE_NEW_SHOPPING_CART\";\r\nexport const RETRIEVE_OLD_SHOPPING_CART = \"RETRIEVE_OLD_SHOPPING_CART\";","import axios from 'axios';\r\n\r\nconst baseURL = 'https://verkkis.herokuapp.com/api';\r\n\r\nconst signIn = async (username: string, password: string, platformInfo: string):Promise<Credentials> => {\r\n  const request = await axios.post<Credentials>(`${baseURL}/login`, { username, password, platformInfo });\r\n  return request.data;\r\n};\r\n\r\nconst createUser = async (user: NoIdUser):Promise<User> => {\r\n  const request = await axios.post<User>(`${baseURL}/users`, user);\r\n  return request.data;\r\n};\r\n\r\nconst modifyUser = async (user: User):Promise<User> => {\r\n  const request = await axios.put<User>(`${baseURL}/users/`, user);\r\n  return request.data;\r\n};\r\n\r\nconst modifyAvatar = async (image: File, userId: string):Promise<User> => {\r\n  const fd = new FormData();\r\n  fd.append('image', image, image.name);\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  };\r\n  console.log('modify avatar service', fd);\r\n  const request = await axios.put<User>(`${baseURL}/users/${userId}/image`, fd, config);\r\n  return request.data;\r\n};\r\n\r\nconst getUsersCompletedShoppingcarts = async (userId: string):Promise<ShoppingCart[]> => {\r\n  const request = await axios.get<ShoppingCart[]>(`${baseURL}/users/${userId}`);\r\n  return request.data;\r\n};\r\n\r\nconst addRatingForProduct = async (userId: string, productId: string, value: number):Promise<Credentials | null> => {\r\n  const request = await axios.put<Credentials | null>(`${baseURL}/users/${userId}`, { productId , value });\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  signIn,\r\n  createUser,\r\n  modifyUser,\r\n  getUsersCompletedShoppingcarts,\r\n  addRatingForProduct,\r\n  modifyAvatar,\r\n};","import { makeStyles } from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    padding: 5,\r\n    borderColor: '#124eb0',\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    width: '90%',\r\n    maxWidth: 700\r\n  },\r\n  \r\n  button: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    padding: 20,\r\n    paddingRight: 75,\r\n    marginTop: 10,\r\n    left: '38%',\r\n    transform: `translate(-50%, -$50%)`,\r\n    borderWidth: 3,\r\n    borderRadius: 35,      \r\n    width: 92,\r\n    height: 20,\r\n    opacity: 0.95,\r\n    backgroundColor: '#124eb0',\r\n    fontSize: 16,\r\n    fontStyle: 'bold',\r\n    color: 'white'  \r\n  },\r\n\r\n  logInText: {\r\n    position: 'relative',\r\n    marginLeft: 20,\r\n    marginTop: 20,\r\n  }\r\n});\r\n\r\nexport default useStyles;","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: ProductState = {\r\n  products: []\r\n};\r\n\r\nconst reducer = (state: ProductState = initialState, action: GetProductsAction | AddProductAction): ProductState => {\r\n    \r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.data as Product[]\r\n      };\r\n\r\n    case actionTypes.ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.concat(action.data)\r\n      };\r\n\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(product => product !== action.data)\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: UserState = {\r\n  user: undefined\r\n};\r\n\r\nconst reducer = (state: UserState = initialState, action: LogInAction): UserState => {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.LOG_IN:\r\n      return {\r\n        ...state,\r\n        user: action.data\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: NotificationState = {\r\n  message: '',\r\n  type: 'error',\r\n  visible: false\r\n};\r\n\r\nconst reducer = (state: NotificationState = initialState, action: SetNotificationAction): NotificationState => {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.SET_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        message: action.data,\r\n        type: action.notificationType,\r\n        visible: true\r\n      };\r\n    case actionTypes.HIDE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        message: '',\r\n        type: action.notificationType,\r\n        visible: false\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from './actionTypes';\r\nimport { addOrRemoveActionCheck, newShoppingCartCheck, clearShoppingCartCheck, retrieveOldShoppingCartCheck } from '../../typeGuards';\r\n\r\nconst initialState: ShoppingCartState = {\r\n  cartId: '',\r\n  cart: []\r\n};\r\n\r\nconst increaseQuantity = (product: ShoppingCartProduct, list: ShoppingCartProduct[]): ShoppingCartProduct => {\r\n  const item: ShoppingCartProduct | undefined = list.find(p => p._id === product._id);\r\n  if (!item) {\r\n    return product;\r\n  }\r\n  product.quantity = item.quantity +1;\r\n  return product;\r\n};\r\n\r\nconst decreaseQuantity = (product: ShoppingCartProduct, list: ShoppingCartProduct[]): ShoppingCartProduct => {\r\n  const item: ShoppingCartProduct | undefined = list.find(p => p._id === product._id);\r\n  if (!item) {\r\n    return product;\r\n  }\r\n  product.quantity = item.quantity -1;\r\n  return product;\r\n};\r\n\r\nconst reducer = (state: ShoppingCartState = initialState, action: ShoppingCartAction): ShoppingCartState => {\r\n\r\n  if (addOrRemoveActionCheck(action)) {\r\n    switch (action.type) {\r\n      case actionTypes.INCREASE_QUANTITY:   \r\n        if (!state.cart.some(p => p._id === action.data._id)) {\r\n          return {\r\n            ...state,\r\n            cartId: action.cartId,\r\n            cart: state.cart.concat(action.data) };\r\n        } \r\n        const lisattava = increaseQuantity(action.data, state.cart);\r\n        return {\r\n          ...state,\r\n          cartId: action.cartId,\r\n          cart: state.cart.map(p => p._id === lisattava._id ? lisattava : p)\r\n        };\r\n  \r\n      case actionTypes.DECREASE_QUANTITY:\r\n        const uusi = decreaseQuantity(action.data, state.cart);\r\n        return {\r\n          ...state,\r\n          cartId: action.cartId,\r\n          cart: state.cart.map(p => p._id === uusi._id ? uusi : p)\r\n        };\r\n  \r\n      case actionTypes.REMOVE_PRODUCT_FROM_CART:\r\n        return {\r\n          ...state,\r\n          cartId: action.cartId,\r\n          cart: state.cart.filter(p => p._id !== action.data._id)\r\n        };\r\n    }\r\n\r\n  }\r\n  if (retrieveOldShoppingCartCheck(action)) {\r\n    return {\r\n      cartId: action.cartId,\r\n      cart: action.data\r\n    };\r\n  }\r\n\r\n  if (newShoppingCartCheck(action)) {\r\n    console.log('new shopping cart reducerissa', action);\r\n    switch (action.type) {\r\n      case actionTypes.CREATE_NEW_SHOPPING_CART:\r\n        return {\r\n          ...state,\r\n          cartId: action.cartId,\r\n          cart: state.cart\r\n        };\r\n    }\r\n    \r\n  }\r\n  if (clearShoppingCartCheck(action)) {\r\n    console.log('clear cart reducerissa', action);\r\n    return {\r\n      ...state,\r\n      cartId: '',\r\n      cart: []\r\n    };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","const initialState: ModalState = {\r\n  createUserModal: false,\r\n  logInModal: false,\r\n  addProductModal: false,\r\n  modifyUserInfoModal: false,\r\n  modifyProductModal: false,\r\n  modifyUserAvatarModal: false,\r\n};\r\n\r\nconst reducer = (state: ModalState = initialState, action: ModalAction): ModalState => {\r\n  switch (action.modal) {\r\n    case 'AddProduct':\r\n      return {\r\n        ...state, addProductModal: action.data\r\n      };\r\n    case 'CreateUser':\r\n      return {\r\n        ...state, createUserModal: action.data\r\n      };\r\n    case 'LogIn':\r\n      return {\r\n        ...state, logInModal: action.data\r\n      };\r\n    case 'ModifyUser':\r\n      return {\r\n        ...state, modifyUserInfoModal: action.data\r\n      };\r\n    case 'ModifyProduct':\r\n      return {\r\n        ...state, modifyProductModal: action.data\r\n      };\r\n    case 'ModifyUserAvatar':\r\n      return {\r\n        ...state, modifyUserAvatarModal: action.data\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from './actionTypes';\r\nimport { setTagActionCheck } from '../../typeGuards';\r\n\r\nconst initialState: FilterState = {\r\n  productFilter: '',\r\n  tagFilter: undefined,\r\n};\r\n\r\nconst reducer = (state: FilterState = initialState, action: FilterActions): FilterState => {\r\n  if (setTagActionCheck(action)) {\r\n    return {\r\n      ...state,\r\n      tagFilter: action.data\r\n    };\r\n  }\r\n\r\n  switch(action.type) {\r\n    case actionTypes.SET_FILTER:\r\n      return {\r\n        ...state,\r\n        productFilter: action.data\r\n      };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from './actionTypes';\r\n\r\nconst initialState: ActiveProductState = {\r\n  product: undefined\r\n};\r\n\r\nconst reducer = (state: ActiveProductState = initialState, action: SetActiveProductAction): ActiveProductState => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_ACTIVE_PRODUCT:\r\n      return {\r\n        product: action.data\r\n      };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\";\r\nimport { useDispatch, useSelector, TypedUseSelectorHook } from \"react-redux\";\r\n\r\nimport productReducer from './Product/reducer';\r\nimport userReducer from './User/reducer';\r\nimport notificationReducer from './Notification/reducer';\r\nimport shoppingCartReducer from './ShoppingCart/reducer';\r\nimport modalReducer from './modal/reducer';\r\nimport filterReducer from './Filter/reducer';\r\nimport activeProductReducer from './ActiveProduct/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  productReducer,\r\n  userReducer,\r\n  notificationReducer,\r\n  shoppingCartReducer,\r\n  modalReducer,\r\n  filterReducer,\r\n  activeProductReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = (): AppDispatch  => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default store;","import axios, { AxiosResponse } from 'axios';\r\n\r\nconst baseURL = 'https://verkkis.herokuapp.com/api/products';\r\n\r\nconst getAll = ():Promise<Product[]> => {\r\n  const request = axios.get<Product[]>(`${baseURL}`);\r\n  return request.then((response: AxiosResponse<Product[]>) => response.data);\r\n};\r\n\r\nconst addProduct = async (product: NoIdProduct, image: File | undefined):Promise<Product> => {\r\n\r\n  console.log('addproduct');\r\n  const request = await axios.post<Product>(`${baseURL}`, product);\r\n\r\n  if (image && request.data !== null) {\r\n    const req = modifyProductImage(request.data._id, image);\r\n    console.log('Image request', req);\r\n    return req;\r\n  }\r\n  return request.data;\r\n};\r\n\r\nconst modifyProductImage = async (productId: string, image: File) => {\r\n  const fd = new FormData();\r\n  fd.append('image', image, image.name);\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  };\r\n\r\n  const request = await axios.put<Product>(`${baseURL}/${productId}`, fd, config);\r\n  console.log(\"modifyProductImage\", request.data);\r\n  return request.data;\r\n};\r\n\r\nconst modifyProduct = async (product: Product, image: File | undefined):Promise<Product> => {\r\n\r\n  console.log('modify product', product);\r\n  const request = await axios.put<Product>(`${baseURL}`, product);\r\n  if (request.data !== null && image) {\r\n    const req = modifyProductImage(product._id, image);\r\n    console.log('req', req);\r\n    return req;\r\n  }\r\n  console.log('data',request.data);\r\n  return request.data;\r\n};\r\n\r\nconst deleteProduct = async (product: Product): Promise<Product> => {\r\n  const request = await axios.delete<Product>(`${baseURL}/${product._id}`);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  addProduct,\r\n  deleteProduct,\r\n  modifyProduct,\r\n};","import * as actionTypes from \"./actionTypes\";\r\nimport productService from '../../services/productService';\r\n\r\ntype ProductDispatch = (dispatch: DispatchType) => void;\r\n\r\nexport const addProduct = (data: Product): ProductDispatch => {\r\n  const action: AddProductAction = {\r\n    type: actionTypes.ADD_PRODUCT,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const removeProduct = (data: Product): ProductDispatch => {\r\n  const action: AddProductAction = {\r\n    type: actionTypes.REMOVE_PRODUCT,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const initializeProducts = () => {\r\n  \r\n  return async (dispatch: (arg0: { type: string; data: Product[]; }) => void): Promise<void> => {\r\n    const data = await productService.getAll();\r\n    const action: GetProductsAction = {\r\n      type: actionTypes.GET_PRODUCTS,\r\n      data,\r\n    };\r\n    \r\n    dispatch(action);\r\n  };\r\n};","export const arrayBufferToBase64 = (buffer: Buffer): string => {\r\n  let binary = '';\r\n  const bytes = [].slice.call(new Uint8Array(buffer));\r\n  bytes.forEach((b) => binary += String.fromCharCode(b));\r\n  return 'data:image/jpeg;base64,' + window.btoa(binary);\r\n};","export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";","import * as actionTypes from './actionTypes';\r\n\r\ntype SetActiveProduct = (dispatch: DispatchType) => void;\r\n\r\nexport const setActiveProduct = (data: Product): SetActiveProduct => {\r\n  const action: SetActiveProductAction = {\r\n    type: actionTypes.SET_ACTIVE_PRODUCT,\r\n    data\r\n  };\r\n\r\n  console.log('setactiveproduct', action.data);\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","export const SET_NOTIFICATION = \"SET_NOTIFICATION\";\r\nexport const HIDE_NOTIFICATION = \"HIDE_NOTIFICATION\";","export const SET_FILTER = \"SET_FILTER\";\r\nexport const SET_TAG = \"SET_TAG\";"],"sourceRoot":""}