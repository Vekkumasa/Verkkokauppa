{"version":3,"sources":["components/AccountMenu.tsx","store/User/actionTypes.ts","store/User/actionCreators.ts","store/Product/actionTypes.ts","store/Product/reducer.ts","store/User/reducer.ts","store/Notification/actionTypes.ts","store/Notification/reducer.ts","store/ShoppingCart/actionTypes.ts","typeGuards.ts","store/ShoppingCart/reducer.ts","store/modal/reducer.ts","store/Filter/actionTypes.ts","store/Filter/reducer.ts","store/rootReducer.ts","store/Notification/actionCreators.ts","store/Filter/actionCreators.ts","services/userService.ts","store/modal/actionCreators.ts","store/ShoppingCart/actionCreators.ts","services/shoppingCartService.ts","forms/User/LogInForm.tsx","utils/platformParser.ts","modals/LogInModal.tsx","services/productService.ts","forms/product/AddProductForm.tsx","store/Product/actionCreators.ts","modals/AddProductModal.tsx","forms/User/CreateUserForm.tsx","modals/CreateUserModal.tsx","components/Navibar.tsx","components/Product.tsx","components/ProductListPage.tsx","forms/User/ModifyUserForm.tsx","modals/ModifyUserInfoModal.tsx","utils/DateParser.ts","components/Account.tsx","components/PastOrders.tsx","forms/shoppingCart/ShoppingCartForm.tsx","components/ShoppingCartCard.tsx","components/ShoppingCart.tsx","UI/Notification.tsx","App.tsx","utils/ValidTimeStamp.ts","index.tsx"],"names":["StyledMenu","withStyles","paper","border","props","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","theme","root","backgroundColor","palette","primary","main","color","common","white","MenuItem","AccountMenu","React","useState","anchorEl","setAnchorEl","IconButton","style","onClick","event","currentTarget","AccountCircle","fontSize","marginTop","id","keepMounted","open","Boolean","onClose","to","textDecoration","ListItemIcon","Person","ListItemText","ShoppingBasket","LOG_IN","logIn","data","action","type","actionTypes","dispatch","ADD_PRODUCT","GET_PRODUCTS","REMOVE_PRODUCT","initialState","products","reducer","state","concat","filter","product","user","undefined","SET_NOTIFICATION","HIDE_NOTIFICATION","message","visible","notificationType","INCREASE_QUANTITY","DECREASE_QUANTITY","REMOVE_PRODUCT_FROM_CART","CREATE_NEW_SHOPPING_CART","addOrRemoveActionCheck","object","newShoppingCartCheck","retrieveOldShoppingCartCheck","clearShoppingCartCheck","isCredentialsWithTimestamp","o","cartId","cart","increaseQuantity","list","item","find","p","_id","quantity","decreaseQuantity","some","lisattava","map","uusi","console","log","createUserModal","logInModal","addProductModal","modifyUserInfoModal","modal","SET_FILTER","productFilter","rootReducer","combineReducers","productReducer","userReducer","notificationReducer","shoppingCartReducer","modalReducer","filterReducer","store","configureStore","useAppDispatch","useDispatch","useAppSelector","useSelector","setNotification","setFilter","baseURL","signIn","username","password","platformInfo","a","axios","post","request","createUser","modifyUser","put","getUsersCompletedShoppingcarts","userId","get","handleModal","createNewShoppingCart","retrieveOldShoppingCart","addNewProductToShoppingCart","removeProduct","clearShoppingCart","getUsersShoppingCart","addProductToShoppingCart","productToAdd","removeProductFromShoppingCart","productToRemove","increaseProductQuantity","decreaseProductQuantity","setShoppingCartActivity","setShoppingCartCompleted","removeShoppingCart","delete","useStyles","makeStyles","field","padding","left","borderColor","position","marginBottom","width","button","display","alignItems","paddingRight","transform","borderWidth","borderRadius","height","opacity","fontStyle","SignupSchema","Yup","shape","userName","min","max","required","LogInForm","cartState","classes","name","family","version","string","platformParser","platform","os","initialValues","validationSchema","onSubmit","values","userService","then","res","token","credentials","firstName","lastName","email","userType","avatar","recentActivity","storeInfo","timestamp","Date","window","localStorage","setItem","JSON","stringify","shoppingCartService","swal","title","text","icon","buttons","findPrevious","response","removedResponse","usePreviousShoppingCart","errors","touched","Grid","container","spacing","xs","className","placeholder","getModalStyle","top","justifyContent","background","boxShadow","shadows","header","textAlign","Header","LogInModal","modalStyle","modalOpen","Modal","aria-labelledby","aria-describedby","getAll","addProduct","deleteProduct","maxWidth","description","price","stock","image","AddProductForm","productService","addedProduct","AddProductModal","CreateUserForm","newUser","catch","e","CreateUserModal","menuButton","marginRight","marginLeft","login","margin","flexDirection","addProductIcon","whiteIcon","searchIcon","Navibar","searchText","setSearchText","loggedIn","AppBar","Toolbar","edge","aria-label","Menu","Typography","variant","TextField","onChange","preventDefault","target","value","size","Search","Tooltip","Backspace","AddCircleOutline","Button","removeItem","centerText","media","overflow","whiteSpace","textOverflow","Product","shoppingCart","shoppingCartProduct","newProduct","updateShoppingCartProductQuantity","Card","CardActionArea","CardMedia","CardContent","gutterBottom","component","CardActions","isProductAlreadyInCart","handleShoppingCart","paddingLeft","ProductListPage","length","filteredProducts","toLowerCase","includes","ModifyUserForm","loggedUser","modifiedUser","ModifyUserInfoModal","parseDate","date","d","day","getDate","toString","month","getMonth","year","getFullYear","hour","getHours","getMinutes","nameAndIcon","flexGrow","column","defaultProps","bgcolor","m","Account","dates","counter","i","push","Box","borderRight","Avatar","src","borderBottom","Edit","index","grey","blue","mainRow","row","body","Row","order","setOpen","TableRow","TableCell","KeyboardArrowUp","KeyboardArrowDown","scope","completionDate","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","reduce","prev","cur","Table","TableHead","align","TableBody","Math","round","PastOrders","orders","setOrders","useEffect","TableContainer","Paper","logInText","ShippingSchema","address","ShoppingCartForm","shippingInfo","disabled","card","maxHeight","details","content","flex","info","contentAndImage","deleteButton","red","iconButtons","ShoppingCartCard","removeProductFromCart","decreaseQuantityFromCart","Remove","increaseQuantityFromCart","Add","box","shoppingCartAndFormBox","deleteIcon","form","empty","ShoppingCart","Container","Alert","severity","Notification","tts","setTimeout","hideNotification","App","notification","guard","getItem","parsedUser","parsed","parse","hasError","currentTime","validTimeStamp","path","render","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ef0b798f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { IconButton, MenuItem, ListItemIcon, ListItemText } from '@material-ui/core/';\r\nimport Menu, { MenuProps } from '@material-ui/core/Menu';\r\nimport { Person, ShoppingBasket, AccountCircle } from '@material-ui/icons';\r\n\r\nconst StyledMenu = withStyles({\r\n  paper: {\r\n    border: '1px solid #d3d4d5',\r\n  },\r\n})((props: MenuProps) => (\r\n  <Menu\r\n    elevation={0}\r\n    getContentAnchorEl={null}\r\n    anchorOrigin={{\r\n      vertical: 'bottom',\r\n      horizontal: 'center',\r\n    }}\r\n    transformOrigin={{\r\n      vertical: 'top',\r\n      horizontal: 'center',\r\n    }}\r\n    {...props}\r\n  />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n  root: {\r\n    '&:focus': {\r\n      backgroundColor: theme.palette.primary.main,\r\n      '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n        color: theme.palette.common.white,\r\n      },\r\n    },\r\n  },\r\n}))(MenuItem);\r\n\r\nconst AccountMenu = (): JSX.Element => {\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <IconButton style={{ color: 'white'}} onClick={handleClick}>\r\n        <AccountCircle style={{ fontSize: 30, marginTop: 5}}/>\r\n      </IconButton>\r\n      <StyledMenu\r\n        id=\"customized-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <Link to=\"/account\" style={{ textDecoration: 'none' }}>\r\n          <StyledMenuItem>\r\n              <ListItemIcon>\r\n                <Person fontSize=\"small\" />\r\n              </ListItemIcon>\r\n            <ListItemText primary=\"Personal info\" />\r\n          </StyledMenuItem>\r\n        </Link>\r\n        <Link to=\"/pastOrders\" style={{ textDecoration: 'none'}}>\r\n          <StyledMenuItem>\r\n            <ListItemIcon>\r\n              <ShoppingBasket fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText primary=\"Past orders\" />\r\n          </StyledMenuItem>\r\n        </Link>\r\n      </StyledMenu>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccountMenu;","export const LOG_IN = \"LOG_IN\";\r\nexport const CREATE_USER = \"CREATE_USER\";\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\ntype Login = (dispatch: DispatchType) => void;\r\n\r\nexport const logIn = (data?: Credentials): Login => {\r\n  const action: LogInAction = {\r\n    type: actionTypes.LOG_IN,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: ProductState = {\r\n  products: []\r\n};\r\n\r\nconst reducer = (state: ProductState = initialState, action: GetProductsAction | AddProductAction): ProductState => {\r\n    \r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.data as Product[]\r\n      };\r\n\r\n    case actionTypes.ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.concat(action.data)\r\n      };\r\n\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(product => product !== action.data)\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: UserState = {\r\n  user: undefined\r\n};\r\n\r\nconst reducer = (state: UserState = initialState, action: LogInAction): UserState => {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.LOG_IN:\r\n      return {\r\n        ...state,\r\n        user: action.data\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;\r\n","export const SET_NOTIFICATION = \"SET_NOTIFICATION\";\r\nexport const HIDE_NOTIFICATION = \"HIDE_NOTIFICATION\";","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: NotificationState = {\r\n  message: '',\r\n  type: 'error',\r\n  visible: false\r\n};\r\n\r\nconst reducer = (state: NotificationState = initialState, action: SetNotificationAction): NotificationState => {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.SET_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        message: action.data,\r\n        type: action.notificationType,\r\n        visible: true\r\n      };\r\n    case actionTypes.HIDE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        message: '',\r\n        type: action.notificationType,\r\n        visible: false\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","export const INCREASE_QUANTITY = \"INCREASE_QUANTITY\";\r\nexport const DECREASE_QUANTITY = \"DECREASE_QUANTITY\";\r\nexport const REMOVE_PRODUCT_FROM_CART = \"REMOVE_PRODUCT_FROM_CART\";\r\nexport const CLEAR_SHOPPINGCART = \"CLEAR_SHOPPINGCART\";\r\nexport const CREATE_NEW_SHOPPING_CART = \"CREATE_NEW_SHOPPING_CART\";\r\nexport const RETRIEVE_OLD_SHOPPING_CART = \"RETRIEVE_OLD_SHOPPING_CART\";","/* eslint-disable  @typescript-eslint/no-unsafe-assignment */\r\n/* eslint-disable  @typescript-eslint/no-explicit-any */\r\n/* eslint-disable  @typescript-eslint/explicit-module-boundary-types */\r\n\r\nexport const stringCheck = (text: unknown): text is string => {\r\n  return typeof text === 'string' || text instanceof String;\r\n};\r\n\r\nexport const stringParser = (text: unknown): string => {\r\n  if (!text || !stringCheck(text)) {\r\n      throw new Error(`Incorrect or missing string `);\r\n  }\r\n  return text;\r\n};\r\n\r\nexport const notificationTypeCheck = (object: unknown): object is NotificationType => (\r\n  object === 'error'\r\n  || object === 'info'\r\n  || object === 'success'\r\n);\r\n\r\nexport const userCheck = (object?: Credentials): object is Credentials => !!object;\r\n\r\nexport const addOrRemoveActionCheck = (object: ShoppingCartAction): object is AddOrRemoveShoppingCartAction => (\r\n  object.type === 'INCREASE_QUANTITY'\r\n  || object.type === 'DECREASE_QUANTITY'\r\n  || object.type === 'REMOVE_PRODUCT_FROM_CART'\r\n);\r\n\r\nexport const newShoppingCartCheck = (object: ShoppingCartAction): object is CreateNewShoppingCartAction => (object.type === 'CREATE_NEW_SHOPPING_CART');\r\n\r\nexport const retrieveOldShoppingCartCheck = (object: ShoppingCartAction): object is RetrieveOldShoppingCartAction => {\r\n  if (object.type === 'RETRIEVE_OLD_SHOPPING_CART') {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const clearShoppingCartCheck = (object: ShoppingCartAction): object is ClearShoppingCartAction => (object.type === 'CLEAR_SHOPPINGCART');\r\n\r\nexport const isCredentialsWithTimestamp = (o: any): o is CredentialsWithTimeStamp => {\r\n  return 'firstName' in o &&\r\n  'lastName' in o &&\r\n  'userName' in o &&\r\n  'id' in o &&\r\n  'userType' in o &&\r\n  'token' in o &&\r\n  'timestamp' in o;\r\n};\r\n\r\nexport const safeJsonParse = <T>(guard: (o: any) => o is T) => (text: string): ParseResult<T> => {\r\n  const parsed = JSON.parse(text);\r\n  return guard(parsed) ? { parsed, hasError: false} : { hasError: true };\r\n};\r\n\r\ntype ParseResult<T> =\r\n  | { parsed: T; hasError: false; error?: undefined }\r\n  | { parsed?: undefined; hasError: true; error?: unknown };\r\n","import * as actionTypes from './actionTypes';\r\nimport { addOrRemoveActionCheck, newShoppingCartCheck, clearShoppingCartCheck, retrieveOldShoppingCartCheck } from '../../typeGuards';\r\n\r\nconst initialState: ShoppingCartState = {\r\n  cartId: '',\r\n  cart: []\r\n};\r\n\r\nconst increaseQuantity = (product: ShoppingCartProduct, list: ShoppingCartProduct[]): ShoppingCartProduct => {\r\n  const item: ShoppingCartProduct | undefined = list.find(p => p._id === product._id);\r\n  if (!item) {\r\n    return product;\r\n  }\r\n  product.quantity = item.quantity +1;\r\n  return product;\r\n};\r\n\r\nconst decreaseQuantity = (product: ShoppingCartProduct, list: ShoppingCartProduct[]): ShoppingCartProduct => {\r\n  const item: ShoppingCartProduct | undefined = list.find(p => p._id === product._id);\r\n  if (!item) {\r\n    return product;\r\n  }\r\n  product.quantity = item.quantity -1;\r\n  return product;\r\n};\r\n\r\nconst reducer = (state: ShoppingCartState = initialState, action: ShoppingCartAction): ShoppingCartState => {\r\n\r\n  if (addOrRemoveActionCheck(action)) {\r\n    switch (action.type) {\r\n      case actionTypes.INCREASE_QUANTITY:   \r\n        if (!state.cart.some(p => p._id === action.data._id)) {\r\n          return {\r\n            ...state,\r\n            cartId: action.cartId,\r\n            cart: state.cart.concat(action.data) };\r\n        } \r\n        const lisattava = increaseQuantity(action.data, state.cart);\r\n        return {\r\n          ...state,\r\n          cartId: action.cartId,\r\n          cart: state.cart.map(p => p._id === lisattava._id ? lisattava : p)\r\n        };\r\n  \r\n      case actionTypes.DECREASE_QUANTITY:\r\n        const uusi = decreaseQuantity(action.data, state.cart);\r\n        return {\r\n          ...state,\r\n          cartId: action.cartId,\r\n          cart: state.cart.map(p => p._id === uusi._id ? uusi : p)\r\n        };\r\n  \r\n      case actionTypes.REMOVE_PRODUCT_FROM_CART:\r\n        return {\r\n          ...state,\r\n          cartId: action.cartId,\r\n          cart: state.cart.filter(p => p._id !== action.data._id)\r\n        };\r\n    }\r\n\r\n  }\r\n  if (retrieveOldShoppingCartCheck(action)) {\r\n    return {\r\n      cartId: action.cartId,\r\n      cart: action.data\r\n    };\r\n  }\r\n\r\n  if (newShoppingCartCheck(action)) {\r\n    console.log('new shopping cart reducerissa', action);\r\n    switch (action.type) {\r\n      case actionTypes.CREATE_NEW_SHOPPING_CART:\r\n        return {\r\n          ...state,\r\n          cartId: action.cartId,\r\n          cart: state.cart\r\n        };\r\n    }\r\n    \r\n  }\r\n  if (clearShoppingCartCheck(action)) {\r\n    console.log('clear cart reducerissa', action);\r\n    return {\r\n      ...state,\r\n      cartId: '',\r\n      cart: []\r\n    };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","const initialState: ModalState = {\r\n  createUserModal: false,\r\n  logInModal: false,\r\n  addProductModal: false,\r\n  modifyUserInfoModal: false,\r\n};\r\n\r\nconst reducer = (state: ModalState = initialState, action: ModalAction): ModalState => {\r\n  switch (action.modal) {\r\n    case 'AddProduct':\r\n      return {\r\n        ...state, addProductModal: action.data\r\n      };\r\n    case 'CreateUser':\r\n      return {\r\n        ...state, createUserModal: action.data\r\n      };\r\n    case 'LogIn':\r\n      return {\r\n        ...state, logInModal: action.data\r\n      };\r\n    case 'ModifyUser':\r\n      return {\r\n        ...state, modifyUserInfoModal: action.data\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n\r\n};\r\n\r\nexport default reducer;","export const SET_FILTER = \"SET_FILTER\";","import * as actionTypes from './actionTypes';\r\n\r\nconst initialState: FilterState = {\r\n  productFilter: ''\r\n};\r\n\r\nconst reducer = (state: FilterState = initialState, action: SetFilterAction): FilterState => {\r\n  switch(action.type) {\r\n    case actionTypes.SET_FILTER:\r\n      return {\r\n        productFilter: action.data\r\n      };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\";\r\nimport { useDispatch, useSelector, TypedUseSelectorHook } from \"react-redux\";\r\n\r\nimport productReducer from './Product/reducer';\r\nimport userReducer from './User/reducer';\r\nimport notificationReducer from './Notification/reducer';\r\nimport shoppingCartReducer from './ShoppingCart/reducer';\r\nimport modalReducer from './modal/reducer';\r\nimport filterReducer from './Filter/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  productReducer,\r\n  userReducer,\r\n  notificationReducer,\r\n  shoppingCartReducer,\r\n  modalReducer,\r\n  filterReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = (): AppDispatch  => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default store;","import * as actionTypes from \"./actionTypes\";\r\nimport { notificationTypeCheck } from '../../typeGuards';\r\n\r\ntype SetNotification = (dispatch: DispatchType) => void;\r\n\r\nexport const setNotification = (data: string, notificationType: NotificationType): SetNotification => {\r\n  if (notificationTypeCheck(notificationType)) {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.SET_NOTIFICATION,\r\n      notificationType: notificationType,\r\n      data,\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n  }\r\n  else {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.SET_NOTIFICATION,\r\n      notificationType: 'error',\r\n      data,\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n  }\r\n};\r\n\r\nexport const hideNotification = (): SetNotification => {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.HIDE_NOTIFICATION,\r\n      notificationType: 'error',\r\n      data: '',\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\n\r\ntype SetFilter = (dispatch: DispatchType) => void;\r\n\r\nexport const setFilter = (data: string): SetFilter => {\r\n  const action: SetFilterAction = {\r\n    type: actionTypes.SET_FILTER,\r\n    data\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","import axios from 'axios';\r\n\r\nconst baseURL = 'https://verkkis.herokuapp.com/api';\r\n\r\nconst signIn = async (username: string, password: string, platformInfo: string):Promise<Credentials> => {\r\n  const request = await axios.post<Credentials>(`${baseURL}/login`, { username, password, platformInfo });\r\n  return request.data;\r\n};\r\n\r\nconst createUser = async (user: NoIdUser):Promise<User> => {\r\n  const request = await axios.post<User>(`${baseURL}/users`, user);\r\n  return request.data;\r\n};\r\n\r\nconst modifyUser = async (user: CreateUserInput):Promise<User> => {\r\n  const request = await axios.put<User>(`${baseURL}/users/`, user);\r\n  return request.data;\r\n};\r\n\r\nconst getUsersCompletedShoppingcarts = async (userId: string):Promise<ShoppingCart[]> => {\r\n  const request = await axios.get<ShoppingCart[]>(`${baseURL}/users/${userId}`);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  signIn,\r\n  createUser,\r\n  modifyUser,\r\n  getUsersCompletedShoppingcarts,\r\n};","type OpenOrCloseModal = (dispatch: DispatchType) => void;\r\n\r\nexport const handleModal = (data: boolean, modal: Modal): OpenOrCloseModal => {\r\n  const action: ModalAction = {\r\n    type: '',\r\n    modal,\r\n    data\r\n  };\r\n  \r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\ntype Cart = (dispatch: DispatchType) => void;\r\n\r\nexport const createNewShoppingCart = (cartId: string): Cart => {\r\n  const action: CreateNewShoppingCartAction = {\r\n    type: actionTypes.CREATE_NEW_SHOPPING_CART,\r\n    cartId\r\n  };\r\n  \r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const retrieveOldShoppingCart = (cartId: string, products: ShoppingCartProduct[]): Cart => {\r\n  const action: RetrieveOldShoppingCartAction = {\r\n    type: actionTypes.RETRIEVE_OLD_SHOPPING_CART,\r\n    cartId,\r\n    data: products\r\n  };\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const addNewProductToShoppingCart = (product: Product, cartId: string): Cart => {\r\n  const data: ShoppingCartProduct = { ...product, quantity: 1};\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.INCREASE_QUANTITY,\r\n    cartId,\r\n    data\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const increaseQuantity = (product: ShoppingCartProduct, cartId: string): Cart => {\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.INCREASE_QUANTITY,\r\n    cartId,\r\n    data: {...product, quantity: product.quantity + 1}\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const decreaseQuantity = (product: ShoppingCartProduct, cartId: string): Cart => {\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.DECREASE_QUANTITY,\r\n    cartId,\r\n    data: {...product, quantity: product.quantity - 1}\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const removeProduct = (data: ShoppingCartProduct, cartId: string): Cart => {\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.REMOVE_PRODUCT_FROM_CART,\r\n    cartId,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const clearShoppingCart = (): Cart => {\r\n  const action: ClearShoppingCartAction = {\r\n    type: actionTypes.CLEAR_SHOPPINGCART,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","import axios from 'axios';\r\n\r\n// TODO: FIX RETURN TYPES\r\n\r\nconst baseURL = 'https://verkkis.herokuapp.com/api/shoppingCart';\r\n\r\nconst createNewShoppingCart = async (products: ShoppingCart): Promise<ShoppingCart> => {\r\n  const request = await axios.post<ShoppingCart>(baseURL, products);\r\n  return request.data;\r\n};\r\n\r\nconst getUsersShoppingCart = async (userId: string):Promise<ShoppingCart | null> => {\r\n  const request = await axios.get<ShoppingCart | null>(`${baseURL}/${userId}`);\r\n  return request.data;\r\n};\r\n\r\nconst addProductToShoppingCart = async (productToAdd: CartProduct):Promise<ShoppingCartProduct> => {\r\n  const request = await axios.post<ShoppingCartProduct>(`${baseURL}/${productToAdd.cartId}/addProduct`, productToAdd);\r\n  return request.data;\r\n};\r\n  \r\nconst removeProductFromShoppingCart = async (productToRemove: CartProduct): Promise<ShoppingCartProduct> => {\r\n  const request = await axios.put<ShoppingCartProduct>(`${baseURL}/${productToRemove.cartId}/remove`, productToRemove);\r\n  return request.data;\r\n};\r\n\r\nconst increaseProductQuantity = async (product: CartProduct):Promise<ShoppingCartProduct> => {\r\n  const request = await axios.put<ShoppingCartProduct>(`${baseURL}/${product.cartId}/increase`, product);\r\n  return request.data;\r\n};\r\n\r\nconst decreaseProductQuantity = async (product: CartProduct):Promise<ShoppingCartProduct> => {\r\n  const request = await axios.put<ShoppingCartProduct>(`${baseURL}/${product.cartId}/decrease`, product);\r\n  return request.data;\r\n};\r\n\r\nconst setShoppingCartActivity = async (cartId: string, data: boolean):Promise<ShoppingCart> => {\r\n  const request = await axios.put<ShoppingCart>(`${baseURL}/${cartId}/activity`, { data: data });\r\n  return request.data;\r\n};\r\n\r\nconst setShoppingCartCompleted = async (cartId: string):Promise<ShoppingCart | null> => {\r\n  const request = await axios.put<ShoppingCart | null>(`${baseURL}/${cartId}/completed`);\r\n  return request.data;\r\n};\r\n\r\nconst removeShoppingCart = async (userId: string):Promise<ShoppingCart> => {\r\n  const request = await axios.delete<ShoppingCart>(`${baseURL}/${userId}`);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  createNewShoppingCart,\r\n  addProductToShoppingCart,\r\n  increaseProductQuantity,\r\n  decreaseProductQuantity,\r\n  removeProductFromShoppingCart,\r\n  getUsersShoppingCart,\r\n  removeShoppingCart,\r\n  setShoppingCartActivity,\r\n  setShoppingCartCompleted,\r\n};","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\nimport swal from 'sweetalert';\r\nimport platform from 'platform';\r\n\r\nimport { platformParser } from '../../utils/platformParser';\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport userService from '../../services/userService';\r\nimport { logIn } from '../../store/User/actionCreators';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport { handleModal } from '../../store/modal/actionCreators';\r\nimport { createNewShoppingCart } from '../../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../../services/shoppingCartService';\r\nimport { retrieveOldShoppingCart } from '../../store/ShoppingCart/actionCreators'; \r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    padding: 5,\r\n    left: 10,\r\n    borderColor: '#124eb0',\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    width: '90%',\r\n  },\r\n\r\n  button: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    padding: 20,\r\n    paddingRight: 5,\r\n    left: '38%',\r\n    transform: `translate(-50%, -$50%)`,\r\n    borderWidth: 3,\r\n    borderRadius: 35,      \r\n    width: 92,\r\n    height: 20,\r\n    opacity: 0.95,\r\n    backgroundColor: '#124eb0',\r\n    fontSize: 16,\r\n    fontStyle: 'bold',\r\n    color: 'white'  \r\n  },\r\n});\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  userName: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n\r\n  password: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n});\r\n\r\nconst LogInForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const cartState: ShoppingCartState = useAppSelector(state => state.shoppingCartReducer);\r\n  const classes = useStyles();\r\n  \r\n  const platformInfo = platformParser(platform.name, platform.os?.family, platform.os?.version); \r\n\r\n  const usePreviousShoppingCart = (res: ShoppingCart) => { \r\n    void swal({\r\n      title: 'Use unfinished shopping cart?',\r\n      text: 'Previous unfinished shopping cart found, do you want to use that one or create new one? Old will be removed permanently if new is created',\r\n      icon: 'info',\r\n      buttons: ['Create new!', 'Use previous!'],\r\n    })\r\n    .then((findPrevious) => {\r\n      if (findPrevious) {\r\n        dispatch(retrieveOldShoppingCart(res.id, res.products));\r\n        void shoppingCartService.setShoppingCartActivity(res.id, true);\r\n      } else {\r\n        const promise = shoppingCartService.createNewShoppingCart({ products: cartState.cart, user: res.user, id: '' });\r\n        void promise.then((response) => {            \r\n          const removed = shoppingCartService.removeShoppingCart(res.user);\r\n          void removed.then((removedResponse) => {\r\n            console.log('loginform', removedResponse);\r\n          });\r\n          console.log('LOG IN response', response);\r\n          dispatch(createNewShoppingCart(response.id));\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const user = userService.signIn(values.userName, values.password, platformInfo);\r\n          void user.then((res) => {\r\n            if (!res.token) {\r\n              dispatch(setNotification(\"Invalid username / password\", 'error'));\r\n            } else {\r\n              const credentials: Credentials = {\r\n                id: res.id,\r\n                firstName: res.firstName,\r\n                lastName: res.lastName,\r\n                userName: res.userName,\r\n                email: res.email,\r\n                userType: res.userType,\r\n                avatar: res.avatar,\r\n                token: res.token,\r\n                recentActivity: res.recentActivity,\r\n                platformInfo: res.platformInfo\r\n              };\r\n              const storeInfo: CredentialsWithTimeStamp = { ...credentials, timestamp: new Date };\r\n              window.localStorage.setItem(\r\n                'loggedUser', JSON.stringify(storeInfo)\r\n              );\r\n              dispatch(logIn(credentials));\r\n              dispatch(handleModal(false, 'LogIn'));\r\n              dispatch(setNotification(\"Logged in as: \" + credentials.userName, 'success'));\r\n              \r\n              const usersShoppingCart = shoppingCartService.getUsersShoppingCart(credentials.id);\r\n              void usersShoppingCart.then((res) => {\r\n                if (res) {\r\n                  console.log('login form', res);\r\n                  usePreviousShoppingCart(res);      \r\n                } else {\r\n                  console.log('luodaan uusi karry');\r\n                  const promise = shoppingCartService.createNewShoppingCart({ products: cartState.cart, user: credentials.id, id: '' });\r\n                  void promise.then((res) => {\r\n                    console.log('login form new shopping cart', res);\r\n                    dispatch(createNewShoppingCart(res.id));\r\n                  });\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Username: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.userName && touched.userName) && (\r\n                    <div>{errors.userName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.password && touched.password) && (\r\n                    <div>{errors.password}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>      \r\n    </div>\r\n );\r\n};\r\n\r\n export default LogInForm;\r\n","export const platformParser = (name: string | undefined, family: string | undefined, version: string | undefined): string => {\r\n  let string = '';\r\n  if (name) {\r\n    string += name + ' ';\r\n  } else {\r\n    string += 'unknown name ';\r\n  }\r\n  if (family) {\r\n    string += family + ' ';\r\n  } else {\r\n    string += 'unknown os ';\r\n  }\r\n  if (version) {\r\n    string += version;\r\n  } else {\r\n    string += 'unknown version ';\r\n  }\r\n\r\n  return string;\r\n};","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport LogInForm from '../forms/User/LogInForm';\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n  paper: {\r\n      position: 'absolute',\r\n      width: 450,\r\n      height: 170,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: '0 30px',\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <h2 className={classes.header}> Log In</h2>\r\n  );\r\n};\r\n\r\n\r\nconst LogInModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer.logInModal);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen, 'LogIn'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <LogInForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LogInModal;","import axios, { AxiosResponse } from 'axios';\r\n\r\nconst getAll = ():Promise<Product[]> => {\r\n  const request = axios.get<Product[]>('https://verkkis.herokuapp.com/api/products');\r\n  return request.then((response: AxiosResponse<Product[]>) => response.data);\r\n};\r\n\r\nconst addProduct = async (product: NoIdProduct):Promise<Product> => {\r\n  const request = await axios.post<Product>('https://verkkis.herokuapp.com/api/products', product);\r\n  return request.data;\r\n};\r\n\r\nconst deleteProduct = async (product: Product): Promise<Product> => {\r\n  const request = await axios.delete<Product>(`https://verkkis.herokuapp.com/api/products/${product._id}`);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  addProduct,\r\n  deleteProduct\r\n};","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport { AppDispatch, useAppDispatch } from '../../store/rootReducer';\r\nimport productService from '../../services/productService';\r\nimport { addProduct } from '../../store/Product/actionCreators';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    padding: 5,\r\n    borderColor: '#124eb0',\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    width: '90%',\r\n    maxWidth: 700\r\n  },\r\n  \r\n  button: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    padding: 20,\r\n    paddingRight: 75,\r\n    marginTop: 10,\r\n    left: '38%',\r\n    transform: `translate(-50%, -$50%)`,\r\n    borderWidth: 3,\r\n    borderRadius: 35,      \r\n    width: 92,\r\n    height: 20,\r\n    opacity: 0.95,\r\n    backgroundColor: '#124eb0',\r\n    fontSize: 16,\r\n    fontStyle: 'bold',\r\n    color: 'white'  \r\n  },\r\n});\r\n\r\n const SignupSchema = Yup.object().shape({\r\n  name: Yup\r\n    .string()\r\n    .required(\"Required\"),\r\n  description: Yup\r\n    .string(),\r\n  price: Yup\r\n    .number()\r\n    .required(\"Required\"),\r\n  stock: Yup\r\n    .number(),\r\n  image: Yup\r\n    .string()\r\n });\r\n \r\n const AddProductForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            description: '',\r\n            price: 0,\r\n            stock: 0,\r\n            image: '',\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            const { name, description, price, stock, image } = values;\r\n            const product: NoIdProduct = { name, description, price, stock, image};\r\n            const promise = productService.addProduct(product);\r\n            void promise.then((res) => {\r\n              const addedProduct: Product = {\r\n                name: res.name,\r\n                description: res.description,\r\n                price: res.price,\r\n                stock: res.stock,\r\n                image: res.image,\r\n                _id: res._id\r\n              };\r\n              dispatch(addProduct(addedProduct));\r\n              const text = \"Product \" + product.name + \" added\";\r\n              const type: NotificationType = 'success';\r\n              dispatch(setNotification(text, type));\r\n            });\r\n          }}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <Grid container spacing={1}>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Name: <b style={{color: 'red'}}>*</b> </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"My New Product\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {(errors.name && touched.name) && (\r\n                      <div>{errors.name}</div>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Description: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"So useless product that Wish.com should sell these (optional)\"\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {(errors.description && touched.description) && (\r\n                      <div>{errors.description}</div>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Price: <b style={{color: 'red'}}>*</b> </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"Price\"\r\n                      type=\"number\"\r\n                      name=\"price\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {(errors.price && touched.price) && (\r\n                      <div>{errors.price}</div>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Stock: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"Stock (optional)\"\r\n                      type=\"number\"\r\n                      name=\"stock\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {(errors.stock && touched.stock) && (\r\n                      <div>{errors.stock}</div>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Image: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"www.image.com (optional)\"\r\n                      type=\"text\"\r\n                      name=\"image\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {(errors.image && touched.image) && (\r\n                      <div>{errors.image}</div>\r\n                    )}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <button className={classes.button} type=\"submit\">Submit</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n  );\r\n};\r\n\r\n export default AddProductForm;","import * as actionTypes from \"./actionTypes\";\r\nimport productService from '../../services/productService';\r\n\r\ntype ProductDispatch = (dispatch: DispatchType) => void;\r\n\r\nexport const addProduct = (data: Product): ProductDispatch => {\r\n  const action: AddProductAction = {\r\n    type: actionTypes.ADD_PRODUCT,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const removeProduct = (data: Product): ProductDispatch => {\r\n  const action: AddProductAction = {\r\n    type: actionTypes.REMOVE_PRODUCT,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const initializeProducts = () => {\r\n  \r\n  return async (dispatch: (arg0: { type: string; data: Product[]; }) => void): Promise<void> => {\r\n    const data = await productService.getAll();\r\n    const action: GetProductsAction = {\r\n      type: actionTypes.GET_PRODUCTS,\r\n      data,\r\n    };\r\n    \r\n    dispatch(action);\r\n  };\r\n};","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddProductForm from '../forms/product/AddProductForm';\r\n\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n      position: 'absolute',\r\n      width: 650,\r\n      height: 350,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: '0 30px',\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Add Product </h2>\r\n  );\r\n};\r\n\r\nconst AddProductModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer.addProductModal);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen, 'AddProduct'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <AddProductForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddProductModal;  ","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport userService from '../../services/userService';\r\nimport { AppDispatch, useAppDispatch } from '../../store/rootReducer';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport { handleModal } from '../../store/modal/actionCreators';\r\n\r\n const useStyles = makeStyles({\r\n\r\n  field: {\r\n      padding: 5,\r\n      borderColor: '#124eb0',\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      width: '90%',\r\n      maxWidth: 700\r\n  },\r\n  button: {\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      position: 'relative',\r\n      padding: 20,\r\n      paddingRight: 75,\r\n      marginTop: 10,\r\n      left: '42%',\r\n      transform: `translate(-50%, -$50%)`,\r\n      borderWidth: 3,\r\n      borderRadius: 35,      \r\n      width: 92,\r\n      height: 20,\r\n      opacity: 0.95,\r\n      backgroundColor: '#124eb0',\r\n      fontSize: 16,\r\n      fontStyle: 'bold',\r\n      color: 'white'  \r\n  },\r\n});\r\n\r\n const SignupSchema = Yup.object().shape({\r\n    userName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    firstName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    lastName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    password: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    email: Yup\r\n      .string()\r\n      .email('Invalid email')\r\n      .required('Required'),\r\n });\r\n \r\n const CreateUserForm = ():JSX.Element => {\r\n   const classes = useStyles();\r\n   const dispatch: AppDispatch = useAppDispatch();\r\n   return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          password: '',\r\n          email: '',\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const newUser: NoIdUser = { \r\n            userName: values.userName,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            password: values.password,\r\n            email: values.email,\r\n            userType: 'User',\r\n          };\r\n          const promise = userService.createUser(newUser);\r\n          promise.then((res) => {\r\n            // TODO: Korjaa backendi palauttamaan mikä kohta lomakkeessa feilaa\r\n            if (!res) {\r\n              dispatch(setNotification(\"User creation failed\",  'error'));\r\n            } else {\r\n              dispatch(handleModal(false, 'CreateUser'));\r\n              dispatch(setNotification(\"Created user: \" + newUser.userName, 'success'));\r\n            }\r\n          }).catch(e => console.log(e));    \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                <label>Username: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.userName && touched.userName) && (\r\n                    <div>{errors.userName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Firstname: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Firstname\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.firstName && touched.firstName) && (\r\n                    <div>{errors.firstName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Lastname: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Lastname\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.lastName && touched.lastName) && (\r\n                    <div>{errors.lastName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.password && touched.password) && (\r\n                    <div>{errors.password}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Email: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"example@gmail.com\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.email && touched.email) && (\r\n                    <div>{errors.email}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n );\r\n};\r\n\r\n export default CreateUserForm;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CreateUserForm from \"../forms/User/CreateUserForm\";\r\n\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../store/rootReducer';\r\nimport { handleModal } from \"../store/modal/actionCreators\";\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 650,\r\n    height: 370,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: 10,\r\n    marginBottom: 30\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Create User </h2>\r\n  );\r\n};\r\n\r\nconst CreateUserModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  \r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const modalOpen = useAppSelector(state => state.modalReducer.createUserModal);\r\n\r\n  const handleClose = () => {\r\n    dispatch(handleModal(false, 'CreateUser'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <CreateUserForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateUserModal;  ","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { IconButton, Button, Typography, Toolbar, AppBar, Tooltip, TextField } from '@material-ui/core/';\r\nimport { AddCircleOutline, Menu, Search, ShoppingCart, Backspace } from '@material-ui/icons/';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AccountMenu from './AccountMenu';\r\nimport { logIn } from '../store/User/actionCreators';\r\nimport { useAppDispatch, AppDispatch, useAppSelector } from '../store/rootReducer';\r\nimport { setNotification } from '../store/Notification/actionCreators';\r\nimport { setFilter } from '../store/Filter/actionCreators';\r\nimport LogInModal from '../modals/LogInModal';\r\nimport AddProductModal from '../modals/AddProductModal';\r\nimport CreateUserModal from '../modals/CreateUserModal';\r\nimport { clearShoppingCart } from '../store/ShoppingCart/actionCreators';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    marginRight: theme.spacing(10),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    marginLeft: 'auto',\r\n    marginRight: -12,\r\n    fontSize: 15\r\n  },\r\n  login: {\r\n    margin: theme.spacing(2),\r\n    fontSize: 15,\r\n    flexDirection: 'column'\r\n  },\r\n  addProductIcon: {\r\n    height: 30,\r\n    width: 30,\r\n  },\r\n  whiteIcon: {\r\n    color: 'white',\r\n    fontSize: 30\r\n  },\r\n  searchIcon: {\r\n    color: 'white',\r\n  }\r\n}));\r\n\r\ntype Props = {\r\n  user?: Credentials\r\n};\r\n\r\nconst Navibar = ({ user }: Props): JSX.Element => {\r\n  const [ searchText, setSearchText ] = useState('');\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n  \r\n  const logOut = () => {\r\n    void shoppingCartService.setShoppingCartActivity(cartId, false);\r\n    dispatch(logIn());\r\n    dispatch(clearShoppingCart());\r\n    dispatch(setNotification(\"Have a nice day\", 'success'));\r\n    window.localStorage.removeItem('loggedUser');\r\n  };\r\n\r\n  const handleSearchText = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    event.preventDefault();\r\n    setSearchText(event.target.value);\r\n  };\r\n\r\n  const filterProducts = () => {\r\n    dispatch(setFilter(searchText));\r\n  };\r\n\r\n  const clearFilter = () => {\r\n    setSearchText('');\r\n    dispatch(setFilter(''));\r\n  };\r\n\r\n  const loggedIn = !!user;\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Link to=\"/\">\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <Menu />\r\n            </IconButton>\r\n          </Link>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Verkkokauppa\r\n          </Typography>\r\n          <TextField \r\n            placeholder=\"Search products\"\r\n            onChange={handleSearchText}\r\n            style={{ backgroundColor: '#dae1f0'}}\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            value={searchText}\r\n          />\r\n          <IconButton onClick={() => filterProducts()}>\r\n            <Search className={classes.searchIcon}/>\r\n          </IconButton>\r\n          <IconButton onClick={() => clearFilter()}>\r\n            <Tooltip title=\"Clear searchbar\">\r\n              <Backspace className={classes.searchIcon} />\r\n            </Tooltip>\r\n          </IconButton>\r\n          <div className={classes.buttons}>\r\n            {user?.userType === 'Admin' && (\r\n              <IconButton onClick={() => dispatch(handleModal(true, 'AddProduct'))} color=\"inherit\">\r\n                <Tooltip title=\"Add product\">\r\n                  <AddCircleOutline className={classes.addProductIcon} />\r\n                </Tooltip>\r\n              </IconButton>\r\n            )}\r\n            <div>\r\n              <Button onClick={() => loggedIn ? logOut() : dispatch(handleModal(true, 'LogIn'))} color=\"inherit\">\r\n                <Typography variant=\"h6\" className={classes.login}>\r\n                  {loggedIn ? 'Log out' : 'Login'}\r\n                </Typography>\r\n              </Button>\r\n            </div>  \r\n            {!user && \r\n              <div>\r\n                <Button onClick={() => dispatch(handleModal(true, 'CreateUser'))} color=\"inherit\">\r\n                  <Typography variant=\"h6\" className={classes.login}>\r\n                    Create User\r\n                  </Typography>\r\n                </Button>\r\n              </div>  \r\n            }\r\n            <div>\r\n              <Link to=\"/shoppingCart\">\r\n                <IconButton className={classes.whiteIcon} >\r\n                  <ShoppingCart style={{ fontSize: 30, marginTop: 5}}/>\r\n                </IconButton>\r\n              </Link>\r\n            </div>\r\n            {user &&\r\n              <div>\r\n                <AccountMenu />\r\n              </div>\r\n            }\r\n          </div>\r\n        </Toolbar>\r\n        <LogInModal />\r\n        <AddProductModal />\r\n        <CreateUserModal />\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Navibar };\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Delete from '@material-ui/icons/DeleteForever';\r\n\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport productService from '../services/productService';\r\nimport { removeProduct } from '../store/Product/actionCreators';\r\nimport { setNotification } from '../store/Notification/actionCreators';\r\nimport { increaseQuantity, addNewProductToShoppingCart, createNewShoppingCart } from '../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: 170,\r\n    marginRight: 20\r\n  },\r\n  centerText: {\r\n    textAlign: 'center',\r\n  },\r\n  media: {\r\n    height: 160,\r\n  },\r\n  overflow: {\r\n    maxWidth: 170,\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis'\r\n  },\r\n});\r\n\r\ntype Props = {\r\n  product: Product\r\n};\r\n\r\nconst Product  = ({ product }: Props): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const user: Credentials | undefined = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n  const shoppingCart = useAppSelector(state => state.shoppingCartReducer.cart);\r\n\r\n  const deleteProduct = () => {\r\n    // Todo: Tarkistus että tuote todella on poistettu kannasta ennen frontista deletointia ?\r\n    productService.deleteProduct(product).catch(e => console.log(e));\r\n    dispatch(removeProduct(product));\r\n    dispatch(setNotification(\"Removed \" + product.name, 'info'));\r\n  };\r\n\r\n  const handleShoppingCart = () => {\r\n    const isProductAlreadyInCart = shoppingCart.some(p => p._id === product._id);\r\n    console.log('shopping cart: ', shoppingCart);\r\n    \r\n    let shoppingCartProduct: ShoppingCartProduct | undefined = shoppingCart.find(p => p._id === product._id);\r\n\r\n    if (!shoppingCartProduct) {   \r\n      shoppingCartProduct = {...product, quantity: 1};\r\n    }\r\n    console.log('cart id (Product.tsx)', cartId);\r\n    if (isProductAlreadyInCart) {\r\n      updateShoppingCartProductQuantity(shoppingCartProduct);\r\n    } else {  \r\n      addProductToShoppingCart(shoppingCartProduct);\r\n    }\r\n  };\r\n\r\n  const addProductToShoppingCart = (shoppingCartProduct: ShoppingCartProduct) => {  \r\n    if (!user) {\r\n      dispatch(addNewProductToShoppingCart(shoppingCartProduct, cartId));\r\n    } else {\r\n      if (!cartId) {\r\n        console.log('cart id unknown');\r\n        dispatch(addNewProductToShoppingCart(shoppingCartProduct, cartId));\r\n        const newProduct = [ shoppingCartProduct ];\r\n        void shoppingCartService.createNewShoppingCart({ products: newProduct, user: user.id, id: ''})\r\n          .then((response) => {\r\n            dispatch(createNewShoppingCart(response.id));\r\n          }).catch(e => console.log(e));\r\n      } else {\r\n        const response = shoppingCartService.addProductToShoppingCart({ product: shoppingCartProduct, userId: user.id, cartId});\r\n        response.then(() => {\r\n          dispatch(addNewProductToShoppingCart(shoppingCartProduct, cartId));\r\n            }).catch(e => console.log(e));\r\n      }\r\n      \r\n    }\r\n  };\r\n\r\n  const updateShoppingCartProductQuantity = (shoppingCartProduct: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(increaseQuantity(shoppingCartProduct, cartId));\r\n    } else {\r\n      void shoppingCartService.increaseProductQuantity({ product: shoppingCartProduct, userId: user.id, cartId: cartId })\r\n        .then((response) => {\r\n          console.log(response);\r\n          dispatch(increaseQuantity(shoppingCartProduct, cartId));\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n      <CardMedia\r\n          className={classes.media}\r\n          image={product.image}\r\n        />\r\n        <CardContent>\r\n          <Typography className={`${classes.overflow} ${classes.centerText}`} style={{ fontSize: 16 }} gutterBottom variant=\"h6\" component=\"h2\">\r\n            {product.name} <br/> {product.price}€ \r\n          </Typography>\r\n          <Typography className={`${classes.overflow} ${classes.centerText}`} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {product.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => handleShoppingCart()}>\r\n          Lisää ostoskoriin\r\n        </Button>\r\n        {user?.userType === 'Admin' && (\r\n          <IconButton onClick={() => deleteProduct()}>\r\n            <Tooltip title=\"Remove product from database\">\r\n              <Delete />\r\n            </Tooltip>\r\n          </IconButton>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport { Product };","import React from \"react\";\r\nimport { Product } from './Product';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAppSelector } from '../store/rootReducer';\r\nimport { Typography } from '@material-ui/core/';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    paddingLeft: 15\r\n  },\r\n});\r\n\r\nconst ProductListPage = (): JSX.Element | null => {\r\n  const classes = useStyles();\r\n\r\n  const products: Product[] = useAppSelector(\r\n    state => state.productReducer.products\r\n  );\r\n\r\n  const filter: string = useAppSelector(state => state.filterReducer.productFilter);\r\n\r\n  if (products.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  const filteredProducts: Product[] = filter.length === 0 ?\r\n    products :\r\n    products.filter(p => p.name.toLowerCase().includes(filter.toLowerCase()));\r\n  \r\n  if (filteredProducts.length === 0) {\r\n    // TODO: Stylet filtteri ilmotukseen\r\n    return (\r\n      <div>\r\n        <Typography variant=\"h5\"> No results with current filter </Typography>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {filteredProducts.map((product: Product) => (\r\n        <Product key={product._id} product={product} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport {ProductListPage};  ","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport userService from '../../services/userService';\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport { handleModal } from '../../store/modal/actionCreators';\r\nimport { logIn } from '../../store/User/actionCreators';\r\n\r\n const useStyles = makeStyles({\r\n\r\n  field: {\r\n      padding: 5,\r\n      borderColor: '#124eb0',\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      width: '90%',\r\n      maxWidth: 700\r\n  },\r\n  button: {\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      position: 'relative',\r\n      padding: 20,\r\n      paddingRight: 75,\r\n      marginTop: 10,\r\n      left: '42%',\r\n      transform: `translate(-50%, -$50%)`,\r\n      borderWidth: 3,\r\n      borderRadius: 35,      \r\n      width: 92,\r\n      height: 20,\r\n      opacity: 0.95,\r\n      backgroundColor: '#124eb0',\r\n      fontSize: 16,\r\n      fontStyle: 'bold',\r\n      color: 'white'  \r\n  },\r\n});\r\n\r\n const SignupSchema = Yup.object().shape({\r\n    userName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    firstName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    lastName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    password: Yup\r\n      .string(),\r\n\r\n    email: Yup\r\n      .string()\r\n      .email('Invalid email')\r\n      .required('Required'),\r\n\r\n    avatar: Yup\r\n      .string(),\r\n });\r\n \r\n const ModifyUserForm = ():JSX.Element => {\r\n   const classes = useStyles();\r\n   const dispatch: AppDispatch = useAppDispatch();\r\n   const loggedUser: Credentials | undefined = useAppSelector(state => state.userReducer.user);\r\n   if (!loggedUser) return <div></div>;\r\n   return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: loggedUser.userName,\r\n          firstName: loggedUser.firstName,\r\n          lastName: loggedUser.lastName,\r\n          password: '',\r\n          email: loggedUser.email,\r\n          avatar: loggedUser.avatar,\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const modifiedUser: NoIdUser = { \r\n            userName: values.userName,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            password: values.password,\r\n            email: values.email,\r\n            avatar: values.avatar,\r\n          };\r\n          const promise = userService.modifyUser(modifiedUser);\r\n          promise.then((res) => {\r\n            // TODO: Korjaa backendi palauttamaan mikä kohta lomakkeessa feilaa\r\n            if (!res) {\r\n              dispatch(setNotification(\"User modification failed\",  'error'));\r\n            } else {\r\n              dispatch(handleModal(false, 'ModifyUser'));\r\n              dispatch(logIn({\r\n                ...modifiedUser,\r\n                id: loggedUser.id,\r\n                userType: loggedUser.userType,\r\n                token: loggedUser.token,\r\n                recentActivity: loggedUser.recentActivity,\r\n                platformInfo: loggedUser.platformInfo\r\n              }));\r\n              window.localStorage.setItem(\r\n                'loggedUser', JSON.stringify({ ...modifiedUser, id: loggedUser.id, userType: loggedUser.userType, token: loggedUser.token })\r\n              );\r\n            }\r\n          }).catch(e => console.log(e));    \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Username: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.userName && touched.userName) && (\r\n                    <div>{errors.userName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Firstname: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Firstname\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.firstName && touched.firstName) && (\r\n                    <div>{errors.firstName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Lastname: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Lastname\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.lastName && touched.lastName) && (\r\n                    <div>{errors.lastName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"If password field is left empty, it will not be changed\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.password && touched.password) && (\r\n                    <div>{errors.password}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Email: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"example@gmail.com\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.email && touched.email) && (\r\n                    <div>{errors.email}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Avatar: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"www.avatar/org/avatar.png (optional)\"\r\n                    type=\"text\"\r\n                    name=\"avatar\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.avatar && touched.avatar) && (\r\n                    <div>{errors.avatar}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n );\r\n};\r\n\r\n export default ModifyUserForm;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\nimport ModifyUserForm from \"../forms/User/ModifyUserForm\";\r\n\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 650,\r\n    height: 430,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: 10,\r\n    marginBottom: 30\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Modify user info </h2>\r\n  );\r\n};\r\n\r\nconst ModifyUserInfoModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer.modifyUserInfoModal);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen, 'ModifyUser'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <ModifyUserForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModifyUserInfoModal;","export const parseDate = (date?: Date):string => {\r\n  if (!date) return '';\r\n  const d = new Date(date);\r\n  const day = d.getDate().toString();\r\n  const month = `${d.getMonth() + 1}`;\r\n  const year = d.getFullYear().toString();\r\n  const hour = d.getHours().toString();\r\n  const min = d.getMinutes();\r\n  let minutes;\r\n  min < 10 ? minutes = '0' + min.toString() : minutes = min.toString();\r\n\r\n  return day + '.' + month + '.' + year + '  ' + hour + ':' + minutes;\r\n};","import React from 'react';\r\nimport { Box, Grid, Typography, IconButton, Tooltip, Avatar } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AccountCircle, Edit } from '@material-ui/icons/';\r\n\r\nimport { AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\nimport ModifyUserInfoModal from '../modals/ModifyUserInfoModal';\r\nimport { parseDate } from '../utils/DateParser';\r\n\r\nconst useStyles = makeStyles({\r\n  nameAndIcon: {\r\n    width: '50%',\r\n    margin: '0 auto',\r\n    flexGrow: 1\r\n  },\r\n  column: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  header: {\r\n    textAlign: 'center',\r\n    height: 20,\r\n    color: 'white',\r\n    borderRadius: '15%',\r\n    backgroundColor: '#2525b8',\r\n  },\r\n});\r\ninterface AccountProps {\r\n  user: Credentials | undefined  \r\n}\r\n\r\ninterface HeaderProps {\r\n  text: string\r\n}\r\n\r\nconst defaultProps = {\r\n  bgcolor: 'background.paper',\r\n  m: 1,\r\n};\r\n\r\nconst Account = ({user}: AccountProps): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  if (!user) return <div></div>;\r\n\r\n  const Header = ({text}: HeaderProps): JSX.Element => {\r\n    return (\r\n      <Typography className={`${classes.header}`}>{text}</Typography>\r\n    );\r\n  };\r\n\r\n  const dates: string[] = [];\r\n  const platformInfo: string[] = [];\r\n\r\n  let counter = 0;\r\n  for (let i = user.recentActivity.length -1; i >= 0; i--) {\r\n    dates.push(parseDate(user.recentActivity[i]));\r\n    platformInfo.push(user.platformInfo[i]);\r\n    counter++;\r\n    if (counter === 4) break;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user &&\r\n        <Grid container item xs={12} spacing={1}>\r\n          <Grid item xs={3}>\r\n            <Box borderRight={1} borderColor=\"primary.main\" style={{ height: 270 }} {...defaultProps}>\r\n              <div className={classes.nameAndIcon}>\r\n                {user.avatar ?\r\n                <Avatar style={{ backgroundColor: 'white', marginLeft: 15, width: 120, height: 120 }} src={user.avatar} />\r\n                :\r\n                <Avatar style={{ backgroundColor: 'white', marginLeft: 15, width: 120, height: 120 }}>\r\n                  <AccountCircle style={{ color: '#094ebd', width: 120, height: 120 }}/>\r\n                </Avatar>\r\n                }\r\n                <Typography style={{ marginLeft: 5 }} variant='h6'>\r\n                  {user.firstName} &nbsp; {user.lastName}\r\n                </Typography>\r\n              </div>\r\n            </Box>\r\n          </Grid>\r\n          <div className={classes.column}>\r\n            <Grid item xs={12}>\r\n              <Box borderBottom={1} borderColor=\"primary.main\" style={{ height: 120, width: 600 }} {...defaultProps}>\r\n                <Header text=\"User info\" />\r\n                <Typography variant='subtitle1'>\r\n                  Email: {user.email} <br/>\r\n                  Firstname: {user.firstName} <br/>\r\n                  Lastname: {user.lastName} \r\n                  <IconButton onClick={() => dispatch(handleModal(true, 'ModifyUser'))} style={{ position: 'relative',  left: 10, marginTop: -10 }}> \r\n                    <Tooltip title=\"Modify user info\">\r\n                      <Edit />\r\n                    </Tooltip>\r\n                  </IconButton><br/>\r\n                </Typography>\r\n               \r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Box borderBottom={1} borderColor=\"primary.main\" style={{ height: 120, width: 600 }} {...defaultProps}>\r\n              <Header text=\"Recent activity\" />\r\n              {dates.map((date, index) => (\r\n                <Typography key={index}>{date}: {platformInfo[index]}</Typography>\r\n              ))}\r\n              </Box>\r\n            </Grid>\r\n          </div>\r\n        </Grid>\r\n      }\r\n      <ModifyUserInfoModal />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Account;","import React, { useState, useEffect } from 'react';\r\n\r\nimport userService from '../services/userService';\r\nimport { useAppSelector } from '../store/rootReducer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { KeyboardArrowDown, KeyboardArrowUp } from '@material-ui/icons/';\r\nimport { parseDate } from '../utils/DateParser';\r\nimport { blue, grey } from '@material-ui/core/colors/';\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  TableHead,\r\n  TableContainer,\r\n  TableCell,\r\n  Paper,\r\n  Typography,\r\n  IconButton,\r\n  Collapse,\r\n  Box\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: grey[400],\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n  header: {\r\n    backgroundColor: blue[500],\r\n  },\r\n  mainRow: {\r\n    backgroundColor: blue[200],\r\n  },\r\n  row: {  \r\n    '&:hover': {\r\n      backgroundColor: blue[200],\r\n    },\r\n  },\r\n  body: {\r\n    backgroundColor: grey[200],\r\n  }\r\n});\r\n\r\ninterface RowProps {\r\n  order: ShoppingCart\r\n}\r\n\r\nconst Row = ({ order }: RowProps):JSX.Element => {\r\n  const [ open, setOpen ] = useState<boolean>();\r\n  const classes = useStyles();\r\n\r\n  const totalPrice = () => {\r\n    return order.products.reduce((prev, cur) => prev + cur.price * cur.quantity, 0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={`${classes.root}`}>\r\n        <TableCell>\r\n          <IconButton size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\"> {parseDate(order.completionDate)} </TableCell>\r\n        <TableCell />\r\n        <TableCell />\r\n        <TableCell />\r\n        <TableCell />\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Order total price: &nbsp; {totalPrice()}\r\n              </Typography>\r\n              <Table size=\"small\" aria-label=\"purchases\">\r\n                <TableHead>\r\n                  <TableRow className={classes.body}>\r\n                    <TableCell>Name</TableCell>\r\n                    <TableCell>Price</TableCell>\r\n                    <TableCell align=\"right\">Amount</TableCell>\r\n                    <TableCell align=\"right\">Total price</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody className={classes.body}>\r\n                  {order.products.map((product) => (\r\n                    <TableRow key={product._id} className={classes.row}>\r\n                      <TableCell component=\"th\" scope=\"row\">\r\n                        {product.name}\r\n                      </TableCell>\r\n                      <TableCell>{product.price}</TableCell>\r\n                      <TableCell align=\"right\">{product.quantity}</TableCell>\r\n                      <TableCell align=\"right\">\r\n                        {Math.round(product.quantity * product.price * 100) / 100}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PastOrders = (): JSX.Element => {\r\n  const [ orders, setOrders ] = useState<ShoppingCart[]>([]);\r\n  \r\n  const classes = useStyles();\r\n  const user = useAppSelector(state => state.userReducer.user);\r\n\r\n  if (!user) return <div></div>;\r\n\r\n  useEffect(() => {\r\n    void userService.getUsersCompletedShoppingcarts(user.id)\r\n      .then((res) => {\r\n        setOrders(res);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow className={classes.header}>\r\n            <TableCell />\r\n            <TableCell>Date Of Order</TableCell>\r\n            <TableCell align=\"left\" />\r\n            <TableCell align=\"right\"/>\r\n            <TableCell align=\"right\"/>\r\n            <TableCell align=\"right\"/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody className={classes.body}>\r\n          {orders.map((order) => (\r\n            <Row key={order.id} order={order}/>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default PastOrders;","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport { setNotification } from '../../store/Notification/actionCreators';\r\nimport { userCheck } from '../../typeGuards';\r\nimport shoppingCartService from '../../services/shoppingCartService';\r\nimport { clearShoppingCart } from '../../store/ShoppingCart/actionCreators';\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    padding: 5,\r\n    borderColor: '#124eb0',\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    width: '90%',\r\n    maxWidth: 700\r\n  },\r\n  \r\n  button: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    padding: 20,\r\n    paddingRight: 75,\r\n    marginTop: 10,\r\n    paddingBottom: 20,\r\n    transform: `translate(-50%, -$50%)`,\r\n    borderWidth: 3,\r\n    borderRadius: 10,      \r\n    width: 92,\r\n    height: 20,\r\n    opacity: 0.95,\r\n    backgroundColor: '#124eb0',\r\n    fontSize: 16,\r\n    fontStyle: 'bold',\r\n    color: 'white'  \r\n  },\r\n\r\n  logInText: {\r\n    position: 'relative',\r\n    marginLeft: 20,\r\n    marginTop: 20,\r\n  }\r\n});\r\n\r\nconst ShippingSchema = Yup.object().shape({\r\n  firstName: Yup\r\n    .string()\r\n    .required(\"Required\"),\r\n  lastName: Yup\r\n    .string()\r\n    .required(\"Required\"),\r\n  address: Yup\r\n    .string()\r\n    .required(\"Required\")\r\n});\r\n \r\nconst ShoppingCartForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const user: Credentials | undefined = useAppSelector(state => state.userReducer.user);\r\n  const cartState: ShoppingCartState = useAppSelector(state => state.shoppingCartReducer);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: user ? user.firstName : '',\r\n          lastName: user ? user.lastName : '',\r\n          address: '',\r\n        }}\r\n        validationSchema={ShippingSchema}\r\n        onSubmit={values => {\r\n          const { firstName, lastName, address } = values;      \r\n          const shippingInfo: ShippingInfo = { firstName, lastName, address };\r\n          // TODO: Checkaa ettei kärry ole tyhjä\r\n          if (userCheck(user)) {\r\n            void shoppingCartService.setShoppingCartCompleted(cartState.cartId)\r\n              .then((response) => {\r\n                if (!response) {\r\n                  console.log(response);\r\n                  dispatch(setNotification('Unexpected error', 'error'));\r\n                  // TODO: ??\r\n                } else {\r\n                  console.log(response);\r\n                  dispatch(clearShoppingCart());\r\n                  dispatch(setNotification('Delivering products to ' + shippingInfo.address, 'success'));\r\n                }\r\n            });\r\n          }    \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>First name: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"First name\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.firstName && touched.firstName) && (\r\n                    <div>{errors.firstName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Last name: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Last name\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.lastName && touched.lastName) && (\r\n                    <div>{errors.lastName}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Address: <b style={{color: 'red'}}>*</b> </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Address\"\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {(errors.address && touched.address) && (\r\n                    <div>{errors.address}</div>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button disabled={!user} className={classes.button} type=\"submit\"> Submit </button>\r\n                {!user &&\r\n                  <Typography variant=\"subtitle1\" className={classes.logInText}> Please sign in first </Typography>\r\n                }\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartForm;","import React from 'react';\r\nimport { useAppDispatch, AppDispatch, useAppSelector } from '../store/rootReducer';\r\nimport { makeStyles  } from '@material-ui/styles';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Typography, IconButton } from '@material-ui/core';\r\nimport { Add, Remove } from '@material-ui/icons';\r\nimport { grey, red } from '@material-ui/core/colors';\r\n\r\nimport { decreaseQuantity, removeProduct, increaseQuantity } from '../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  card: {\r\n    width: 380,\r\n    maxHeight: 140,\r\n    marginBottom: 15\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: 120\r\n  },\r\n  content: {\r\n    width: 190,\r\n    height: 20,\r\n    flex: '1 0 auto',\r\n    backgroundColor: grey[200],\r\n  },\r\n  info: {\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n  },\r\n  contentAndImage: {\r\n    display: 'flex',\r\n    maxHeight: 120\r\n  },\r\n  deleteButton: {\r\n    display: 'flex',\r\n    backgroundColor: red[400],\r\n    justifyContent: 'center',\r\n  },\r\n  iconButtons: {\r\n    position: 'relative',\r\n    top: 50,\r\n  },\r\n});\r\n\r\ninterface props {\r\n  product: ShoppingCartProduct\r\n}\r\n\r\nconst ShoppingCartCard: React.FC<props> = ({ product }): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n\r\n  const user = useAppSelector(state => state.userReducer.user);\r\n  let userId: string;\r\n  if (!user) {\r\n    userId = '';\r\n  } else {\r\n    userId = user.id;\r\n  }\r\n\r\n  const removeProductFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(removeProduct(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.removeProductFromShoppingCart({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(removeProduct(product, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  const decreaseQuantityFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(decreaseQuantity(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.decreaseProductQuantity({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(decreaseQuantity(product, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  const increaseQuantityFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(increaseQuantity(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.increaseProductQuantity({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(increaseQuantity(product, cartId));\r\n      });\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className={classes.container}>\r\n      <Card className={classes.card}>\r\n        <div className={classes.contentAndImage}>\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Typography className={classes.info} component=\"h6\" variant=\"h6\">\r\n                {product.name} x {product.quantity.toString()}\r\n              </Typography>\r\n              <Typography className={classes.info} variant=\"subtitle1\" color=\"textSecondary\">\r\n                {product.description}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {product.price}€\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n          <CardMedia\r\n            className={classes.image}\r\n            image={product.image}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CardActionArea className={classes.deleteButton} onClick={() => removeProductFromCart(product)}>\r\n            Remove item(s) from cart\r\n          </CardActionArea>\r\n        </div>        \r\n      </Card>\r\n      <div className={classes.iconButtons}>\r\n        <IconButton onClick={() => decreaseQuantityFromCart(product)}>\r\n          <Remove />\r\n        </IconButton>\r\n        <IconButton onClick={() => increaseQuantityFromCart(product)}>\r\n          <Add style={{ marginLeft: -10 }}/>\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartCard;","import React from 'react';\r\nimport { useAppSelector, useAppDispatch, AppDispatch } from '../store/rootReducer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, Container, Grid } from '@material-ui/core';\r\n\r\nimport ShoppingCartForm from '../forms/shoppingCart/ShoppingCartForm';\r\nimport ShoppingCartCard from './ShoppingCartCard';\r\nimport { removeProduct } from '../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\n\r\nconst useStyles = makeStyles({\r\n  box: {\r\n    maxHeight: 350\r\n  },\r\n  shoppingCartAndFormBox: {\r\n    margin: 25,\r\n    borderRadius: 15,\r\n  },\r\n  cart: {\r\n    margin: 25,\r\n    borderRadius: 5,\r\n    height: 300\r\n  },\r\n  container: {\r\n    marginTop: 15, \r\n  },\r\n  deleteIcon: {\r\n    position: 'relative',\r\n    top: -15\r\n  },\r\n  form: {\r\n    borderWidth: 1,\r\n    marginTop: 75,\r\n    padding: 10,\r\n  },\r\n  empty: {\r\n    position: 'relative',\r\n    top: '50%',\r\n    left: '25%',\r\n  }\r\n});\r\n\r\nconst ShoppingCart: React.FC = (): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const products: ShoppingCartProduct[] = useAppSelector(\r\n    state => state.shoppingCartReducer.cart\r\n  );\r\n\r\n  const user: Credentials | undefined = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n  const userId = user?.id || '';\r\n\r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n\r\n  const removeProductFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(removeProduct(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.removeProductFromShoppingCart({ cartId, userId, product });\r\n      promise.then(() => {\r\n        dispatch(removeProduct(product, cartId));\r\n      }).catch(e => console.log(e));\r\n    }\r\n  };\r\n\r\n  const totalPrice = () => {\r\n    return products.reduce((prev, cur) => prev + cur.price * cur.quantity, 0);\r\n  };\r\n  \r\n  console.log('shopping cart', products);\r\n  return (\r\n    <Box className={classes.box} border={1}>\r\n      <Grid container item xs={12} spacing={3}>\r\n        <Grid item xs={5}>\r\n          <Box border={1} className={classes.cart}> \r\n            {products.length === 0 ?\r\n              <Typography variant='h5' className={classes.empty}> Your Shopping Cart Is Empty </Typography>\r\n              :\r\n              <div style={{ maxHeight: 300, overflow: 'auto' }}>\r\n                {products.map(product => {\r\n                  if (product.quantity > 0) {\r\n                    return (\r\n                      <Container key={product._id} className={classes.container} maxWidth=\"sm\">\r\n                        <ShoppingCartCard key={product._id} product={product} />\r\n                      </Container>\r\n                    );\r\n                  } else {\r\n                    removeProductFromCart(product);\r\n                  }\r\n                })}\r\n                <Typography variant='h5' style={{ marginLeft: 20 }}>\r\n                  Total price: {totalPrice()}\r\n                </Typography>  \r\n              </div>\r\n              \r\n            }\r\n          </Box>\r\n        </Grid>  \r\n        <Grid item xs={7}>\r\n          <Box border={1} className={classes.shoppingCartAndFormBox}>\r\n            <div className={classes.form}> \r\n              <ShoppingCartForm />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ShoppingCart;","import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useAppDispatch, AppDispatch } from '../store/rootReducer';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { hideNotification } from '../store/Notification/actionCreators';\r\n\r\ninterface NotificationProps {\r\n  type: NotificationType,\r\n  message: string,\r\n  tts?: number\r\n}\r\n\r\nconst Alert: React.FC<NotificationProps> = ({ type, message }: NotificationProps) => {\r\n  switch (type) {\r\n    case 'success':\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"success\" > {message} </MuiAlert>;\r\n\r\n    case 'error':\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" > {message} </MuiAlert>;\r\n\r\n    default:\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"info\" > {message} </MuiAlert>;   \r\n  } \r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '15%',\r\n    position: 'relative',\r\n    marginBottom: 15,\r\n    left: 15,\r\n  },\r\n});\r\n\r\nconst Notification: React.FC<NotificationProps> = ({ type, message, tts = 5000 }: NotificationProps) => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  setTimeout(() => dispatch(hideNotification()), tts);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert type={type} message={message} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Navibar } from './components/Navibar';\r\nimport { ProductListPage } from './components/ProductListPage';\r\nimport Account from './components/Account';\r\nimport PastOrders from './components/PastOrders';\r\nimport ShoppingCart from './components/ShoppingCart';\r\nimport shoppingCartService from './services/shoppingCartService';\r\n\r\nimport { initializeProducts } from './store/Product/actionCreators';\r\nimport { createNewShoppingCart, retrieveOldShoppingCart, clearShoppingCart } from './store/ShoppingCart/actionCreators';\r\nimport { logIn } from './store/User/actionCreators';\r\nimport { useAppSelector, useAppDispatch, AppDispatch } from './store/rootReducer';\r\n\r\nimport Notification from './UI/Notification';\r\nimport { safeJsonParse, isCredentialsWithTimestamp } from './typeGuards';\r\nimport { validTimeStamp } from './utils/ValidTimeStamp';\r\n\r\nconst App = (): JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const user: Credentials | undefined = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n\r\n  const notification: NotificationState = useAppSelector(\r\n    state => state.notificationReducer\r\n  );\r\n\r\n  const shoppingCart: ShoppingCartState = useAppSelector(\r\n    state => state.shoppingCartReducer\r\n  );\r\n\r\n  console.log('shoppingCart', shoppingCart);\r\n  useEffect(() => {\r\n    void dispatch(initializeProducts());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const loggedUser = window.localStorage.getItem('loggedUser');\r\n      if (loggedUser) {\r\n      const parsedUser = safeJsonParse(isCredentialsWithTimestamp)(loggedUser);\r\n      if (parsedUser.hasError) {\r\n        console.log('error at parsed user');\r\n      } else {\r\n        if (validTimeStamp(parsedUser.parsed.timestamp)) {\r\n          console.log('valid timestamp');\r\n          dispatch(logIn(parsedUser.parsed));\r\n          const usersShoppingCart = shoppingCartService.getUsersShoppingCart(parsedUser.parsed.id);\r\n          void usersShoppingCart.then((res) => {\r\n            if (res) {\r\n              dispatch(retrieveOldShoppingCart(res.id, res.products));\r\n            } else {\r\n              void shoppingCartService.createNewShoppingCart({ \r\n                products: shoppingCart.cart,\r\n                user: parsedUser.parsed.id,\r\n                id: shoppingCart.cartId\r\n              }).then((res => {\r\n                dispatch(createNewShoppingCart(res.id));\r\n              }));\r\n            }\r\n          });\r\n        } else {\r\n          console.log('invalid timestamp');\r\n          void shoppingCartService.setShoppingCartActivity(shoppingCart.cartId, false);\r\n          dispatch(logIn());\r\n          dispatch(clearShoppingCart());\r\n          window.localStorage.removeItem('loggedUser');\r\n        } \r\n      }\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navibar user={user} />\r\n        <br/>\r\n        {notification.visible && (\r\n          <div>\r\n            <Notification type={notification.type} message={notification.message} />\r\n          </div>\r\n        )}\r\n        <Switch>\r\n          <Route path=\"/account\" render={() => <Account user={user}/>} />\r\n        </Switch>\r\n\r\n        <Switch>\r\n          <Route path='/pastOrders' render={() => <PastOrders />} />\r\n        </Switch>\r\n\r\n        <Switch>\r\n          <Route path=\"/shoppingCart\" render={() => <ShoppingCart />} />\r\n        </Switch>\r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <ProductListPage />} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","export const validTimeStamp = (d: Date): boolean => {\r\n  const date = new Date(d);\r\n  const currentTime = new Date();\r\n  console.log('current:', currentTime.getHours(), '.', currentTime.getMinutes(), 'd:', date.getHours(), '.', date.getMinutes());\r\n  return currentTime.getHours() - date.getHours() < 1;\r\n};","  \r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from './store/rootReducer';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}