{"version":3,"sources":["store/User/actionTypes.ts","store/User/actionCreators.ts","store/Notification/actionTypes.ts","typeGuards.ts","store/Notification/actionCreators.ts","store/Product/actionTypes.ts","store/Product/reducer.ts","store/User/reducer.ts","store/Notification/reducer.ts","store/ShoppingCart/actionTypes.ts","store/ShoppingCart/reducer.ts","store/modal/reducer.ts","store/rootReducer.ts","services/userService.ts","store/modal/actionCreators.ts","store/ShoppingCart/actionCreators.ts","services/shoppingCartService.ts","forms/User/LogInForm.tsx","modals/LogInModal.tsx","services/productService.ts","forms/product/AddProductForm.tsx","store/Product/actionCreators.ts","modals/AddProductModal.tsx","forms/User/CreateUserForm.tsx","modals/CreateUserModal.tsx","components/Navibar.tsx","components/Product.tsx","components/ProductListPage.tsx","forms/shoppingCart/ShoppingCartForm.tsx","components/ShoppingCartCard.tsx","components/ShoppingCart.tsx","UI/Notification.tsx","App.tsx","index.tsx"],"names":["LOG_IN","logIn","data","action","type","actionTypes","dispatch","SET_NOTIFICATION","HIDE_NOTIFICATION","addOrRemoveActionCheck","object","newShoppingCartCheck","clearShoppingCart","setNotification","notificationType","hideNotification","ADD_PRODUCT","GET_PRODUCTS","REMOVE_PRODUCT","initialState","products","reducer","state","concat","filter","product","user","message","visible","INCREASE_QUANTITY","DECREASE_QUANTITY","REMOVE_PRODUCT_FROM_CART","CREATE_NEW_SHOPPING_CART","cartId","cart","increaseQuantity","list","item","find","p","id","undefined","quantity","decreaseQuantity","some","lisattava","map","uusi","createUserModal","logInModal","addProductModal","modal","rootReducer","combineReducers","productReducer","userReducer","notificationReducer","shoppingCartReducer","modalReducer","store","configureStore","useAppDispatch","useDispatch","useAppSelector","useSelector","signIn","username","password","a","axios","post","request","createUser","handleModal","console","log","addNewProductToShoppingCart","removeProduct","createNewShoppingCart","addProductToShoppingCart","productToAdd","removeProductFromShoppingCart","productToRemove","put","increaseProductQuantity","decreaseProductQuantity","useStyles","makeStyles","field","padding","left","borderColor","position","marginBottom","width","button","display","alignItems","paddingRight","transform","borderWidth","borderRadius","height","opacity","backgroundColor","fontSize","fontStyle","color","SignupSchema","Yup","shape","userName","min","max","required","LogInForm","cartState","classes","initialValues","validationSchema","onSubmit","values","userService","then","res","token","setTimeout","credentials","firstName","lastName","userType","shoppingCartService","userId","errors","touched","Grid","container","spacing","xs","className","placeholder","name","getModalStyle","top","theme","justifyContent","paper","palette","background","boxShadow","shadows","header","border","textAlign","marginTop","Header","LogInModal","useState","modalStyle","modalOpen","Modal","aria-labelledby","aria-describedby","open","onClose","style","getAll","get","response","addProduct","deleteProduct","delete","maxWidth","description","price","stock","image","AddProductForm","productService","addedProduct","AddProductModal","email","CreateUserForm","newUser","CreateUserModal","menuButton","marginRight","title","buttons","marginLeft","login","margin","addProductIcon","shoppingCart","Navibar","AppBar","Toolbar","to","IconButton","edge","aria-label","Typography","variant","onClick","Tooltip","Button","root","centerText","media","overflow","whiteSpace","textOverflow","Product","shoppingCartProduct","updateShoppingCartProductQuantity","Card","CardActionArea","CardMedia","CardContent","gutterBottom","component","CardActions","size","isProductAlreadyInCart","handleShoppingCart","paddingLeft","ProductListPage","length","paddingBottom","logInText","ShippingSchema","address","ShoppingCartForm","disabled","flexDirection","card","maxHeight","details","content","flex","grey","info","contentAndImage","deleteButton","red","iconButtons","ShoppingCartCard","toString","removeProductFromCart","decreaseQuantityFromCart","Remove","increaseQuantityFromCart","Add","box","shoppingCartAndFormBox","deleteIcon","form","empty","ShoppingCart","Box","Container","reduce","prev","cur","Alert","elevation","severity","Notification","App","useEffect","notification","path","render","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.5c603e9b.chunk.js","sourcesContent":["export const LOG_IN = \"LOG_IN\";\r\nexport const CREATE_USER = \"CREATE_USER\";\r\nexport const ADD_PRODUCT_TO_CART = \"ADD_PRODUCT_TO_CART\";","import * as actionTypes from \"./actionTypes\";\r\n\r\ntype Login = (dispatch: DispatchType) => void;\r\n\r\nexport const logIn = (data: Credentials | null): Login => {\r\n  const action: LogInAction = {\r\n    type: actionTypes.LOG_IN,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","export const SET_NOTIFICATION = \"SET_NOTIFICATION\";\r\nexport const HIDE_NOTIFICATION = \"HIDE_NOTIFICATION\";","export const notificationTypeCheck = (object: unknown): object is NotificationType => {\r\n  if (object === 'error' || object === 'info' || object === 'success') {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const userCheck = (object: Credentials | null): object is Credentials => {\r\n  if (object === null) return false;\r\n  return true;\r\n};\r\n\r\nexport const addOrRemoveActionCheck = (object: ShoppingCartAction): object is AddOrRemoveShoppingCartAction => {\r\n  if (object.type === 'INCREASE_QUANTITY' || object.type === 'DECREASE_QUANTITY' || object.type === 'REMOVE_PRODUCT_FROM_CART') {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const newShoppingCartCheck = (object: ShoppingCartAction): object is CreateNewShoppingCartAction => {\r\n  if (object.type === 'CREATE_NEW_SHOPPING_CART') {\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nexport const clearShoppingCart = (object: ShoppingCartAction): object is ClearShoppingCartAction => {\r\n  if (object.type === 'CLEAR_SHOPPINGCART') {\r\n    return true;\r\n  }\r\n  return false;\r\n};","import * as actionTypes from \"./actionTypes\";\r\nimport { notificationTypeCheck } from '../../typeGuards';\r\n\r\ntype SetNotification = (dispatch: DispatchType) => void;\r\n\r\nexport const setNotification = (data: string, notificationType: NotificationType): SetNotification => {\r\n  if (notificationTypeCheck(notificationType)) {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.SET_NOTIFICATION,\r\n      notificationType: notificationType,\r\n      data,\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n  }\r\n  else {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.SET_NOTIFICATION,\r\n      notificationType: 'error',\r\n      data,\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n  }\r\n};\r\n\r\nexport const hideNotification = (): SetNotification => {\r\n    const action: SetNotificationAction = {\r\n      type: actionTypes.HIDE_NOTIFICATION,\r\n      notificationType: 'error',\r\n      data: '',\r\n    };\r\n  \r\n    return (dispatch: DispatchType) => {\r\n      dispatch(action);\r\n    };\r\n};","export const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const GET_PRODUCTS = \"GET_PRODUCTS\";\r\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: ProductState = {\r\n  products: []\r\n};\r\n\r\nconst reducer = (state: ProductState = initialState, action: GetProductsAction | AddProductAction): ProductState => {\r\n    \r\n  switch (action.type) {\r\n    case actionTypes.GET_PRODUCTS:\r\n      return {\r\n        ...state,\r\n        products: action.data as Product[]\r\n      };\r\n\r\n    case actionTypes.ADD_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.concat(action.data)\r\n      };\r\n\r\n    case actionTypes.REMOVE_PRODUCT:\r\n      return {\r\n        ...state,\r\n        products: state.products.filter(product => product !== action.data)\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: UserState = {\r\n  user: null\r\n};\r\n\r\nconst reducer = (state: UserState = initialState, action: LogInAction): UserState => {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.LOG_IN:\r\n      return {\r\n        ...state,\r\n        user: action.data\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from \"./actionTypes\";\r\n\r\nconst initialState: NotificationState = {\r\n  message: '',\r\n  type: 'error',\r\n  visible: false\r\n};\r\n\r\nconst reducer = (state: NotificationState = initialState, action: SetNotificationAction): NotificationState => {\r\n\r\n  switch (action.type) {\r\n    case actionTypes.SET_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        message: action.data,\r\n        type: action.notificationType,\r\n        visible: true\r\n      };\r\n    case actionTypes.HIDE_NOTIFICATION:\r\n      return {\r\n        ...state,\r\n        message: '',\r\n        type: action.notificationType,\r\n        visible: false\r\n      };\r\n  }\r\n  \r\n  return state;\r\n};\r\n\r\nexport default reducer;","export const INCREASE_QUANTITY = \"INCREASE_QUANTITY\";\r\nexport const DECREASE_QUANTITY = \"DECREASE_QUANTITY\";\r\nexport const REMOVE_PRODUCT_FROM_CART = \"REMOVE_PRODUCT_FROM_CART\";\r\nexport const CLEAR_SHOPPINGCART = \"CLEAR_SHOPPINGCART\";\r\nexport const CREATE_NEW_SHOPPING_CART = \"CREATE_NEW_SHOPPING_CART\";","import * as actionTypes from './actionTypes';\r\nimport { addOrRemoveActionCheck, newShoppingCartCheck, clearShoppingCart } from '../../typeGuards';\r\n\r\nconst initialState: ShoppingCartState = {\r\n  cartId: '',\r\n  cart: []\r\n};\r\n\r\nconst increaseQuantity = (product: ShoppingCartProduct, list: ShoppingCartProduct[]): ShoppingCartProduct => {\r\n  const item: ShoppingCartProduct | undefined = list.find(p => p.id === product.id);\r\n  if (item === undefined) {\r\n    return product;\r\n  }\r\n  product.quantity = item.quantity +1;\r\n  return product;\r\n};\r\n\r\nconst decreaseQuantity = (product: ShoppingCartProduct, list: ShoppingCartProduct[]): ShoppingCartProduct => {\r\n  const item: ShoppingCartProduct | undefined = list.find(p => p.id === product.id);\r\n  if (item === undefined) {\r\n    return product;\r\n  }\r\n  product.quantity = item.quantity -1;\r\n  return product;\r\n};\r\n\r\nconst reducer = (state: ShoppingCartState = initialState, action: ShoppingCartAction): ShoppingCartState => {\r\n\r\n  if (addOrRemoveActionCheck(action)) {\r\n    switch (action.type) {\r\n      case actionTypes.INCREASE_QUANTITY:   \r\n        if (!state.cart.some(p => p.id === action.data.id)) {\r\n          return {\r\n            cartId: action.cartId,\r\n            cart: state.cart.concat(action.data) };\r\n        } \r\n        const lisattava = increaseQuantity(action.data, state.cart);\r\n        return {\r\n          cartId: action.cartId,\r\n          cart: state.cart.map(p => p.id === lisattava.id ? lisattava : p)\r\n        };\r\n  \r\n      case actionTypes.DECREASE_QUANTITY:\r\n        const uusi = decreaseQuantity(action.data, state.cart);\r\n        return {\r\n          cartId: action.cartId,\r\n          cart: state.cart.map(p => p.id === uusi.id ? uusi : p)\r\n        };\r\n  \r\n      case actionTypes.REMOVE_PRODUCT_FROM_CART:\r\n        return {\r\n          cartId: action.cartId,\r\n          cart: state.cart.filter(p => p.id !== action.data.id)\r\n        };\r\n    }\r\n\r\n  } else if (newShoppingCartCheck(action)) {\r\n    \r\n    switch (action.type) {\r\n      case actionTypes.CREATE_NEW_SHOPPING_CART:\r\n        return {\r\n          // eslint-disable-next-line  @typescript-eslint/no-unsafe-assignment\r\n          cartId: action.cartId,\r\n          cart: state.cart\r\n        };\r\n    }\r\n    \r\n  } else if (clearShoppingCart(action)) {\r\n    return {\r\n      cartId: '',\r\n      cart: []\r\n    };\r\n\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default reducer;","\r\n\r\nconst initialState: ModalState = {\r\n  createUserModal: false,\r\n  logInModal: false,\r\n  addProductModal: false\r\n};\r\n\r\nconst reducer = (state: ModalState = initialState, action: ModalAction): ModalState => {\r\n  switch (action.modal) {\r\n    case 'AddProduct':\r\n      return {\r\n        ...state, addProductModal: action.data\r\n      };\r\n    case 'CreateUser':\r\n      return {\r\n        ...state, createUserModal: action.data\r\n      };\r\n    case 'LogIn':\r\n      return {\r\n        ...state, logInModal: action.data\r\n      };\r\n    default: \r\n      return state;\r\n  }\r\n\r\n};\r\n\r\nexport default reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from \"redux\";\r\nimport { useDispatch, useSelector, TypedUseSelectorHook } from \"react-redux\";\r\n\r\nimport productReducer from './Product/reducer';\r\nimport userReducer from './User/reducer';\r\nimport notificationReducer from './Notification/reducer';\r\nimport shoppingCartReducer from './ShoppingCart/reducer';\r\nimport modalReducer from './modal/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  productReducer,\r\n  userReducer,\r\n  notificationReducer,\r\n  shoppingCartReducer,\r\n  modalReducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport const useAppDispatch = (): AppDispatch  => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default store;","import axios from 'axios';\r\n\r\nconst signIn = async (username: string, password: string):Promise<Credentials> => {\r\n  const request = await axios.post<Credentials>('http://verkkis.herokuapp.com/api/login', { username, password });\r\n  return request.data;\r\n};\r\n\r\nconst createUser = async (user: CreateUserInput):Promise<User> => {\r\n  const request = await axios.post<User>('http://verkkis.herokuapp.com/api/users', user);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  signIn,\r\n  createUser,\r\n};","\r\ntype OpenOrCloseModal = (dispatch: DispatchType) => void;\r\n\r\nexport const handleModal = (data: boolean, modal: Modal): OpenOrCloseModal => {\r\n  const action: ModalAction = {\r\n    type: '',\r\n    modal,\r\n    data\r\n  };\r\n\r\n  console.log('Handle modal action', action);\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\n","import * as actionTypes from \"./actionTypes\";\r\n\r\ntype Cart = (dispatch: DispatchType) => void;\r\n\r\nexport const createNewShoppingCart = (cartId: string): Cart => {\r\n  const action: CreateNewShoppingCartAction = {\r\n    type: actionTypes.CREATE_NEW_SHOPPING_CART,\r\n    cartId\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const addNewProductToShoppingCart = (product: Product, cartId: string): Cart => {\r\n  const data: ShoppingCartProduct = { ...product, quantity: 1};\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.INCREASE_QUANTITY,\r\n    cartId,\r\n    data\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const increaseQuantity = (product: ShoppingCartProduct, cartId: string): Cart => {\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.INCREASE_QUANTITY,\r\n    cartId,\r\n    data: {...product, quantity: product.quantity + 1}\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const decreaseQuantity = (product: ShoppingCartProduct, cartId: string): Cart => {\r\n  console.log('hep', product);\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.DECREASE_QUANTITY,\r\n    cartId,\r\n    data: {...product, quantity: product.quantity - 1}\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const removeProduct = (data: ShoppingCartProduct, cartId: string): Cart => {\r\n  const action: ShoppingCartAction = {\r\n    type: actionTypes.REMOVE_PRODUCT_FROM_CART,\r\n    cartId,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const clearShoppingCart = (): Cart => {\r\n  const action: ClearShoppingCartAction = {\r\n    type: actionTypes.CLEAR_SHOPPINGCART,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};","import axios from 'axios';\r\n\r\n// TODO: FIX RETURN TYPES\r\n\r\nconst createNewShoppingCart = async (products: NewShoppingCart): Promise<ShoppingCartProduct> => {\r\n  const request = await axios.post<ShoppingCartProduct>('http://verkkis.herokuapp.com/api/shoppingCart', products);\r\n  return request.data;\r\n};\r\n\r\nconst addProductToShoppingCart = async (productToAdd: CartProduct):Promise<ShoppingCartProduct> => {\r\n  const request = await axios.post<ShoppingCartProduct>(`http://verkkis.herokuapp.com/api/shoppingCart/${productToAdd.cartId}/addProduct`, productToAdd);\r\n  return request.data;\r\n};\r\n\r\nconst removeProductFromShoppingCart = async (productToRemove: CartProduct): Promise<ShoppingCartProduct> => {\r\n  const request = await axios.put<ShoppingCartProduct>(`http://verkkis.herokuapp.com/api/shoppingCart/${productToRemove.cartId}/remove`, productToRemove);\r\n  return request.data;\r\n};\r\n\r\nconst increaseProductQuantity = async (product: CartProduct):Promise<ShoppingCartProduct> => {\r\n  const request = await axios.put<ShoppingCartProduct>(`http://verkkis.herokuapp.com/api/shoppingCart/${product.cartId}/increase`, product);\r\n  return request.data;\r\n};\r\n\r\nconst decreaseProductQuantity = async (product: CartProduct):Promise<ShoppingCartProduct> => {\r\n  const request = await axios.put<ShoppingCartProduct>(`http://verkkis.herokuapp.com/api/shoppingCart/${product.cartId}/decrease`, product);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  createNewShoppingCart,\r\n  addProductToShoppingCart,\r\n  increaseProductQuantity,\r\n  decreaseProductQuantity,\r\n  removeProductFromShoppingCart,\r\n};","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport userService from '../../services/userService';\r\nimport { logIn } from '../../store/User/actionCreators';\r\nimport { setNotification, hideNotification } from '../../store/Notification/actionCreators';\r\nimport { handleModal } from '../../store/modal/actionCreators';\r\nimport { createNewShoppingCart } from '../../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../../services/shoppingCartService';\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    padding: 5,\r\n    left: 10,\r\n    borderColor: '#124eb0',\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    width: '90%',\r\n  },\r\n\r\n  button: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    padding: 20,\r\n    paddingRight: 5,\r\n    left: '38%',\r\n    transform: `translate(-50%, -$50%)`,\r\n    borderWidth: 3,\r\n    borderRadius: 35,      \r\n    width: 92,\r\n    height: 20,\r\n    opacity: 0.95,\r\n    backgroundColor: '#124eb0',\r\n    fontSize: 16,\r\n    fontStyle: 'bold',\r\n    color: 'white'  \r\n  },\r\n});\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  userName: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n\r\n  password: Yup\r\n    .string()\r\n    .min(2, 'Too Short!')\r\n    .max(50, 'Too Long!')\r\n    .required('Required'),\r\n});\r\n\r\nconst LogInForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const cartState: ShoppingCartState = useAppSelector(state => state.shoppingCartReducer);\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: '',\r\n          password: '',\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const user = userService.signIn(values.userName, values.password);\r\n          void user.then((res) => {\r\n            if (res.token === undefined) {\r\n              const notificationType: NotificationType = 'error';\r\n              dispatch(setNotification(\"Invalid username / password\", notificationType));\r\n              setTimeout(() => {\r\n                dispatch(hideNotification());\r\n              }, 5000);\r\n            } else {\r\n              const credentials: Credentials = {\r\n                id: res.id,\r\n                firstName: res.firstName,\r\n                lastName: res.lastName,\r\n                userName: res.userName,\r\n                userType: res.userType,\r\n                token: res.token,\r\n              };\r\n              dispatch(logIn(credentials));\r\n              dispatch(handleModal(false, 'LogIn'));\r\n              const notificationType: NotificationType = 'success';\r\n              dispatch(setNotification(\"Logged in as: \" + credentials.userName, notificationType));\r\n              setTimeout(() => {\r\n                dispatch(hideNotification());\r\n              }, 5000);\r\n              const promise = shoppingCartService.createNewShoppingCart({ products: cartState.cart, userId: res.id });\r\n              void promise.then((res) => {\r\n                console.log('response', res);\r\n                dispatch(createNewShoppingCart(res.id));\r\n              });\r\n            }\r\n          });\r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Username: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.userName && touched.userName ? (\r\n                    <div>{errors.userName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              \r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.password && touched.password ? (\r\n                    <div>{errors.password}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n );\r\n};\r\n\r\n export default LogInForm;\r\n","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport LogInForm from '../forms/User/LogInForm';\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n  paper: {\r\n      position: 'absolute',\r\n      width: 450,\r\n      height: 170,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: '0 30px',\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <h2 className={classes.header}> Log In</h2>\r\n  );\r\n};\r\n\r\n\r\nconst LogInModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer.logInModal);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen, 'LogIn'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <LogInForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LogInModal;","import axios from 'axios';\r\n\r\nconst getAll = ():Promise<Product[]> => {\r\n  const request = axios.get<Product[]>('http://verkkis.herokuapp.com/api/products');\r\n  return request.then(response => response.data);\r\n};\r\n\r\nconst addProduct = async (product: NoIdProduct):Promise<Product> => {\r\n  const request = await axios.post<Product>('http://verkkis.herokuapp.com/api/products', product);\r\n  return request.data;\r\n};\r\n\r\nconst deleteProduct = async (product: Product): Promise<Product> => {\r\n  const request = await axios.delete<Product>(`http://verkkis.herokuapp.com/api/products/${product.id}`);\r\n  return request.data;\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  addProduct,\r\n  deleteProduct\r\n};","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport { AppDispatch, useAppDispatch } from '../../store/rootReducer';\r\nimport productService from '../../services/productService';\r\nimport { addProduct } from '../../store/Product/actionCreators';\r\nimport { setNotification, hideNotification } from '../../store/Notification/actionCreators';\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    padding: 5,\r\n    borderColor: '#124eb0',\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    width: '90%',\r\n    maxWidth: 700\r\n  },\r\n  \r\n  button: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    padding: 20,\r\n    paddingRight: 75,\r\n    marginTop: 10,\r\n    left: '38%',\r\n    transform: `translate(-50%, -$50%)`,\r\n    borderWidth: 3,\r\n    borderRadius: 35,      \r\n    width: 92,\r\n    height: 20,\r\n    opacity: 0.95,\r\n    backgroundColor: '#124eb0',\r\n    fontSize: 16,\r\n    fontStyle: 'bold',\r\n    color: 'white'  \r\n  },\r\n});\r\n\r\n const SignupSchema = Yup.object().shape({\r\n  name: Yup\r\n    .string()\r\n    .required(\"Required\"),\r\n  description: Yup\r\n    .string(),\r\n  price: Yup\r\n    .number()\r\n    .required(\"Required\"),\r\n  stock: Yup\r\n    .number(),\r\n  image: Yup\r\n    .string()\r\n });\r\n \r\n const AddProductForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n    return (\r\n      <div>\r\n        <Formik\r\n          initialValues={{\r\n            name: '',\r\n            description: '',\r\n            price: 0,\r\n            stock: 0,\r\n            image: '',\r\n          }}\r\n          validationSchema={SignupSchema}\r\n          onSubmit={values => {\r\n            const { name, description, price, stock, image } = values;\r\n            const product: NoIdProduct = { name, description, price, stock, image};\r\n            const promise = productService.addProduct(product);\r\n            void promise.then((res) => {\r\n              const addedProduct: Product = {\r\n                name: res.name,\r\n                description: res.description,\r\n                price: res.price,\r\n                stock: res.stock,\r\n                image: res.image,\r\n                id: res.id\r\n              };\r\n              dispatch(addProduct(addedProduct));\r\n              const text = \"Product \" + product.name + \" added\";\r\n              const type: NotificationType = 'success';\r\n              dispatch(setNotification(text, type));\r\n              setTimeout(() => {\r\n                dispatch(hideNotification());\r\n              }, 5000);\r\n            });\r\n          }}\r\n        >\r\n          {({ errors, touched }) => (\r\n            <Form>\r\n              <Grid container spacing={1}>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Name: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"My New Product\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.name && touched.name ? (\r\n                      <div>{errors.name}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Description: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"So useless product that Wish.com should sell these\"\r\n                      type=\"text\"\r\n                      name=\"description\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.description && touched.description ? (\r\n                      <div>{errors.description}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Price: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"Price\"\r\n                      type=\"number\"\r\n                      name=\"price\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.price && touched.price ? (\r\n                      <div>{errors.price}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Stock: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"Stock\"\r\n                      type=\"number\"\r\n                      name=\"stock\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.stock && touched.stock ? (\r\n                      <div>{errors.stock}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container item xs={12} spacing={3}>\r\n                  <Grid item xs={2}>\r\n                    <label>Image: </label>\r\n                  </Grid>\r\n                  <Grid item xs={9}>\r\n                    <Field\r\n                      className={classes.field}\r\n                      placeholder=\"www.image.com\"\r\n                      type=\"text\"\r\n                      name=\"image\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                    {errors.image && touched.image ? (\r\n                      <div>{errors.image}</div>\r\n                    ) : null}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <button className={classes.button} type=\"submit\">Submit</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n  );\r\n};\r\n\r\n export default AddProductForm;","import * as actionTypes from \"./actionTypes\";\r\nimport productService from '../../services/productService';\r\n\r\ntype ProductDispatch = (dispatch: DispatchType) => void;\r\n\r\nexport const addProduct = (data: Product): ProductDispatch => {\r\n  const action: AddProductAction = {\r\n    type: actionTypes.ADD_PRODUCT,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const removeProduct = (data: Product): ProductDispatch => {\r\n  const action: AddProductAction = {\r\n    type: actionTypes.REMOVE_PRODUCT,\r\n    data,\r\n  };\r\n\r\n  return (dispatch: DispatchType) => {\r\n    dispatch(action);\r\n  };\r\n};\r\n\r\nexport const initializeProducts = () => {\r\n  \r\n  return async (dispatch: (arg0: { type: string; data: Product[]; }) => void): Promise<void> => {\r\n    const data = await productService.getAll();\r\n    const action: GetProductsAction = {\r\n      type: actionTypes.GET_PRODUCTS,\r\n      data,\r\n    };\r\n    \r\n    dispatch(action);\r\n  };\r\n};","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AddProductForm from '../forms/product/AddProductForm';\r\n\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n      position: 'absolute',\r\n      width: 650,\r\n      height: 350,\r\n      backgroundColor: theme.palette.background.paper,\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: '0 30px',\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Add Product </h2>\r\n  );\r\n};\r\n\r\nconst AddProductModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n\r\n  const modalOpen = useAppSelector(state => state.modalReducer.addProductModal);\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const handleClose = () => {\r\n    dispatch(handleModal(!modalOpen, 'AddProduct'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <AddProductForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default AddProductModal;  ","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport userService from '../../services/userService';\r\nimport { AppDispatch, useAppDispatch } from '../../store/rootReducer';\r\nimport { setNotification, hideNotification } from '../../store/Notification/actionCreators';\r\nimport { handleModal } from '../../store/modal/actionCreators';\r\n\r\n const useStyles = makeStyles({\r\n\r\n  field: {\r\n      padding: 5,\r\n      borderColor: '#124eb0',\r\n      position: 'relative',\r\n      marginBottom: 10,\r\n      width: '90%',\r\n      maxWidth: 700\r\n  },\r\n  button: {\r\n      display: 'inline-flex',\r\n      alignItems: 'center',\r\n      position: 'relative',\r\n      padding: 20,\r\n      paddingRight: 75,\r\n      marginTop: 10,\r\n      left: '42%',\r\n      transform: `translate(-50%, -$50%)`,\r\n      borderWidth: 3,\r\n      borderRadius: 35,      \r\n      width: 92,\r\n      height: 20,\r\n      opacity: 0.95,\r\n      backgroundColor: '#124eb0',\r\n      fontSize: 16,\r\n      fontStyle: 'bold',\r\n      color: 'white'  \r\n  },\r\n});\r\n\r\n const SignupSchema = Yup.object().shape({\r\n    userName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    firstName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    lastName: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    password: Yup\r\n      .string()\r\n      .min(2, 'Too Short!')\r\n      .max(50, 'Too Long!')\r\n      .required('Required'),\r\n\r\n    email: Yup\r\n      .string()\r\n      .email('Invalid email')\r\n      .required('Required'),\r\n });\r\n \r\n const CreateUserForm = ():JSX.Element => {\r\n   const classes = useStyles();\r\n   const dispatch: AppDispatch = useAppDispatch();\r\n   return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          userName: '',\r\n          firstName: '',\r\n          lastName: '',\r\n          password: '',\r\n          email: '',\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          const newUser: NoIdUser = { \r\n            userName: values.userName,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            password: values.password,\r\n            email: values.email,\r\n            userType: 'User' \r\n          };\r\n          const promise = userService.createUser(newUser);\r\n          void promise.then((res) => {\r\n            // TODO: Korjaa backendi palauttamaan mikä kohta lomakkeessa feilaa\r\n            if (res === null) {\r\n              dispatch(setNotification(\"User creation failed\",  'error'));\r\n            } else {\r\n              dispatch(handleModal(false, 'CreateUser'));\r\n              dispatch(setNotification(\"Created user: \" + newUser.userName, 'success'));\r\n            }\r\n            setTimeout(() => {\r\n              dispatch(hideNotification());\r\n            }, 5000);       \r\n          });    \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Username: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Username\"\r\n                    type=\"text\"\r\n                    name=\"userName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.userName && touched.userName ? (\r\n                    <div>{errors.userName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Firstname: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Firstname\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.firstName && touched.firstName ? (\r\n                    <div>{errors.firstName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Lastname: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Lastname\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.lastName && touched.lastName ? (\r\n                    <div>{errors.lastName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Password: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.password && touched.password ? (\r\n                    <div>{errors.password}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Email: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"example@gmail.com\"\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.email && touched.email ? (\r\n                    <div>{errors.email}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <button className={classes.button} type=\"submit\">Submit</button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n );\r\n};\r\n\r\n export default CreateUserForm;","import React, { useState } from \"react\";\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CreateUserForm from \"../forms/User/CreateUserForm\";\r\n\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../store/rootReducer';\r\nimport { handleModal } from \"../store/modal/actionCreators\";\r\n\r\nconst getModalStyle = () => {\r\n  const top = 50;\r\n  const left = 50;\r\n  return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n\r\n  paper: {\r\n    position: 'absolute',\r\n    width: 650,\r\n    height: 370,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n\r\n  header: {\r\n    background: 'linear-gradient(45deg, #124eb0 70%, #501573 90%)',\r\n    border: 0,\r\n    borderRadius: 30,\r\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    height: 30,\r\n    marginTop: 5,\r\n    padding: 10,\r\n    marginBottom: 30\r\n  },\r\n}));\r\n\r\nconst Header: React.FC = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <h2 className={classes.header}> Create User </h2>\r\n  );\r\n};\r\n\r\nconst CreateUserModal: React.FC = () => {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  \r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const modalOpen = useAppSelector(state => state.modalReducer.createUserModal);\r\n\r\n  const handleClose = () => {\r\n    dispatch(handleModal(false, 'CreateUser'));\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n      open={modalOpen}\r\n      onClose={handleClose}\r\n    >\r\n      <div style={modalStyle} className={classes.paper}>\r\n        <Header />\r\n        <CreateUserForm />\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CreateUserModal;  ","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logIn } from '../store/User/actionCreators';\r\nimport { setNotification, hideNotification } from '../store/Notification/actionCreators';\r\nimport { useAppDispatch, AppDispatch } from '../store/rootReducer';\r\nimport LogInModal from '../modals/LogInModal';\r\nimport AddProductModal from '../modals/AddProductModal';\r\nimport CreateUserModal from '../modals/CreateUserModal';\r\nimport { clearShoppingCart } from '../store/ShoppingCart/actionCreators';\r\nimport { handleModal } from '../store/modal/actionCreators';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    marginRight: theme.spacing(10),\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    marginLeft: 'auto',\r\n    marginRight: -12,\r\n    fontSize: 15\r\n  },\r\n  login: {\r\n    margin: theme.spacing(2),\r\n    fontSize: 15,\r\n  },\r\n  addProductIcon: {\r\n    height: 30,\r\n    width: 30,\r\n  },\r\n  shoppingCart: {\r\n    color: 'white',\r\n    fontSize: 30\r\n  }\r\n}));\r\n\r\ntype UserProp = {\r\n  user: Credentials | null\r\n};\r\n\r\nconst Navibar: React.FC<UserProp> = ({ user }) => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const logOut = () => {\r\n    dispatch(logIn(null));\r\n    dispatch(clearShoppingCart());\r\n    dispatch(setNotification(\"Have a nice day\", 'success'));\r\n    setTimeout(() => {\r\n      dispatch(hideNotification());\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"primary\">\r\n        <Toolbar>\r\n          <Link to=\"/\">\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Link>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            Verkkokauppa\r\n          </Typography>\r\n          <div className={classes.buttons}>\r\n            {user !== null && user.userType === 'Admin' ?\r\n              <IconButton onClick={() => dispatch(handleModal(true, 'AddProduct'))} color=\"inherit\">\r\n                <Tooltip title=\"Add product\">\r\n                  <AddCircleOutlineIcon className={classes.addProductIcon} />\r\n                </Tooltip>\r\n              </IconButton>\r\n            :\r\n              null\r\n            }\r\n            {user === null ?\r\n              <div>\r\n                <Button onClick={() => dispatch(handleModal(true, 'LogIn'))} color=\"inherit\">\r\n                  <Typography variant=\"h6\" className={classes.login}>\r\n                    Login\r\n                  </Typography>\r\n                </Button>\r\n              </div>  \r\n              :\r\n              <div>\r\n                <Button onClick={() => logOut()} color=\"inherit\">\r\n                  <Typography variant=\"h6\" className={classes.login}>\r\n                    Log out\r\n                  </Typography>\r\n                </Button>\r\n              </div>\r\n            }\r\n            {user === null ?\r\n              <div>\r\n                <Button onClick={() => dispatch(handleModal(true, 'CreateUser'))} color=\"inherit\">\r\n                  <Typography variant=\"h6\" className={classes.login}>\r\n                    Create User\r\n                  </Typography>\r\n                </Button>\r\n              </div>  \r\n              :\r\n              null\r\n            }\r\n            <div>\r\n              <Link to=\"/shoppingCart\">\r\n                <IconButton className={classes.shoppingCart} >\r\n                  <ShoppingCartIcon style={{ fontSize: 30, marginTop: 5}}/>\r\n                </IconButton>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </Toolbar>\r\n        <LogInModal />\r\n        <AddProductModal />\r\n        <CreateUserModal />\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navibar;\r\n","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Delete from '@material-ui/icons/DeleteForever';\r\n\r\nimport { useAppSelector, AppDispatch, useAppDispatch } from '../store/rootReducer';\r\nimport productService from '../services/productService';\r\nimport { removeProduct } from '../store/Product/actionCreators';\r\nimport { setNotification, hideNotification } from '../store/Notification/actionCreators';\r\nimport { increaseQuantity, addNewProductToShoppingCart } from '../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 170,\r\n    marginRight: 20\r\n  },\r\n  centerText: {\r\n    textAlign: 'center',\r\n  },\r\n  media: {\r\n    height: 160,\r\n  },\r\n  overflow: {\r\n    maxWidth: 170,\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis'\r\n  },\r\n});\r\n\r\nconst Product: React.FC<{ product: Product }> = ({ product }): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const user: Credentials | null = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n  const shoppingCart = useAppSelector(state => state.shoppingCartReducer.cart);\r\n\r\n  const deleteProduct = () => {\r\n    // Todo: Tarkistus että tuote todella on poistettu kannasta ennen frontista deletointia ?\r\n    void productService.deleteProduct(product);\r\n    dispatch(removeProduct(product));\r\n    dispatch(setNotification(\"Removed \" + product.name, 'info'));\r\n    setTimeout(() => {\r\n      dispatch(hideNotification());\r\n    }, 5000);\r\n  };\r\n\r\n  const handleShoppingCart = () => {\r\n    const isProductAlreadyInCart = shoppingCart.some(p => p.id === product.id);\r\n    let shoppingCartProduct: ShoppingCartProduct | undefined = shoppingCart.find(p => p.id === product.id);\r\n\r\n    if (shoppingCartProduct === undefined) {   \r\n      shoppingCartProduct = {...product, quantity: 1};\r\n    }\r\n    \r\n    if (isProductAlreadyInCart) {\r\n      console.log(\"Product already in cart, increasing quantity\"); \r\n      updateShoppingCartProductQuantity(shoppingCartProduct);\r\n    } else {\r\n      console.log(\"Adding new product to cart\");    \r\n      addProductToShoppingCart(shoppingCartProduct);\r\n    }\r\n  };\r\n\r\n  const addProductToShoppingCart = (shoppingCartProduct: ShoppingCartProduct) => {  \r\n    if (!user) {\r\n      dispatch(addNewProductToShoppingCart(shoppingCartProduct, cartId));\r\n    } else {\r\n      const response = shoppingCartService.addProductToShoppingCart({ product: shoppingCartProduct, userId: user.id, cartId});\r\n      void response.then((res) => {\r\n        console.log('res', res);\r\n        dispatch(addNewProductToShoppingCart(shoppingCartProduct, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  const updateShoppingCartProductQuantity = (shoppingCartProduct: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(increaseQuantity(shoppingCartProduct, cartId));\r\n    } \r\n  };\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardActionArea>\r\n      <CardMedia\r\n          className={classes.media}\r\n          image={product.image}\r\n        />\r\n        <CardContent>\r\n          <Typography className={`${classes.overflow} ${classes.centerText}`} style={{ fontSize: 16 }} gutterBottom variant=\"h6\" component=\"h2\">\r\n            {product.name} <br/> {product.price}€ \r\n          </Typography>\r\n          <Typography className={`${classes.overflow} ${classes.centerText}`} variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {product.description}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" onClick={() => handleShoppingCart()}>\r\n          Lisää ostoskoriin\r\n        </Button>\r\n        {user !== null && user.userType === 'Admin' ?         \r\n          <IconButton onClick={() => deleteProduct()}>\r\n            <Tooltip title=\"Remove product from database\">\r\n              <Delete />\r\n            </Tooltip>\r\n          </IconButton>\r\n        :\r\n          null\r\n        }\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;","import React from \"react\";\r\nimport Product from './Product';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useAppSelector } from '../store/rootReducer';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: 'flex',\r\n    paddingLeft: 15\r\n  },\r\n});\r\n\r\nconst ProductListPage: React.FC = () => {\r\n  const classes = useStyles();\r\n\r\n  const products: Product[] = useAppSelector(\r\n    state => state.productReducer.products\r\n  );\r\n\r\n  if (products.length === 0) {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {products.map((product: Product) => (\r\n        <Product key={product.id} product={product} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductListPage;  ","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport * as Yup from 'yup';\r\n\r\nimport { AppDispatch, useAppDispatch, useAppSelector } from '../../store/rootReducer';\r\nimport { setNotification, hideNotification } from '../../store/Notification/actionCreators';\r\nimport { userCheck } from '../../typeGuards';\r\n\r\nconst useStyles = makeStyles({\r\n  field: {\r\n    padding: 5,\r\n    borderColor: '#124eb0',\r\n    position: 'relative',\r\n    marginBottom: 10,\r\n    width: '90%',\r\n    maxWidth: 700\r\n  },\r\n  \r\n  button: {\r\n    display: 'inline-flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    padding: 20,\r\n    paddingRight: 75,\r\n    marginTop: 10,\r\n    paddingBottom: 20,\r\n    transform: `translate(-50%, -$50%)`,\r\n    borderWidth: 3,\r\n    borderRadius: 10,      \r\n    width: 92,\r\n    height: 20,\r\n    opacity: 0.95,\r\n    backgroundColor: '#124eb0',\r\n    fontSize: 16,\r\n    fontStyle: 'bold',\r\n    color: 'white'  \r\n  },\r\n\r\n  logInText: {\r\n    position: 'relative',\r\n    marginLeft: 20,\r\n    marginTop: 20,\r\n  }\r\n});\r\n\r\nconst ShippingSchema = Yup.object().shape({\r\nfirstName: Yup\r\n  .string()\r\n  .required(\"Required\"),\r\nlastName: Yup\r\n  .string()\r\n  .required(\"Required\"),\r\naddress: Yup\r\n  .string()\r\n  .required(\"Required\")\r\n});\r\n \r\nconst ShoppingCartForm = ():JSX.Element => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  const classes = useStyles();\r\n\r\n  const user: Credentials | null = useAppSelector(state => state.userReducer.user);\r\n  const products: ShoppingCartProduct[] = useAppSelector(state => state.shoppingCartReducer.cart);\r\n\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: '',\r\n          lastName: '',\r\n          address: '',\r\n        }}\r\n        validationSchema={ShippingSchema}\r\n        onSubmit={values => {\r\n          const { firstName, lastName, address } = values;\r\n          const shippingInfo: ShippingInfo = { firstName, lastName, address };\r\n\r\n          if (userCheck(user)) {\r\n            const text = \"Delivering products to \" + shippingInfo.address;\r\n            const type: NotificationType = 'success';\r\n            dispatch(setNotification(text, type));\r\n            setTimeout(() => {\r\n              dispatch(hideNotification());\r\n            }, 5000);\r\n          }    \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Grid container spacing={1}>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>First name: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"First name\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.firstName && touched.firstName ? (\r\n                    <div>{errors.firstName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Last name: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Last name\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.lastName && touched.lastName ? (\r\n                    <div>{errors.lastName}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                <Grid item xs={2}>\r\n                  <label>Address: </label>\r\n                </Grid>\r\n                <Grid item xs={9}>\r\n                  <Field\r\n                    className={classes.field}\r\n                    placeholder=\"Address\"\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={1}>\r\n                  {errors.address && touched.address ? (\r\n                    <div>{errors.address}</div>\r\n                  ) : null}\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n              <button disabled={user === null} className={classes.button} type=\"submit\"> Submit </button>\r\n                {user === null ?\r\n                  <Typography variant=\"subtitle1\" className={classes.logInText}> Please sign in first </Typography>\r\n                  :\r\n                  null\r\n                }\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartForm;","import React from 'react';\r\nimport { useAppDispatch, AppDispatch, useAppSelector } from '../store/rootReducer';\r\nimport { makeStyles  } from '@material-ui/styles';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Typography, IconButton } from '@material-ui/core';\r\nimport { Add, Remove } from '@material-ui/icons';\r\nimport { grey, red } from '@material-ui/core/colors';\r\n\r\nimport { decreaseQuantity, removeProduct, increaseQuantity } from '../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\n\r\nconst useStyles = makeStyles({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  card: {\r\n    width: 380,\r\n    maxHeight: 140,\r\n    marginBottom: 15\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: 120\r\n  },\r\n  content: {\r\n    width: 190,\r\n    height: 20,\r\n    flex: '1 0 auto',\r\n    backgroundColor: grey[200],\r\n  },\r\n  info: {\r\n    whiteSpace: 'nowrap',\r\n    overflow: 'hidden',\r\n    textOverflow: 'ellipsis',\r\n  },\r\n  image: {\r\n    width: '100%',\r\n  },\r\n  contentAndImage: {\r\n    display: 'flex',\r\n    maxHeight: 120\r\n  },\r\n  deleteButton: {\r\n    display: 'flex',\r\n    backgroundColor: red[400],\r\n    justifyContent: 'center',\r\n  },\r\n  iconButtons: {\r\n    position: 'relative',\r\n    top: 50,\r\n  },\r\n});\r\n\r\ninterface props {\r\n  product: ShoppingCartProduct\r\n}\r\n\r\nconst ShoppingCartCard: React.FC<props> = ({ product }): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  \r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n\r\n  const user = useAppSelector(state => state.userReducer.user);\r\n  let userId: string;\r\n  if (!user) {\r\n    userId = '';\r\n  } else {\r\n    userId = user.id;\r\n  }\r\n\r\n  const removeProductFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(removeProduct(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.removeProductFromShoppingCart({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(removeProduct(product, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  const decreaseQuantityFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(decreaseQuantity(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.decreaseProductQuantity({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(decreaseQuantity(product, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  const increaseQuantityFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(increaseQuantity(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.increaseProductQuantity({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(increaseQuantity(product, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Card className={classes.card}>\r\n        <div className={classes.contentAndImage}>\r\n          <div className={classes.details}>\r\n            <CardContent className={classes.content}>\r\n              <Typography className={classes.info} component=\"h6\" variant=\"h6\">\r\n                {product.name} x {product.quantity.toString()}\r\n              </Typography>\r\n              <Typography className={classes.info} variant=\"subtitle1\" color=\"textSecondary\">\r\n                {product.description}\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\r\n                {product.price}€\r\n              </Typography>\r\n            </CardContent>\r\n          </div>\r\n          <CardMedia\r\n            className={classes.image}\r\n            image={product.image}\r\n          />\r\n        </div>\r\n        <div>\r\n          <CardActionArea className={classes.deleteButton} onClick={() => removeProductFromCart(product)}>\r\n            Remove item(s) from cart\r\n          </CardActionArea>\r\n        </div>        \r\n      </Card>\r\n      <div className={classes.iconButtons}>\r\n        <IconButton onClick={() => decreaseQuantityFromCart(product)}>\r\n          <Remove />\r\n        </IconButton>\r\n        <IconButton onClick={() => increaseQuantityFromCart(product)}>\r\n          <Add style={{ marginLeft: -10 }}/>\r\n        </IconButton>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ShoppingCartCard;","import React from 'react';\r\nimport { useAppSelector, useAppDispatch, AppDispatch } from '../store/rootReducer';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Box, Container, Grid } from '@material-ui/core';\r\n\r\nimport ShoppingCartForm from '../forms/shoppingCart/ShoppingCartForm';\r\nimport ShoppingCartCard from './ShoppingCartCard';\r\nimport { removeProduct } from '../store/ShoppingCart/actionCreators';\r\nimport shoppingCartService from '../services/shoppingCartService';\r\n\r\nconst useStyles = makeStyles({\r\n  box: {\r\n    maxHeight: 350\r\n  },\r\n  shoppingCartAndFormBox: {\r\n    margin: 25,\r\n    borderRadius: 15,\r\n  },\r\n  cart: {\r\n    margin: 25,\r\n    borderRadius: 5,\r\n    height: 300\r\n  },\r\n  container: {\r\n    marginTop: 15, \r\n  },\r\n  deleteIcon: {\r\n    position: 'relative',\r\n    top: -15\r\n  },\r\n  form: {\r\n    borderWidth: 1,\r\n    marginTop: 75,\r\n    padding: 10,\r\n  },\r\n  empty: {\r\n    position: 'relative',\r\n    top: '50%',\r\n    left: '25%',\r\n  }\r\n});\r\n\r\nconst ShoppingCart: React.FC = (): JSX.Element => {\r\n  const classes = useStyles();\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n\r\n  const products: ShoppingCartProduct[] = useAppSelector(\r\n    state => state.shoppingCartReducer.cart\r\n  );\r\n\r\n  const user: Credentials | null = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n  let userId: string;\r\n  if (!user) {\r\n    userId = '';\r\n  } else {\r\n    userId = user.id;\r\n  }\r\n\r\n  const cartId = useAppSelector(state => state.shoppingCartReducer.cartId);\r\n\r\n  const removeProductFromCart = (product: ShoppingCartProduct) => {\r\n    if (!user) {\r\n      dispatch(removeProduct(product, cartId));\r\n    } else {\r\n      const promise = shoppingCartService.removeProductFromShoppingCart({ cartId, userId, product });\r\n      void promise.then(() => {\r\n        dispatch(removeProduct(product, cartId));\r\n      });\r\n    }\r\n  };\r\n\r\n  const totalPrice = () => {\r\n    return products.reduce((prev, cur) => prev + cur.price * cur.quantity, 0);\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.box} border={1}>\r\n      <Grid container item xs={12} spacing={3}>\r\n        <Grid item xs={5}>\r\n          <Box border={1} className={classes.cart}> \r\n            {products.length === 0 ?\r\n              <Typography variant='h5' className={classes.empty}> Your Shopping Cart Is Empty </Typography>\r\n              :\r\n              <div style={{ maxHeight: 300, overflow: 'auto' }}>\r\n                {products.map(product => {\r\n                  if (product.quantity > 0) {\r\n                    return (\r\n                      <Container className={classes.container} key={product.id} maxWidth=\"sm\">\r\n                        <ShoppingCartCard product={product} />\r\n                      </Container>\r\n                    );\r\n                  } else {\r\n                    removeProductFromCart(product);\r\n                  }\r\n                })}\r\n                <Typography variant='h5' style={{ marginLeft: 20 }}>\r\n                  Total price: {totalPrice()}\r\n                </Typography>  \r\n              </div>\r\n              \r\n            }\r\n          </Box>\r\n        </Grid>  \r\n        <Grid item xs={7}>\r\n          <Box border={1} className={classes.shoppingCartAndFormBox}>\r\n            <div className={classes.form}> \r\n              <ShoppingCartForm />\r\n            </div>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ShoppingCart;","import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\ninterface NotificationProps {\r\n  type: NotificationType,\r\n  message: string\r\n}\r\n\r\nconst Alert: React.FC<NotificationProps> = ({ type, message }: NotificationProps) => {\r\n  switch (type) {\r\n    case 'success':\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"success\" > {message} </MuiAlert>;\r\n\r\n    case 'error':\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" > {message} </MuiAlert>;\r\n\r\n    default:\r\n      return <MuiAlert elevation={6} variant=\"filled\" severity=\"info\" > {message} </MuiAlert>;   \r\n  } \r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '15%',\r\n    position: 'relative',\r\n    marginBottom: 15,\r\n    left: 15,\r\n  },\r\n});\r\n\r\nconst Notification: React.FC<NotificationProps> = ({ type, message }: NotificationProps) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Alert type={type} message={message} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\r\n\r\nimport Navibar from './components/Navibar';\r\nimport ProductListPage from './components/ProductListPage';\r\nimport ShoppingCart from './components/ShoppingCart';\r\n\r\nimport { initializeProducts } from './store/Product/actionCreators';\r\nimport { useAppSelector, useAppDispatch, AppDispatch } from './store/rootReducer';\r\nimport Notification from './UI/Notification';\r\n\r\nconst App: React.FC = () => {\r\n  const dispatch: AppDispatch = useAppDispatch();\r\n  useEffect(() => {\r\n    void dispatch(initializeProducts());\r\n  },[]);\r\n\r\n  const user: Credentials | null = useAppSelector(\r\n    state => state.userReducer.user\r\n  );\r\n\r\n  const notification: NotificationState = useAppSelector(\r\n    state => state.notificationReducer\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Navibar user={user} />\r\n        <br/>\r\n        {notification.visible ?\r\n        <div>\r\n          <Notification type={notification.type} message={notification.message} />\r\n        </div>\r\n        :\r\n          null\r\n        }\r\n        <Switch>\r\n          <Route path=\"/shoppingCart\" render={() => <ShoppingCart />} />\r\n        </Switch> \r\n\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <ProductListPage />} />\r\n        </Switch>\r\n\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","  \r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport store from './store/rootReducer';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}